<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OSRD â€“ Contribute to OSRD</title><link>https://osrd.fr/en/docs/guides/contribute/</link><description>Recent content in Contribute to OSRD on OSRD</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://osrd.fr/en/docs/guides/contribute/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Report issues</title><link>https://osrd.fr/en/docs/guides/contribute/bug-reports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://osrd.fr/en/docs/guides/contribute/bug-reports/</guid><description>
&lt;p>&lt;strong>Please report anything you deem significant!&lt;/strong>&lt;/p>
&lt;p>Our bug tracking platform is github, so have to register to report bugs.&lt;/p>
&lt;p>Follow &lt;a href="https://github.com/DGEXSolutions/osrd/issues/new/choose">this link&lt;/a> and pick whatever template fits the best.&lt;/p></description></item><item><title>Docs: Contribute code</title><link>https://osrd.fr/en/docs/guides/contribute/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://osrd.fr/en/docs/guides/contribute/code/</guid><description>
&lt;h2 id="set-things-up">Set things up&lt;/h2>
&lt;div class="alert alert-info" role="alert">
Most OSRD developers use Linux. Windows and MacOS should work too, but you may run into some issues.
&lt;/div>
&lt;h3 id="getting-the-source-code">Getting the source code&lt;/h3>
&lt;ul>
&lt;li>Install &lt;a href="https://git-scm.com/">&lt;code>git&lt;/code>&lt;/a>.&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;li>Open a terminal&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> in the folder where the source code of OSRD will be located&lt;/li>
&lt;li>Run &lt;code>git clone git@github.com:DGEXSolutions/osrd&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="launch-the-application-with-docker-compose">Launch the application with docker-compose&lt;/h3>
&lt;p>For a long time, making changes to a component of a multi-service application involved compiling, configuring and running all services manually.&lt;/p>
&lt;p>Nowadays, it can be done using &lt;code>docker-compose&lt;/code>. You can even start only a subset of the services.&lt;/p>
&lt;ul>
&lt;li>Install &lt;code>docker&lt;/code> and &lt;code>docker-compose&lt;/code>. &lt;sup id="fnref1:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;li>Run &lt;code>docker-compose up --build&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="share-your-changes">Share your changes&lt;/h2>
&lt;div class="alert alert-warning" role="alert">
&lt;p>The source code of OSRD is available under &lt;a href="https://choosealicense.com/licenses/lgpl-3.0/">the LGPLv3 license&lt;/a>.
By contributing to the codebase, you consent to the distribution of your changes under the project&amp;rsquo;s license.&lt;/p>
&lt;p>LGPLv3 forbids modifying source code without sharing the changes under the same license: use other people&amp;rsquo;s work, and share yours!&lt;/p>
&lt;p>This constraint does not propagate through APIs: You can use OSRD as a library, framework or API server to interface with proprietary software. Please suggest changes if you need new interfaces.&lt;/p>
&lt;/div>
&lt;p>This chapter is about the process of integrating changes into the common code base. &lt;strong>If you need help at any stage, open an issue or message us.&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>If you are not used to Git, &lt;a href="https://learngitbranching.js.org/">follow this tutorial&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Create a branch&lt;/strong>&lt;br>
If you intend to contribute regularly, you can request access to the &lt;a href="https://github.com/DGEXSolutions/osrd">main repository&lt;/a>. Otherwise, &lt;a href="https://github.com/DGEXSolutions/osrd/fork">create a fork&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Add changes to your branch&lt;/strong>&lt;br>
Before you start working, try to split your work into macroscopic steps. At the end of each stop, save your changes into a commit. Try to follow &lt;a href="../conventions/">style conventions&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Open a pull request&lt;/strong>&lt;br>
Once your changes are ready, you have to request integration with the &lt;code>dev&lt;/code> branch. It can be done through &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request">the web interface&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Take feedback into account&lt;/strong>&lt;br>
Once your pull request is open, &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/reviewing-changes-in-pull-requests/about-pull-request-reviews">other contributors can review your changes&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>Any user can review your changes&lt;/li>
&lt;li>Your code has to be approved by a contributor &lt;a href="https://github.com/DGEXSolutions/osrd/blob/dev/.github/CODEOWNERS">familiar with the code&lt;/a>&lt;/li>
&lt;li>All users are expected to take critical comments into account&lt;/li>
&lt;li>Comments tend to be written in an open and direct manner. The intent is to efficiently collaborate towards a solution we all agree on.&lt;/li>
&lt;li>Once all discussions are resolved, a maintainer integrates the change.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>If you believe somebody forgot to review / merge your change, please speak out, multiple times if needs be.&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="git-commit-style">Git commit style&lt;/h2>
&lt;p>The overall format for git commits is as follows:&lt;/p>
&lt;pre tabindex="0">&lt;code>component: imperative description of the change
Detailed description of the change and what motivates it,
if it is not entirely obvious from the title.
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;strong>the commit message, just like the code, must be in english&lt;/strong>&lt;/li>
&lt;li>all lowercase&lt;/li>
&lt;li>there can be multiple components separated by &lt;code>:&lt;/code> in case of hierarchical relationships, with &lt;code>,&lt;/code> otherwise&lt;/li>
&lt;li>the body of the commit should probably contain a detailed description of the change&lt;/li>
&lt;/ul>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Under Linux, use your distribution&amp;rsquo;s package manager, such as &lt;code>apt-get&lt;/code>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref1:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Under Windows, open &lt;code>Git Bash&lt;/code>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Docs: Review code</title><link>https://osrd.fr/en/docs/guides/contribute/code-reviews/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://osrd.fr/en/docs/guides/contribute/code-reviews/</guid><description>
&lt;figure>&lt;a href="https://www.morling.dev/blog/the-code-review-pyramid/">
&lt;img src="https://osrd.fr/en/docs/guides/contribute/code-reviews/images/code_review_pyramid.svg"/> &lt;/a>
&lt;/figure></description></item></channel></rss>