<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OSRD – Référence technique</title><link>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/</link><description>Recent content in Référence technique on OSRD</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://dgexsolutions.github.io/osrd-website/fr/docs/reference/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Architecture</title><link>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/architecture/</guid><description>
&lt;p>Il s’agit d’une architecture multi-services où plusieurs composants logiciels interagissent entre eux. Ce choix a été fait pour assurer la modularité du code et pour garantir l’exploitabilité de certains services d’OSRD par des applications extérieures.&lt;/p>
&lt;p>&lt;img src="../architecture.svg" alt="Architecture du projet">&lt;/p></description></item><item><title>Docs: Modèle de données</title><link>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/data-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/data-model/</guid><description>
&lt;p>Décrit l&amp;rsquo;organisation et le format des données dans OSRD.&lt;/p></description></item><item><title>Docs: Poste d'aiguillage</title><link>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/interlocking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/interlocking/</guid><description>
&lt;p>Le modèle de simulation définit le rôle et comportement des différents objets simulés au sein d&amp;rsquo;OSRD.&lt;/p>
&lt;p>Cette modélisation est un compromis entre de multiples enjeux:&lt;/p>
&lt;ul>
&lt;li>fidélité de la simulation&lt;/li>
&lt;li>interprétabilité des résultats&lt;/li>
&lt;li>adaptabilité du modèle à différentes technologies et usages, que cela soit en terme de signalisation, de poste d&amp;rsquo;aiguillage, ou d&amp;rsquo;usage des données&lt;/li>
&lt;/ul>
&lt;p>En particulier, certaines subtilités propres aux systèmes pratiques ont été sacrifiées sur l&amp;rsquo;autel de la compatibilité et de l&amp;rsquo;interprétabilité:&lt;/p>
&lt;ul>
&lt;li>un signal doit forcément s&amp;rsquo;addresser à un train en particulier: les signaux n&amp;rsquo;ont pas d&amp;rsquo;aspect par défaut; ils n&amp;rsquo;existent que pour être vus&lt;/li>
&lt;li>les itinéraires / routes sont formées à destination d&amp;rsquo;un train en particulier&lt;/li>
&lt;/ul>
&lt;div class="pageinfo pageinfo-info">
&lt;p>Ce document est une description du modèle de fonctionnement cible d&amp;rsquo;OSRD.
Il a pour objectif de renseigner développeurs et experts métiers sur le fonctionnement du simulateur.
Des changements y sont apportés au fil de l&amp;rsquo;évolution du projet.&lt;/p>
&lt;/div>
&lt;div class="pageinfo pageinfo-warning">
&lt;p>Ce modèle est en cours d&amp;rsquo;implémentation&lt;/p>
&lt;/div>
&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-mermaid" data-lang="mermaid">flowchart TD
%%%% NODES
train[Train]
%% ↓
signaling[Signalisation]
%% ↓
routing[Routage]
ordering[Ordonnancement]
%% ↓
reservation[Réservation]
%% ↓
location[Localisation]
movable-elements[&amp;#34;Éléments mobiles&amp;#34;]
%%%% EDGES
train -- réagit à --&amp;gt; signaling
train -- réclame les itinéraires --&amp;gt; ordering
ordering -- commande --&amp;gt; routing
signaling -- observe --&amp;gt; reservation
routing -- observe et réserve --&amp;gt; reservation
reservation -- observe --&amp;gt; location
reservation -- actionne --&amp;gt; movable-elements
train -- informe --&amp;gt; location
%%%% CLICKABLE LINKS
click train href &amp;#34;./train/&amp;#34; _self
click ordering href &amp;#34;./ordering/&amp;#34; _self
click signaling href &amp;#34;./signaling/&amp;#34; _self
click routing href &amp;#34;./routing/&amp;#34; _self
click reservation href &amp;#34;./reservation/&amp;#34; _self
click location href &amp;#34;./location/&amp;#34; _self
click movable-elements href &amp;#34;./movable-elements/&amp;#34; _self
&lt;/code>&lt;/pre>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Pistes d'évolution&lt;/h4>
&lt;ul>
&lt;li>Gestion des overlaps&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h2 id="remerciements">Remerciements&lt;/h2>
&lt;p>Par ordre alphabétique:&lt;/p>
&lt;ul>
&lt;li>Christophe Mémin&lt;/li>
&lt;li>Djamal Bellebia&lt;/li>
&lt;li>Gilles Dessagne&lt;/li>
&lt;li>Nathanaël Dias&lt;/li>
&lt;/ul></description></item><item><title>Docs: Signalisation</title><link>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/signaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/signaling/</guid><description>
&lt;h2 id="description">Description&lt;/h2>
&lt;p>La couche de signalisation comprend l&amp;rsquo;ensemble des signaux, qui réagissent au cantonnement et à la réservation.
Les signaux peuvent être de différent types, et sont chargés de manière modulaire. Seul importe leur comportement
vis-à-vis de l&amp;rsquo;état de l&amp;rsquo;infrastructure, et la réaction des trains à la signalisation.&lt;/p>
&lt;p>Les signaux sont reliés entre eux par des cantons. Les cantons définissent les mouvements autorisés par la signalisation.&lt;/p>
&lt;h2 id="conception">Conception&lt;/h2>
&lt;h3 id="exigences-de-conception">Exigences de conception&lt;/h3>
&lt;ul>
&lt;li>chaque signal doit connaître le &lt;strong>prochain signal compatible&lt;/strong>&lt;/li>
&lt;li>chaque signal doit connaître les &lt;strong>zones qu&amp;rsquo;il protège&lt;/strong>&lt;/li>
&lt;li>&lt;strong>compatibilité pathfinding&lt;/strong> : Le pathfinding se fait dans le produit du graphe de routage et du graphe de cantons.&lt;/li>
&lt;li>fournir aux modules de signalisation le &lt;strong>minimum d&amp;rsquo;information nécessaire&lt;/strong> à leur fonctionnement&lt;/li>
&lt;li>pouvoir utiliser un module de signalisation sans avoir à instancier une simulation complète&lt;/li>
&lt;li>pouvoir avoir des modules qu&amp;rsquo;on puisse charger dans un ordre indépendant&lt;/li>
&lt;/ul>
&lt;h3 id="questions-de-recherche">Questions de recherche&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>est-ce qu&amp;rsquo;il existe des cantons qui chevauchent une fin de route ? non (loic)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>est-ce qu&amp;rsquo;il existe des existe des signaux LL(2) ? non en france&lt;/p>
&lt;/li>
&lt;li>
&lt;p>est-ce qu&amp;rsquo;il existe des signaux qui changent de comportement en fonction du canton actif devant eux ? oui, pour les ralentissements&lt;/p>
&lt;/li>
&lt;li>
&lt;p>est-ce qu&amp;rsquo;il existe des signaux qui sont le départ de cantons de types différents (bal3 et bapr par exemple) ? OUI LOL, tvm meme&lt;/p>
&lt;/li>
&lt;li>
&lt;p>est-ce que le comportement d&amp;rsquo;un signal peut déprendre de quel canton est actif après le signal de fin du canton actuel ? oui, avec les ralentissements ou jaune cli&lt;/p>
&lt;/li>
&lt;li>
&lt;p>est-ce que certains de signalisation ont besoin d&amp;rsquo;avoir des informations supplémentaires dans les cantons ? mouais, y&amp;rsquo;a des ralentissements, mais c&amp;rsquo;est pas spécialement porté par le canton&lt;/p>
&lt;/li>
&lt;li>
&lt;p>est-il nominal qu&amp;rsquo;un train aie plusieurs systèmes de signalisation actifs simultanément ? non&lt;/p>
&lt;/li>
&lt;li>
&lt;p>quand et par qui les cantons sont-ils générés ?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>quelles sont les données nécessaires à la génération des cantons ?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="présupposés">Présupposés&lt;/h3>
&lt;ul>
&lt;li>les signaux ont une liste de types&lt;/li>
&lt;li>les cantons ont un type&lt;/li>
&lt;li>il est possible de déterminer étant donné le seul signal, ses propriétés de cantonnement&lt;/li>
&lt;li>il n&amp;rsquo;existe pas de cantons qui chevauchent une fin ou un début de route&lt;/li>
&lt;li>les cantons qui ne sont pas couverts par des routes n&amp;rsquo;existent pas ou peuvent être ignorés&lt;/li>
&lt;li>un train n&amp;rsquo;utilise qu&amp;rsquo;un seul système de signalisation à la fois&lt;/li>
&lt;/ul>
&lt;h2 id="design-des-cantons">Design des cantons&lt;/h2>
&lt;p>Les cantons ont plusieurs attributs:&lt;/p>
&lt;ul>
&lt;li>un &lt;strong>chemin&lt;/strong>, qui représente les zones protégées par le canton, et leur état attendu (au même format que le chemin des routes)&lt;/li>
&lt;li>un &lt;strong>signal d&amp;rsquo;entrée&lt;/strong>, optionnel (quand le canton pars d&amp;rsquo;un butoir)&lt;/li>
&lt;li>des &lt;strong>signaux intermédiaires&lt;/strong> éventuels (c&amp;rsquo;est utilisé avec des systèmes du style BAPR)&lt;/li>
&lt;li>un &lt;strong>signal de sortie&lt;/strong>, optionnel (quand le canton se termine à un butoir)&lt;/li>
&lt;/ul>
&lt;p>Le chemin est exprimé de détecteur en détecteur afin de pouvoir faire un rapprochement avec le graphe des routes.&lt;/p>
&lt;p>Quelques remarques:&lt;/p>
&lt;ul>
&lt;li>il peut y avoir plusieurs systèmes de signalisation superposés sur la même infrastructure. le modèle pars du principe qu&amp;rsquo;un seul système à la fois est actif&lt;/li>
&lt;li>un canton n&amp;rsquo;a pas d&amp;rsquo;état: on peut se reposer sur l&amp;rsquo;état dynamique des zones qui le compose&lt;/li>
&lt;li>les signaux utilisent les cantons pour savoir quelles zones sont à protéger à un instant donné&lt;/li>
&lt;/ul>
&lt;h2 id="design-des-signaux">Design des signaux&lt;/h2>
&lt;p>Chaque signal physique peut porter plusieurs signaux logiques.&lt;/p>
&lt;p>Chaque signal logique a pour information statique :&lt;/p>
&lt;ul>
&lt;li>un type (&lt;code>bal3toTVM&lt;/code>)&lt;/li>
&lt;li>des paramètres spécifiques au type (&lt;code>Nf&lt;/code>, &lt;code>ralen30&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>Le chargement se fait en deux partie : les signaux sont d&amp;rsquo;abord chargés, puis initialisés.&lt;/p>
&lt;p>Une fois chargés, les signaux logiques exposent :&lt;/p>
&lt;ul>
&lt;li>un système de signalisation (&lt;code>bal3&lt;/code>)&lt;/li>
&lt;li>des propriétés spécifiques au système de signalisation&lt;/li>
&lt;li>des propriétés de cantonnement : 1) est-il délimiteurs de canton ? si oui, quel type de canton et aval et en amont. 2) est-il contenu dans un canton&lt;/li>
&lt;/ul>
&lt;p>L&amp;rsquo;initialisation permet aux signaux de :&lt;/p>
&lt;ul>
&lt;li>découvrir les autres cantons et signaux adjacents&lt;/li>
&lt;li>signaler des configurations invalides&lt;/li>
&lt;/ul>
&lt;h3 id="cycle-de-vie-des-signaux">Cycle de vie des signaux&lt;/h3>
&lt;p>Au chargement de l&amp;rsquo;infrastructure :&lt;/p>
&lt;ul>
&lt;li>les signaux sont chargés par les modules&lt;/li>
&lt;li>le framework crée des cantons entre les signaux en suivant les routes présentes dans l&amp;rsquo;infrastructure, et les propriétés de cantonnement des signaux&lt;/li>
&lt;li>des vérifications sont faites sur le graphe de cantons créé : il doit toujours pouvoir être possible de choisir un canton pour chaque signal et chaque état de l&amp;rsquo;infrastructure&lt;/li>
&lt;li>le module de signalisation initialise les signaux, et a accès aux cantons créés au préalable&lt;/li>
&lt;/ul>
&lt;p>Avant le départ d&amp;rsquo;un train:&lt;/p>
&lt;ul>
&lt;li>le chemin d&amp;rsquo;un train peut être exprimé soit en routes soit en cantons. Ces deux chemins doivent être superposés&lt;/li>
&lt;li>la file de signaux que le train va rencontrer est établie&lt;/li>
&lt;/ul>
&lt;p>Lors de la simulation :&lt;/p>
&lt;ul>
&lt;li>au fil du déplacement du train, les informations d&amp;rsquo;occupation des voies devant lui sont synthétisées&lt;/li>
&lt;li>lorsqu&amp;rsquo;un train observe un signal, son état est évalué : en fonction du canton actif&lt;/li>
&lt;/ul>
&lt;h3 id="état">État&lt;/h3>
&lt;p>Chaque système de signalisation a son type d&amp;rsquo;état de signal.&lt;/p>
&lt;p>Étant donné un type de signal, il doit être possible de :&lt;/p>
&lt;ul>
&lt;li>savoir s&amp;rsquo;il est contraignant à cause d&amp;rsquo;une MA réduite&lt;/li>
&lt;li>déterminer une représentation graphique de ce signal&lt;/li>
&lt;li>&lt;strong>TODO&lt;/strong>: il devra être possible de faire réagit un train à ce signal&lt;/li>
&lt;/ul>
&lt;h3 id="évalution-de-létat-des-signaux">Évalution de l&amp;rsquo;état des signaux&lt;/h3>
&lt;p>Les signaux sont modélisés comme une fonction d&amp;rsquo;évaluation, qui consomme les paramètres pouvant influencer son comportement, et retourne l&amp;rsquo;état actuel du signal.
é
Il est nécessaire de choisir quelle forme prennent les paramètres :&lt;/p>
&lt;ul>
&lt;li>une liste de paramètres, annotés de manière à pouvoir être injectés
&lt;ul>
&lt;li>&lt;code>avantage&lt;/code> permet d&amp;rsquo;obtenir une description complète des paramètres de chaque signal&lt;/li>
&lt;li>&lt;code>désavantage&lt;/code> permet difficilement de faire varier le comportement du signal en fonction du canton actif&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>un seul paramètre, qui fournit une vue permettant à la fonction d&amp;rsquo;évaluation de requêter les paramètres nécessaires
&lt;ul>
&lt;li>&lt;code>avantage&lt;/code> plus simple d&amp;rsquo;implémentation que la première méthode&lt;/li>
&lt;li>&lt;code>désavantage&lt;/code> les signaux ont accès à une plus large surface d&amp;rsquo;API, ce qui peut rendre plus difficile les changements ultérieurs&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>La vue est choisie pour le moment, car plus flexible.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">fn&lt;/span> &lt;span style="color:#000">signal&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">world&lt;/span>: &lt;span style="color:#000">SignalWorldView&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&amp;gt; &lt;span style="color:#000">Bal3Aspect&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La vue doit permettre d&amp;rsquo;accéder aux données suivantes :&lt;/p>
&lt;ul>
&lt;li>une synthèse de l&amp;rsquo;état des zones en aval jusqu&amp;rsquo;à la MA du train&lt;/li>
&lt;li>la chaine de cantons&lt;/li>
&lt;li>l&amp;rsquo;état des signaux en aval présents dans la chaine de cantons du train&lt;/li>
&lt;/ul>
&lt;h4 id="chemin-de-la-vue-signalisation">Chemin de la vue signalisation&lt;/h4>
&lt;p>Le chemin de la vue signalisation est exprimé en cantons :&lt;/p>
&lt;ul>
&lt;li>des cantons peuvent être rajouter pour étendre la vue&lt;/li>
&lt;li>la vue peut être réduite en supprimant des cantons&lt;/li>
&lt;/ul>
&lt;h4 id="simulation-hors-chemin-du-train">Simulation hors chemin du train&lt;/h4>
&lt;p>Il est possible de simuler la signalisation hors du chemin du train :&lt;/p>
&lt;ul>
&lt;li>si un signal donne sur des cantons empruntant des chemins différents, il est simulé comme s&amp;rsquo;il était en bout d&amp;rsquo;itinéraire, et sera donc au carré&lt;/li>
&lt;li>si un signal donne sur des cantons empruntant le même chemin, il est simulé avec les autres signaux de la suite, dans une vue construite à cet effet&lt;/li>
&lt;/ul>
&lt;h2 id="dépendances">Dépendances&lt;/h2>
&lt;ul>
&lt;li>&lt;code>statique&lt;/code> graphe des routes, pour pouvoir créer des cantons&lt;/li>
&lt;li>&lt;code>statique&lt;/code> les signaux, leur type et détecteur + direction associé&lt;/li>
&lt;li>&lt;code>statique&lt;/code> les propriétés de cantonnement pour chaque signal&lt;/li>
&lt;li>&lt;code>dynamique&lt;/code> observer l&amp;rsquo;&lt;strong>état des zones&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="opérations">Opérations&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>instancier une vue&lt;/strong> crée un cadre dans lequel observer des signaux&lt;/li>
&lt;li>&lt;strong>prévoir le chemin&lt;/strong> signaler à la vue les cantons qui seront empruntés par le train&lt;/li>
&lt;li>&lt;strong>observer un signal&lt;/strong> s&amp;rsquo;abonner à l&amp;rsquo;état d&amp;rsquo;un signal (via la vue)&lt;/li>
&lt;li>&lt;strong>dépasser un signal&lt;/strong> signaler qu&amp;rsquo;un signal a été dépassé par le train (via la vue)&lt;/li>
&lt;/ul></description></item><item><title>Docs: Détection de conflit</title><link>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/conflict-detection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/conflict-detection/</guid><description>
&lt;div class="pageinfo pageinfo-warning">
&lt;p>Ce document n&amp;rsquo;est pas finalisé&lt;/p>
&lt;/div>
&lt;script type="application/javascript" src="../mkt.js">&lt;/script>
&lt;object onload="mkt_hydrate(this.contentDocument.rootElement)" type="image/svg+xml" data="../space-time-diagram.svg">
&lt;/object>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Le système de détection de conflit se repose sur le poste d&amp;rsquo;aiguillage et la simulation de la signalisation pour synthétiser les besoins en ressources des acteurs, et détecter les incompatibilités.&lt;/p>
&lt;p>Le système de détection de conflit doit permettre :&lt;/p>
&lt;ul>
&lt;li>étant donné deux simulations indépendantes, déterminer si elles peuvent être rejouées en même temps sans conflit&lt;/li>
&lt;li>avoir des résultats interprétables, c&amp;rsquo;est à dire que les conflits produits doivent pouvoir être reliés à un processus métier&lt;/li>
&lt;li>avoir un fonctionnement interprétable, c&amp;rsquo;est à dire qu&amp;rsquo;il doit être possible de visualiser et interprêter le fonctionnement du système&lt;/li>
&lt;li>passer à l&amp;rsquo;échelle : étant donné un grand ensemble de trains et leur utilisation de ressources, il doit toujours être possible de détecter leurs conflits en un temps raisonnable&lt;/li>
&lt;li>de permettre la recherche de chemin à travers les ressources utilisées par un grand nombre de trains&lt;/li>
&lt;li>de modéliser les conflits d&amp;rsquo;espacements transmits par des systèmes de signalisation à bloc fixe&lt;/li>
&lt;/ul>
&lt;p>Un certain nombre de contraintes guident et ont guidé la conception du système de détection de conflit :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>il ne doit pas pouvoir aboutir à la génération de faux-négatifs&lt;/strong>: s&amp;rsquo;il ne détecte pas de conflits, une simulation multi-train de la même grille horaire ne doit pas présenter de ralentissements&lt;/li>
&lt;li>le modèle ne doit pas se reposer sur des informations difficiles à obtenir étant donné l&amp;rsquo;état actuel du projet&lt;/li>
&lt;li>il ne doit pas exclure l&amp;rsquo;inclusion ultérieure de bloc mobile&lt;/li>
&lt;li>il doit être possible de détecter les conflits en simulant la signalisation tel que prévu dans le modèle de simulation&lt;/li>
&lt;li>il doit être possible de détecter les conflits dans des zones à signalisation hétérogène, voire superposée&lt;/li>
&lt;/ul>
&lt;h2 id="théorie-des-conflits">Théorie des conflits&lt;/h2>
&lt;p>Ce modèle définit les règles de fonctionnnement du système de détection de conflit.&lt;/p>
&lt;p>Il repose sur un système de réservation de ressources abstraites.
Ces ressources ont des configurations possibles, et peuvent être réservées pour un laps de temps donné.
Si des réservations requièrent une ressource au même moment, elle peuvent où non cohabiter selon leur type et paramètres.
Si deux réservations simultanées ne peux pas cohabiter, c&amp;rsquo;est un conflit.&lt;/p>
&lt;h3 id="définitions">Définitions&lt;/h3>
&lt;h4 id="acteur">Acteur&lt;/h4>
&lt;p>Un acteur est une entité susceptible de requérir des ressources&lt;/p>
&lt;h4 id="ressource">Ressource&lt;/h4>
&lt;p>Une ressource est un objet susceptible d&amp;rsquo;être requis et utilisé par différents acteurs.
Chaque ressource a des configurations, et ne peut être que dans une configuration à un instant donné.&lt;/p>
&lt;h4 id="besoin">Besoin&lt;/h4>
&lt;p>Un besoin est l&amp;rsquo;expression par un acteur de son besoin d&amp;rsquo;utilisation d&amp;rsquo;une ressource pour une période de temps donnée.&lt;/p>
&lt;p>Ces besoins peuvent prendre plusieurs formes :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>partageables&lt;/strong> : la ressource est requise dans une configuration donnée, pendant le laps de temps donné. Ce type de besoin peut seulement cohabiter avec d&amp;rsquo;autres besions partageables de la même configuration.&lt;/li>
&lt;li>&lt;strong>exclusifs&lt;/strong> : la ressource est requise dans une configuration donnée, pour un acteur particulier, pendant le laps de temps donné. Ce type de besoin peut seulement cohabiter avec d&amp;rsquo;autres du même acteur et de la même configuration.&lt;/li>
&lt;/ul>
&lt;h4 id="conflit">Conflit&lt;/h4>
&lt;h5 id="conflits-de-besoin">Conflits de besoin&lt;/h5>
&lt;p>Un conflit de besoin se produit lorsque qu&amp;rsquo;il existe deux besoins simultanées dont les contraintes sont incompatibles.&lt;/p>
&lt;p>Par exemple, il y a un conflit lorsque:&lt;/p>
&lt;ul>
&lt;li>un besoin exclusif chevauche n&amp;rsquo;importe quelle autre réservation d&amp;rsquo;un autre acteur&lt;/li>
&lt;li>un besoin partageable chevauche un besoin d&amp;rsquo;une autre configuration&lt;/li>
&lt;/ul>
&lt;p>Il n&amp;rsquo;y a toutefois pas de conflit lorsque:&lt;/p>
&lt;ul>
&lt;li>une ressource est requise de manière exclusive sur des périodes qui n&amp;rsquo;ont pas de moment commun&lt;/li>
&lt;li>une ressource est partagée par des besoins qui ne requièrent pas la même configuration&lt;/li>
&lt;/ul>
&lt;p>Un conflit de ressource perturbe l&amp;rsquo;acteur à l&amp;rsquo;origine des réservations.&lt;/p>
&lt;h5 id="conflits-de-changement-de-configuration">Conflits de changement de configuration&lt;/h5>
&lt;p>Certains conflits se produisent par manque de temps entre deux réservations consécutives.
Le temps requis entre deux réservations est spécifique à chaque ressource.&lt;/p>
&lt;h2 id="application-au-modèle-de-détection-de-conflit">Application au modèle de détection de conflit&lt;/h2>
&lt;p>Le système de détection de conflit peut être appliqué de différentes manières&lt;/p>
&lt;h3 id="définitions-1">Définitions&lt;/h3>
&lt;h4 id="acteur-1">Acteur&lt;/h4>
&lt;p>On distingue les types d&amp;rsquo;acteurs suivants :&lt;/p>
&lt;ul>
&lt;li>les &lt;strong>trains&lt;/strong> (ou un poste d&amp;rsquo;aiguillage / régulateur agissant au nom d&amp;rsquo;un train)&lt;/li>
&lt;li>les &lt;strong>zones de travaux&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h4 id="ressource-1">Ressource&lt;/h4>
&lt;p>On distingue les ressources suivantes :&lt;/p>
&lt;ul>
&lt;li>les &lt;strong>zones&lt;/strong>, qui ont autant de configurations qu&amp;rsquo;il y a de manières de les traverser&lt;/li>
&lt;li>les &lt;strong>aiguilles&lt;/strong>, qui ont autant de configurations qu&amp;rsquo;elles ont de position&lt;/li>
&lt;/ul>
&lt;div class="pageinfo pageinfo-info">
&lt;p>À l&amp;rsquo;avenir, les quais pourraient également être modélisés comme ressources, ce qui permettrait de générer des conflits en cas d&amp;rsquo;embarquement ou débarquement simultané&lt;/p>
&lt;/div>
&lt;h4 id="réservation">Réservation&lt;/h4>
&lt;p>Une réservation, c&amp;rsquo;est quelque chose qui enlève de la capacité.&lt;/p>
&lt;h4 id="conflit-1">Conflit&lt;/h4>
&lt;p>En pratique, un conflit de ressource gêne l&amp;rsquo;acteur à l&amp;rsquo;origine des réservations est un événement qui peut forcer un train à ralentir :&lt;/p>
&lt;ul>
&lt;li>un délai de formation d&amp;rsquo;itinéraire dû à l&amp;rsquo;indisponibilité de ressources&lt;/li>
&lt;li>un conflit d&amp;rsquo;espacement dû à un rattrapage&lt;/li>
&lt;/ul>
&lt;p>Pour détecter les conflits, il est nécessaire de calculer l&amp;rsquo;impact qu&amp;rsquo;a un train sur la disponibilité des ressources: son empreinte.&lt;/p>
&lt;h4 id="capacité">Capacité&lt;/h4>
&lt;p>Le terme capacité désigne la capacité à réserver une ressource, ou plus largement la capacité de réservation d&amp;rsquo;un ensemble de ressources nécessaires au passage d&amp;rsquo;un train.&lt;/p>
&lt;h2 id="génération-des-réservations">Génération des réservations&lt;/h2>
&lt;p>&lt;strong>L&amp;rsquo;enjeu principal est de générer des réservations qui, si elles sont satisfaites, garantissent au train simulé, suivant la signalisation simulée, un trajet sans ralentissement.&lt;/strong>&lt;/p>
&lt;h3 id="conflits-ditinéraire">Conflits d&amp;rsquo;itinéraire&lt;/h3>
&lt;p>L&amp;rsquo;aiguillage d&amp;rsquo;un train à travers l&amp;rsquo;infrastructure a un impact susceptible de générer des conflits.
Un conflit se produit lorsqu&amp;rsquo;un conducteur perçoit les conséquences du fait qu&amp;rsquo;un itinéraire a été établi trop tardivement.
L&amp;rsquo;empreinte d&amp;rsquo;aiguillage, c&amp;rsquo;est les réservations de ressources requises pour qu&amp;rsquo;un train puisse être aiguillé sans gêne jusqu&amp;rsquo;à sa destination.
Concrètement, ces ressources correspondent à des réservations de zones dans le temps.&lt;/p>
&lt;p>Ces temps de réservation de ressources sont obtenus selon l&amp;rsquo;algorithme suivant:&lt;/p>
&lt;ul>
&lt;li>un planning d&amp;rsquo;établissement des ressources est établi de telle sorte à ce que le train n&amp;rsquo;est jamais forcé de ralentir par une commande trop tardive des routes. Ce planning d&amp;rsquo;établissement est déterminé en calculant les moments à partir duquel le conducteur verrait une signalisation contraignante, puis en soustrayant marge de temps&lt;/li>
&lt;li>le planning d&amp;rsquo;établissement des routes de tous les trains est utilisé pour déterminer la chronologie combinée de fin d&amp;rsquo;utilisation des zones et des aiguilles&lt;/li>
&lt;li>la chronologie combinée de fin d&amp;rsquo;utilisation des zones est utilisée pour calculer les temps de formation des routes, puis un planning de commande des routes&lt;/li>
&lt;li>le planning de commande des routes permet de connaître la chronologie de début d&amp;rsquo;utilisation des zones, et donc connaître les réservations de zones pour chaque train&lt;/li>
&lt;/ul>
&lt;p>On peut ensuite superposer les réservations de zones, et traduire en conflit les réservations incompatibles.&lt;/p>
&lt;h3 id="conflits-despacement">Conflits d&amp;rsquo;espacement&lt;/h3>
&lt;p>En plus de pouvoir être ralentis par l&amp;rsquo;établissement trop tardif de leurs routes, les trains peuvent être également être ralentis par la présence d&amp;rsquo;un train plus loin sur leur chemin.
Tout comme les conflits de routes sont détectés en recoupant la chronologie de réservation des zones par les routes, les conflits d&amp;rsquo;espacement sont détectés en recoupant les réservations implicites de zones pour l&amp;rsquo;espacement.
Des zones sont réservées pour espacement lorsqu&amp;rsquo;elles ne peuvent être occupées sous peine de ralentissement.
En fait, les zones réservées par un train peuvent être classifiées comme partageables, ou réservées pour espacement.&lt;/p>
&lt;p>Les réservations implicites de zones sont calculées en simulant la signalisation comme suit:&lt;/p>
&lt;ul>
&lt;li>le planning de commande des routes est rejoué&lt;/li>
&lt;li>on commence par partir du principe que toute les zones réservées pour l&amp;rsquo;aiguillage le sont également pour espacement&lt;/li>
&lt;li>à chaque fois que le conducteur voit un signal non-contraignant, la dernière zone actuellement réservée pour le train est occupée: si la signalisation ne contraint toujours pas le train, alors cette zone est marquée comme partageable à cet instant, et la zone précédente est testée. Si la signalisation contraint le train, on passe au signal suivant.&lt;/li>
&lt;li>la chronologie de réservation de zone pour espacement est recoupée pour tous les trains, et comparée avec l&amp;rsquo;occupation des zones. Chaque intersection génère un conflit.&lt;/li>
&lt;/ul>
&lt;div class="pageinfo pageinfo-info">
&lt;p>Le système de réservation pour espacement a plusieurs avantages majeurs :&lt;/p>
&lt;ul>
&lt;li>il permet de simuler le partage de l&amp;rsquo;infrastructure par des trains qui utilisent des systèmes de signalisation différents&lt;/li>
&lt;li>il peut être étendu aux blocs mobiles: au lieu de réserver des zones devant le train, on réserve une distance&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Docs: JSON Schemas</title><link>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/json_schema/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dgexsolutions.github.io/osrd-website/fr/docs/reference/json_schema/</guid><description>
&lt;!-- Include from a free CDN -->
&lt;script src="https://cdn.rawgit.com/caldwell/renderjson/master/renderjson.js">&lt;/script>
&lt;!-- Element where the list will be created -->
&lt;div id="container">&lt;h1>Infrastructure&lt;/h1>&lt;/div>
&lt;script>
// The JSObject that you want to render
var infra = {};
tmp = $.ajax({
url: "/osrd-website/schemas/infra_schema.json",
async: false,
dataType: 'json',
success: function(data) {
infra = data;
}
});
// Render toggable list in the container element
document.getElementById("container").appendChild(
renderjson(infra)
);
&lt;/script>
&lt;!-- Element where the list will be created -->
&lt;div id="container2">&lt;h1>Rolling Stock&lt;/h1>&lt;/div>
&lt;script>
// The JSObject that you want to render
var rolling_stock = {};
tmp = $.ajax({
url: "/osrd-website/schemas/rolling_stock_schema.json",
async: false,
dataType: 'json',
success: function(data) {
rolling_stock = data;
}
});
// Render toggable list in the container element
document.getElementById("container2").appendChild(
renderjson(rolling_stock)
);
&lt;/script>
&lt;style>
#container, #container2 {
text-shadow: none;
background:;
padding: 1em;
}
.renderjson a {
text-decoration: none;
}
.renderjson .disclosure {
color: #aa026d;
font-size: 150%;
}
.renderjson .syntax {
color: grey;
}
.renderjson .string {
color: black;
}
.renderjson .number {
color: cyan;
}
.renderjson .boolean {
color: plum;
}
.renderjson .key {
color: #aa026d;
}
.renderjson .keyword {
color: lightgoldenrodyellow;
}
.renderjson .object.syntax {
color: lightseagreen;
}
.renderjson .array.syntax {
color: lightsalmon;
}
&lt;/style></description></item></channel></rss>