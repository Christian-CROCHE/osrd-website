[{"body":" ","categories":"","description":"Référence pour l'API du service API","excerpt":"Référence pour l'API du service API","ref":"/osrd-website/fr/developers/internals/data-model/apis/api/","tags":"","title":"API"},{"body":" ","categories":"","description":"Référence pour l'API du service Chartos","excerpt":"Référence pour l'API du service Chartos","ref":"/osrd-website/fr/developers/internals/data-model/apis/chartos/","tags":"","title":"Chartos"},{"body":" ","categories":"","description":"Référence pour l'API du service Core","excerpt":"Référence pour l'API du service Core","ref":"/osrd-website/fr/developers/internals/data-model/apis/core/","tags":"","title":"Core"},{"body":" Your browser can not display embedded frames. You can access the embedded page via the following link: /osrd-website/javadoc/index.html\n","categories":"","description":"Javadoc du service Core","excerpt":"Javadoc du service Core","ref":"/osrd-website/fr/developers/internals/documentation/core/","tags":"","title":"Core"},{"body":" ","categories":"","description":"Référence pour l'API du service Editoast","excerpt":"Référence pour l'API du service Editoast","ref":"/osrd-website/fr/developers/internals/data-model/apis/editoast/","tags":"","title":"Editoast"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/news/news/","tags":"","title":"Actualités"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/news/news/","tags":"","title":"Actualités"},{"body":" La modélisation physique joue un rôle important dans le cœur de calcul d’OSRD. C’est elle qui nous permet de simuler la circulation des trains, et elle doit être aussi réaliste que possible.\nBilan des forces Pour calculer le déplacement du train au cours du temps, il faut d’abord calculer sa vitesse à chaque instant. Une manière simple d’obtenir cette vitesse est de passer par le calcul de l’accélération. Grâce au principe fondamental de la dynamique, l’accélération du train à chaque instant est directement dépendant des différentes forces qui lui sont appliquées : $$ \\sum \\vec{F}=m\\vec{a} $$\nTraction : La valeur de la force de traction \\(F_{mot}\\) dépend de plusieurs facteurs :\ndu matériel roulant de la vitesse du train \\(v^{\\prime}x\\), selon la courbe effort-vitesse ci-dessous : $$ {\\vec{F_{mot}}(v_{x^{\\prime}}, x^{\\prime})=F_{mot}(v_{x^{\\prime}}, x^{\\prime})\\vec{e_x^{\\prime}}} $$\nL’axe x représente la vitesse du train en [km/h], l’axe y, la valeur de la force de traction en [kN].\nde l’action du conducteur, qui accélère plus ou moins fort en fonction de l’endroit où il se trouve sur son trajet Freinage : La valeur de la force de freinage \\(F_{brk}\\) dépend elle aussi du matériel roulant et de l’action du conducteur mais possède une valeur constante pour un matériel donné. Dans l’état actuel de la modélisation, le freinage est soit nul, soit à sa valeur maximale. $$ \\vec{F_{brk}}(x^{\\prime})=-F_{brk}(x^{\\prime}){\\vec{e_{x^{\\prime}}}} $$\nUne seconde approche de la modélisation du freinage est l’approche dite horaire, car utilisée pour la production horaire à la SNCF. Dans ce cas, la décélération est fixe et le freinage ne dépend plus des différentes forces appliquées au train. Les valeurs de décélération typiques vont de 0.4 à 0.7m/s².\nRésistance à l’avancement : Pour modéliser la résistance à l’avancement du train on utilise la formule de Davis qui prend en compte tous les frottements et la résistance aérodynamique de l’air. La valeur de la resistance à l’avancement dépend de la vitesse \\(v^{\\prime}_x\\). Les coefficients \\(A\\), \\(B\\), et \\(C\\) dépendent du matériel roulant. $$ {\\vec{R}(v_{x^{\\prime}})}=-(A+Bv_{x^{\\prime}}+{Cv_{x^{\\prime}}}^2){\\vec{e_{x^{\\prime}}}} $$\nPoids (pentes + virages) : La force du poids donnée par le produit entre la masse \\(m\\) du train et la constante gravitationnelle \\(g\\) est projetée sur les axes \\(\\vec{e_x}^{\\prime}\\) et \\(\\vec{e_y}^{\\prime}\\).Pour la projection, on utilise l’angle \\(i(x^{\\prime})\\), qui est calculé à partir de l’angle de déclivité \\(s(x^{\\prime})\\) corrigé par un facteur qui prend en compte l’effet du rayon de virage \\(r(x^{\\prime})\\). $$ \\vec{P(x^{\\prime})}=-mg\\vec{e_y}(x^{\\prime})= -mg\\Big[sin\\big(i(x^{\\prime})\\big){\\vec{e_{x^{\\prime}}}(x^{\\prime})}+cos\\big(i(x^{\\prime})\\big){\\vec{e_{{\\prime}}}(x^{\\prime})}\\Big] $$\n$$ i(x^{\\prime})= s(x^{\\prime})+\\frac{800m}{r(x^{\\prime})} $$\nRéaction du sol : La force de réaction du sol compense simplement la composante verticale du poids, mais n’a pas d’impact sur la dynamique du train car elle n’a aucune composante selon l’axe \\({\\vec{e_x}^{\\prime}}\\). $$ \\vec{R_{gnd}}=R_{gnd}{\\vec{e_{y^{\\prime}}}} $$\nEquilibre des forces L’équation du principe fondamental de la dynamique projetée sur l’axe \\({\\vec{e_x}^{\\prime}}\\) (dans le référentiel du train) donne l’équation scalaire suivante :\n$$ a_{x^{\\prime}}(t) = \\frac{1}{m}\\Big [F_{mot}(v_{x^{\\prime}}, x^{\\prime})-F_{brk}(x^{\\prime})-(A+Bv_{x^{\\prime}}+{Cv_{x^{\\prime}}}^2)-mgsin(i(x^{\\prime}))\\Big] $$\nCelle-ci est ensuite simplifiée en considérant que malgré la pente le train se déplace sur un plan et en amalgamant \\(\\vec{e_x}\\) et \\(\\vec{e_x}^{\\prime}\\). La pente a toujours un impact sur le bilan des forces mais on considère que le train ne se déplace qu’horizontalement, ce qui donne l’équation simplifiée suivante :\n$$ a_{x}(t) = \\frac{1}{m}\\Big[F_{mot}(v_{x}, x)-F_{brk}(x)-(A+Bv_{x}+{Cv_{x}}^2)-mgsin(i(x))\\Big] $$\nRésolution La force motrice et la force de freinage dépendent de l’action du conducteur (il décide d’accélérer ou de freiner plus ou moins fort en fonction de la situation). Cette dépendance se traduit donc par une dépendance de ces deux forces à la position du train. La composante du poids dépend elle aussi de la position du train, car provenant directement des pentes et des virages situées sous ce dernier.\nDe plus, la force motrice dépend de la vitesse du train (selon la courbe effort vitesse) tout comme la résistance à l’avancement.\nCes différentes dépendances rendent impossible la résolution analytique de cette équation, et l’accélération du train à chaque instant doit être calculée par intégration numérique.\n","categories":"","description":"","excerpt":" La modélisation physique joue un rôle important dans le cœur de …","ref":"/osrd-website/fr/users/docs/running_time_calculation/physical_modeling/","tags":"","title":"Modélisation physique"},{"body":" Physical modelling plays an important role in the OSRD core calculation. It allows us to simulate train traffic, and it must be as realistic as possible train traffic, and it must be as realistic as possible.\nForce review To calculate the displacement of the train over time, we must first calculate its speed at each instant. A simple way to obtain this speed is to calculate the acceleration. Thanks to the fundamental principle of dynamics, the acceleration of the train at each instant is directly dependent on the different forces applied to it: $$ \\sum \\vec{F}=m\\vec{a} $$\nTraction: The value of the traction force \\(F_{mot}\\) depends on several factors:\nthe rolling stock the speed of the train, \\(v^{\\prime}x\\) according to the effort-speed curve below: $$ {\\vec{F_{mot}}(v_{x^{\\prime}}, x^{\\prime})=F_{mot}(v_{x^{\\prime}}, x^{\\prime})\\vec{e_x^{\\prime}}} $$\nThe x axis represents the speed of the train in [km/h], the y axis the value of the traction force in [kN].\nthe action of the driver, who accelerates more or less strongly depending on where he is on his journey Braking : The value of the braking force \\(F_{brk}\\) also depends on the rolling stock and the driver’s action but has a constant value for a given rolling stock. In the current state of modelling, braking is either zero or at its maximum value. $$ \\vec{F_{brk}}(x^{\\prime})=-F_{brk}(x^{\\prime}){\\vec{e_{x^{\\prime}}}} $$\nA second approach to modelling braking is the so-called hourly approach, as it is used for hourly production at SNCF. In this case, the deceleration is fixed and the braking no longer depends on the different forces applied to the train. Typical deceleration values range from 0.4 to 0.7m/s².\nForward resistance: To model the forward resistance of the train, the Davis formula is used, which takes into account all the friction and aerodynamic resistance of the air. The value of the drag depends on the speed \\(v^{\\prime}_x\\). The coefficients \\(A\\), \\(B\\), et \\(C\\) depend on the rolling stock. $$ {\\vec{R}(v_{x^{\\prime}})}=-(A+Bv_{x^{\\prime}}+{Cv_{x^{\\prime}}}^2){\\vec{e_{x^{\\prime}}}} $$\nWeight (slopes + turns) : The weight force given by the product between the mass \\(m\\) of the train and the gravitational constant \\(g\\) is projected on the axes \\(\\vec{e_x}^{\\prime}\\) and \\(\\vec{e_y}^{\\prime}\\).For projection, we use the angle \\(i(x^{\\prime})\\), which is calculated from the slope angle \\(s(x^{\\prime})\\) corrected by a factor that takes into account the effect of the turning radius \\(r(x^{\\prime})\\). $$ \\vec{P(x^{\\prime})}=-mg\\vec{e_y}(x^{\\prime})= -mg\\Big[sin\\big(i(x^{\\prime})\\big){\\vec{e_{x^{\\prime}}}(x^{\\prime})}+cos\\big(i(x^{\\prime})\\big){\\vec{e_{{\\prime}}}(x^{\\prime})}\\Big] $$\n$$ i(x^{\\prime})= s(x^{\\prime})+\\frac{800m}{r(x^{\\prime})} $$\nGround Reaction : The ground reaction force simply compensates for the vertical component of the weight, but has no impact on the dynamics of the train as it has no component along the axis \\({\\vec{e_x}^{\\prime}}\\). $$ \\vec{R_{gnd}}=R_{gnd}{\\vec{e_{y^{\\prime}}}} $$\nForces balance The equation of the fundamental principle of dynamics projected onto the axis \\({\\vec{e_x}^{\\prime}}\\) (in the train frame of reference) gives the following scalar equation:\n$$ a_{x^{\\prime}}(t) = \\frac{1}{m}\\Big [F_{mot}(v_{x^{\\prime}}, x^{\\prime})-F_{brk}(x^{\\prime})-(A+Bv_{x^{\\prime}}+{Cv_{x^{\\prime}}}^2)-mgsin(i(x^{\\prime}))\\Big] $$\nThis is then simplified by considering that despite the gradient the train moves on a plane and by amalgamating \\(\\vec{e_x}\\) and \\(\\vec{e_x}^{\\prime}\\). The gradient still has an impact on the force balance, but it is assumed that the train is only moving horizontally, which gives the following simplified equation:\n$$ a_{x}(t) = \\frac{1}{m}\\Big[F_{mot}(v_{x}, x)-F_{brk}(x)-(A+Bv_{x}+{Cv_{x}}^2)-mgsin(i(x))\\Big] $$\nResolution The driving force and the braking force depend on the driver’s action (he decides to accelerate or brake more or less strongly depending on the situation). This dependence is reflected in the dependence of these two forces on the position of the train. The weight component is also dependent on the position of the train, as it comes directly from the slopes and bends below the train.\nIn addition, the driving force depends on the speed of the train (according to the speed effort curve) as does the resistance to forward motion. resistance.\nThese different dependencies make it impossible to solve this equation analytically, and the acceleration of the train at each moment must be calculated by numerical integration.\n","categories":"","description":"","excerpt":" Physical modelling plays an important role in the OSRD core …","ref":"/osrd-website/en/users/docs/running_time_calculation/physical_modeling/","tags":"","title":"Physical modeling"},{"body":"The overall format for git commits is as follows:\ncomponent: imperative description of the change Detailed description of the change and what motivates it, if it is not entirely obvious from the title. the commit message, just like the code, must be in english all lowercase there can be multiple components separated by : in case of hierarchical relationships, with , otherwise the body of the commit should probably contain a detailed description of the change ","categories":"","description":"","excerpt":"The overall format for git commits is as follows:\ncomponent: …","ref":"/osrd-website/en/developers/contribute/conventions/commit-style/","tags":"","title":"Commit style"},{"body":"Déjà, merci d’avoir pris le temps de contribuer !\nSi les sections suivantes forment un guide du contributeur, ce n’est pas pour autant un ensemble de règles strictes. En fait, si vous avez déjà contribué à des gros projets opensource, la suite ne sera pas surprenante. Dans le cas contraire, elle vous sera probablement très utile !\nCommuniquer Vous pouvez gagner du temps en discutant de votre projet de contribution avec les autres contributeurs :\nCréez une issue pour avoir un endroit un discuter de votre contribution Rejoignez le salon de messagerie instantanée matrix ! (très bientôt en place) Se renseigner Comme dans tout projet, chaque changement se repose sur ce qui a été fait par le passé. Avant d’apporter un changement, renseignez-vous sur l’existant :\nVous pouvez lire la documentation technique Il est préférable de lire le code source de l’application en rapport avec votre projet Vous pouvez contacter les derniers développeurs à avoir travaillé sur les zones du code en rapport avec votre projet ","categories":"","description":"Comment apporter sa pierre à l'édifice","excerpt":"Comment apporter sa pierre à l'édifice","ref":"/osrd-website/fr/developers/contribute/","tags":"","title":"Contribuer"},{"body":"First off, thanks for taking the time to contribute!\nThe following chapters are a set of guidelines for contributing to OSRD1. If you have already contributed to open source projects before, you probably won’t be surprised. If you have not, it will probably help a lot!\nCommunicate Chatting with other contributors is a great way to speed things up:\nCreate an issue to discuss your contribution project Join our matrix instant messaging room ! (very soon, it’s not yet there) Se renseigner Comme dans tout projet, chaque changement se repose sur ce qui a été fait par le passé. Avant d’apporter un changement, renseignez-vous sur l’existant:\nVous pouvez lire la documentation technique Il est préférable de lire le code source de l’application en rapport avec votre projet Vous pouvez contacter les derniers développeurs à avoir travaillé sur les zones du code en rapport avec votre projet These guidelines are mostly not strict rules, it’s probably fine to do things slightly differently. ↩︎\n","categories":"","description":"Learn about the how we work, and how you can work with us","excerpt":"Learn about the how we work, and how you can work with us","ref":"/osrd-website/en/developers/contribute/","tags":"","title":"Contribute"},{"body":"Description Chaque élément mobile, aiguille ou passage à niveau, a une liste d’états possibles. Ces états sont mutuellement exclusifs.\nDépendances une liste d’élements mobiles liste des états possibles de chaque élément mobile Opérations possibles observer un élément mobile vérouiller / dévérouiller un élément mobile bouger un élément mobile ","categories":"","description":"Gère l'état des organes de commande des aiguilles, passages à niveau, …","excerpt":"Gère l'état des organes de commande des aiguilles, passages à niveau, …","ref":"/osrd-website/fr/developers/internals/simulation-model/movable-elements/","tags":"","title":"Éléments mobiles"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/users/docs/userguide/","tags":"","title":"Guide utilisateur"},{"body":" Présentation La première phase du processus de conception des plans de transport commence très en amont : A-10 du jour de circulation. Elle a pour objectif la proposition de plusieurs scenarios de circulation sur des infrastructures ferroviaires existantes ou prospectives. Durant cette phase, SNCF Réseau (gestionnaire de l’infrastructure ferroviaire française et responsable de l’affectation et de la vente des sillons) collectionne les demandes des AO et des EF en termes de mobilité. Les demandes sont transmises sous la forme de schémas de dessertes : Représentation des trains demandés, leur itinéraire et les arrêts à desservir.\nLe produit OSRD Horaires Stratégiques a été conçu pour construire un plan d’exploitation à partir des schémas de dessertes, en s’appuyant sur la modélisation de l’infrastructure ferroviaire, le calcul de marche et la simulation. Construire un plan d’exploitation signifie qu’il faut effectuer la planification horaire des trains présentés sur les schémas de dessertes en répondant au mieux aux besoins de mobilités. L’outil OSRD fournit une base de données avec une modélisation microscopique de l’infrastructure ferroviaire française ainsi que du matériel roulant déjà utilisé en France. De plus, OSRD propose une interface permettant de :\nmodifier l’infrastructure existante, designer une nouvelle partie de l’infrastructure est proposée. Les produits de sortie du processus « OSRD Horaires stratégiques » sont des tableaux horaires affichant les horaires des trains. Une représentation graphique des horaires est ainsi proposée. Une vision globale et stratégique de la planification horaire est cruciale pour améliorer la performance ferroviaire. L’objectif ultime est de répondre aux besoins de mobilité en optimisant l’utilisation de la capacité en ligne, l’occupation de voie en gare et le roulement matériel. Pour répondre à cette exigence d’optimisation, des modules de modélisation mathématique et de résolution sont couplés avec le simulateur.\n","categories":"","description":"","excerpt":" Présentation La première phase du processus de conception des plans …","ref":"/osrd-website/fr/who-we-are/project/strategic-timetable/","tags":"","title":"Horaires stratégiques"},{"body":" La plupart des développeurs OSRD utilisent Linux. Vous pouvez utiliser Windows ou MacOS, mais pourriez rencontrer quelques problèmes. Obtenir le code source Installer git1 Ouvrir un terminal2 dans le dossier qui contiendra le code source d’OSRD git clone git@github.com:DGEXSolutions/osrd Lancer l’application avec docker-compose Pendant longtemps, même dans les cas où on ne développe que sur une partie des composants de l’application à la fois, il était necessaire de compiler, configurer et lancer les différents composants de l’application.\nAujourd’hui, vous pouvez déléguer ce travail à docker-compose, qui lancera tout où partie des composants d’OSRD.\nInstaller docker et docker-compose1 Lancer docker-compose up --build Sous Linux, utilisez le gestionnaire de packet de votre distribution, comme par exemple apt-get. ↩︎ ↩︎\nSous Windows, ouvrez Git Bash ↩︎\n","categories":"","description":"Apprendre à mettre en place un environnement de développement","excerpt":"Apprendre à mettre en place un environnement de développement","ref":"/osrd-website/fr/developers/contribute/setting-things-up/","tags":"","title":"Mise en place"},{"body":"Décrit l’organisation et le format des données dans OSRD\n","categories":"","description":"Décrit l'organisation et le format des données dans OSRD","excerpt":"Décrit l'organisation et le format des données dans OSRD","ref":"/osrd-website/fr/developers/internals/data-model/","tags":"","title":"Modèle de données"},{"body":"«The OSRD application is open source. The simulations are transparent, explicit and universal. Any actor willing to improve the competitiveness of the railway system can contribute to it»\nLoïc Hamelin, OSRD Project Manager at DGEX Solutions (Direction Générale Exploitation de SNCF Réseau)\nOSRD: when railway simulation becomes open source The choice of Open Source is particularly strategic in the public sector. In addition to significantly lowering development costs, it offers every citizen the transparency needed to understand and evaluate public investment choices.\nWe believe that Open Source addresses political, economic, technical and even energy issues:\nPolitical, through transparency and uniformity, because it is necessary to regain the confidence of our sponsors and because standards are struggling to be established in the sector; Economic, because a better use of the network will reduce the costs of operating and owning the network, and because the objective is to make the rail mode even more attractive; Technical, because sharing allows evolution; Energy, finally, because we can accelerate the energy transition by enhancing the value of rail transport. But we must do so while maintaining or improving industrial performance. Finally, Open Source allows federating a community of people who worked until then in their corner. Everything is based on (Bill) Joy’s infamous law: «No matter who you are, most of the smartest people work for someone else»!\nDefinition Open source consists in leaving the source code of a developed software freely available, so that anyone can read it, use it and propose modifications or developments. The design and development of open source software is then placed in the hands of communities of users and/or developers. Everyone has the ability to adapt the software to their own requirements and needs, while sharing their innovations with a large community. Development goals are therefore shared: bugs, the status of their resolution and the efforts made to solve them are public, as is the progress of new features. In absolute terms, anyone who wants to can contribute to the project, but this does not mean that any proposed change will be integrated: just like peer reviews in the scientific community, open source communities have their own standards, requirements, and code reviews. The goal is clear: to ensure that the project remains of good quality.\n","categories":"","description":"","excerpt":"«The OSRD application is open source. The simulations are transparent, …","ref":"/osrd-website/en/who-we-are/program/strategic-choices/opensource/","tags":"","title":"Open-Source"},{"body":"« L’application OSRD est open source. Les simulations sont transparentes, explicites et universelles. Tout acteur désireux d’améliorer la compétitivité du système ferroviaire peut y apporter sa contribution »\nLoïc Hamelin, Chef de projet OSRD chez DGEX Solutions (Direction Générale Exploitation de SNCF Réseau)\nOSRD : quand la simulation ferroviaire devient open source Le choix de l’open source est particulièrement stratégique dans le secteur public. En plus d’une baisse significative des coûts de développement, il offre à chaque citoyen la transparence nécessaire pour comprendre et évaluer les choix d’investissement public.\nNous croyons que l’open source répond à des enjeux d’ordre politique, économique, technique et même énergétique :\nPolitique, par la transparence et l’uniformisation, parce qu’il est nécessaire de retrouver la confiance de nos commanditaires et parce que les standards peinent à s’imposer dans le secteur; Économique, parce qu’une meilleure utilisation du réseau réduira les couts d’exploitation et de possession du réseau, et parce que l’objectif est de rendre le mode ferré encore plus attractif; Technique, parce que le partage permet l’évolution; Energétique, enfin, car nous pouvons accélérer la transition énergétique en valorisant le transport ferroviaire. Mais nous devons le faire en conservant ou améliorant la performance industrielle. Enfin, L’open source permet de fédérer une communauté de personnes qui travaillaient jusqu’alors dans leur coin. Tout tient dans la célèbre loi de (Bill) Joy : « Qui que vous soyez, les meilleurs travaillent pour quelqu’un d’autre » !\nDéfinition L’open source consiste à laisser le code source d’un logiciel développé en libre accès, afin que tout le monde puisse le lire, l’utiliser et proposer des modifications ou développements. La conception et le développement des logiciels open source sont alors placés entre les mains de communautés d’utilisateurs et/ou de développeurs. Chacun a la capacité d’adapter le logiciel à ses exigences et à ses besoins propres, tout en faisant profiter une large communauté de ses innovations. Les objectifs de développement sont donc partagés : les bugs, l’état de leur résolution et les efforts mis en œuvre pour les résoudre sont publics, tout comme l’avancement des nouvelles fonctionnalités. Dans l’absolu, toute personne volontaire peut contribuer au projet, mais cela ne signifie pas pour autant que tout changement proposé sera intégré : à l’instar des revues par les pairs de la communauté scientifique, les communautés open source ont leurs standards, leurs exigences, et leurs revues de code. L’objectif est clair : s’assurer que le projet reste de bonne qualité.\n","categories":"","description":"","excerpt":"« L’application OSRD est open source. Les simulations sont …","ref":"/osrd-website/fr/who-we-are/program/strategic-choices/opensource/","tags":"","title":"Open-Source"},{"body":" Program Strategic Timetables 2022 Objective: Designing a POC for building and representing strategic schedules Stage 1: Scoping stage (2-6 months):\nAnalysis of the existing tool (Viriato) and process Collection of needs/confrontation with users Deliverable: scoping note (objectives, expected functionalities, risks, planning, etc.) Exploitation Study 2022 Objective: Delivering V1 of the tool Operation of the signalling system Edition of the infra 1st version of the Studies module End of the stabilisation of the running calculation\nInfrastructure management 2022 Objective: To offer an open access infrastructure management service (layers and data) and their editing:\nProvision of layers Search in layer data Layers editing (Link with OSM) Short Term DCM Objective 1 - Integrating the residual capacity search algorithm into OSRD\nRun the algorithm in OSRD:\nIntegrate the algorithm Blocks occupation ? Integrate the algorithm into the SIPH data (infra and hourly data) Import of SIPH data into OSRD Projection of SIPH schedules to track Projection on the most likely route Objective 2 - Design the POC of the mobile application\n","categories":"","description":"","excerpt":" Program Strategic Timetables 2022 Objective: Designing a POC for …","ref":"/osrd-website/en/who-we-are/program/roadmap/","tags":"","title":"Roadmap"},{"body":" Programme Horaires Stratégiques Objectif 2022 : Concevoir un POC de construction et de représentation des horaires stratégiques 1ère étape : Etape cadrage (2 à 6 mois) :\nAnalyse de l’existant : outil (Viriato) et processus Recueil des besoins / confrontation aux utilisateurs Livrable : note de cadrage (objectifs, fonctionnalités attendues, risques, planning…) Etudes d’exploitation Objectif 2022 : Livrer la V1 de l’outil Fonctionnement de la signalisation Edition de l’infra 1ère version du module Etudes Fin de la stabilisation du calcul de marche\nGestion d’infrastructure Objectif 2022 : Proposer un service de gestion d’infrastructures en libre accès (couches et données) et leur édition :\nMise à disposition des couches Recherche dans les données de couches Edition des couches (Lien avec OSM) Sillon de dernière minute Objectif 1 - Intégrer dans OSRD l’algorithme de recherche dans la capacité résiduelle\nFaire fonctionner l’algorithme dans OSRD :\nIntégrer l’algorithme Occupation des blocks ? Intégrer l’algorithme dans les données SIPH (données infra et horaires) : Import des données SIPH dans OSRD Projection des horaires SIPH à la voie Projection sur le trajet le plus probable Objectif 2 - Concevoir le POC de l’application mobile\n","categories":"","description":"","excerpt":" Programme Horaires Stratégiques Objectif 2022 : Concevoir un POC de …","ref":"/osrd-website/fr/who-we-are/program/roadmap/","tags":"","title":"Roadmap"},{"body":" Most OSRD developers use Linux. Windows and MacOS should work too, but you may run into some issues. Getting the source code Install git.1 Open a terminal2 in the folder where the source code of OSRD will be located Run git clone git@github.com:DGEXSolutions/osrd Launch the application with docker-compose For a long time, making changes to a component of a multi-service application involved compiling, configuring and running all services manually.\nNowadays, it can be done using docker-compose. You can even start only a subset of the services.\nInstall docker and docker-compose. 1 Run docker-compose up --build Under Linux, use your distribution’s package manager, such as apt-get ↩︎ ↩︎\nUnder Windows, open Git Bash ↩︎\n","categories":"","description":"Learn to set up a development environment","excerpt":"Learn to set up a development environment","ref":"/osrd-website/en/developers/contribute/setting-things-up/","tags":"","title":"Setting things up"},{"body":" Presentation A first phase of the transportation plan design process starts very early: Y-10 of the day the train is to run and aims to propose several traffic scenarios on existing or prospective rail infrastructure. In this phase, SNCF Réseau, the French railway infrastructure manager and responsible for the allocation and sale of train paths, collects requests from OA and RC in terms of mobility. The requests will be transmitted in the form of service plans. A service plan is a way of representing the requested trains, their route and the stops to be served.\nThe OSRD Strategic Schedules product has been designed to build an operating plan from the service diagrams, based on rail infrastructure modeling, running calculation and simulation. Building an operating plan means scheduling the trains presented on the service diagrams in a way that best meets the mobility needs. The OSRD tool provides a database with a micro-model of the French railway infrastructure as well as the rolling stock already in use in France. Moreover, an interface to modify the existing infrastructure or to design a new part of the infrastructure is proposed (we tried to guarantee the ergonomics necessary for the creativity of this design work!) The output products of the “OSRD Strategic Schedules” process are timetables where the train schedules are displayed. A graphical representation of the timetables is thus proposed.\nA comprehensive and strategic view of the timetable planning is crucial to improve rail performance. The ultimate goal is to meet mobility needs by optimizing line capacity utilization, station track occupancy and material turnover. To meet this optimization requirement, we are working to implement mathematical modeling and resolution modules coupled with the simulator.\n","categories":"","description":"","excerpt":" Presentation A first phase of the transportation plan design process …","ref":"/osrd-website/en/who-we-are/project/strategic-timetable/","tags":"","title":"Strategic timetable"},{"body":"Le format général des commits est le suivant :\ncomposant: description du changement à l'impératif Description détaillée du contenu et de la motivation du changement, si le titre n'est pas complètement évident. le message comme le code doit être en anglais tout en minuscule il peut y avoir plusieurs composants, séparés par des : quand il y a une relation hiérarchique, ou des , sinon dans l’idéal, le corps du commit contient une description du changement. ","categories":"","description":"","excerpt":"Le format général des commits est le suivant :\ncomposant: description …","ref":"/osrd-website/fr/developers/contribute/conventions/commit-style/","tags":"","title":"Style des commits"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/users/docs/userguide/","tags":"","title":"Userguide"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/news/articles/","tags":"","title":"Articles"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/news/articles/","tags":"","title":"Articles"},{"body":" Introduction La modélisation physique ayant montré que l’accélération du train était influencée par différents facteurs variant le long du trajet (pente, courbure, force de traction du moteur…), le calcul doit passer par une méthode d’intégration numérique. Le trajet est alors séparé en étapes suffisamment courtes pour considérer tous ces facteurs comme constants, ce qui permet cette fois ci d’utiliser l’équation du mouvement pour calculer le déplacement et la vitesse du train.\nLa méthode d’intégration numérique d’Euler est la plus simple pour effectuer ce genre de calcul, mais elle présente un certain nombre d’inconvénients. Cet article explique la méthode d’Euler, pourquoi elle ne convient pas aux besoins d’OSRD et quelle méthode d’intégration doit être utilisée à la place.\nLa méthode d’Euler La méthode d’Euler appliquée à l’intégration de l’équation du mouvement d’un train est :\n$$v(t+dt) = a(v(t), x(t))dt + v(t)$$ (1) $$x(t+dt) = \\frac{1}{2}a(v(t), x(t))dt^2 + v(t)dt + x(t)$$ (2)  \nLes avantages de la méthode d’Euler La méthode d’Euler a pour avantages d’être très simple à implémenter et d’avoir un calcul plutôt rapide pour un pas de temps donné, en comparaison avec d’autres méthodes d’intégration numérique (voir annexe)\nLes inconvénients de la méthode d’Euler La méthode d’intégration d’Euler présente un certain nombre de problèmes pour OSRD :\nElle est relativement imprécise, et donc nécessite un faible pas de temps, ce qui génère beaucoup de données. En intégrant dans le temps, on ne connaît que les conditions du point de départ du pas d’intégration (pente, paramètres d’infrastructure, etc.) car on ne peut pas prédire précisément l’endroit où il se termine. On ne peut pas anticiper les futurs changements de directive : le train ne réagit qu’en comparant son état actuel à sa consigne au même instant. Pour illustrer c’est un peu comme si le conducteur était incapable de voir devant lui, alors que dans la réalité il anticipe en fonction des signaux, pentes, virages qu’il voit devant lui. La méthode Runge-Kutta 4 La méthode Runge-Kutta 4 appliquée à l’intégration de l’équation du mouvement d’un train est :\n$$v(t+dt) = v(t) + \\frac{1}{6}(k_1 + 2k_2 + 2k_3 + k_4)dt$$ (??) Avec :\n$$k_1 = a(v(t), x(t))$$\n$$k_2 = a\\Big(v(t+k_1\\frac{dt}{2}), x(t) + v(t)\\frac{dt}{2} + k_1\\frac{dt^2}{8}\\Big)$$\n$$k_3 = a\\Big(v(t+k_2\\frac{dt}{2}), x(t) + v(t)\\frac{dt}{2} + k_2\\frac{dt^2}{8}\\Big)$$\n$$k_4 = a\\Big(v(t+k_3dt), x(t) + v(t)dt + k_3\\frac{dt^2}{2}\\Big)$$\n \nLes avantages de la méthode de Runge Kutta 4 La méthode d’intégration de Runge Kutta 4 permet de répondre aux différents problèmes soulevés par celle d’Euler :\nElle permet d’anticiper les changements de directive au sein d’un pas de calcul, représentant ainsi davantage la réalité de conduite d’un train. Elle est plus précise pour le même temps de calcul (voir annexe), permettant des étapes d’intégration plus grandes, donc moins de points de données. Les inconvénients de la méthode de Runge Kutta 4 Le seul inconvénient notable de la méthode de Runge Kutta 4 rencontré pour l’instant est sa difficulté d’implémentation.\nLe choix de la méthode d’intégration pour OSRD Étude de la précision et de la vitesse de calcul Différentes méthodes d’intégration auraient pu remplacer l’intégration d’Euler de base dans l’algorithme d’OSRD. Afin de décider quelle méthode conviendrait le mieux, une étude sur la précision et la vitesse de calcul de différentes méthodes a été menée. Cette étude a comparé les méthodes suivantes :\nEuler Euler-Cauchy Runge-Kutta 4 Adams 2 Adams 3 Toutes les explications sur ces méthodes peuvent être trouvées dans ce document, et le code python utilisé pour la simulation est ici.\nLa simulation calcule la position et la vitesse d’un TGV accélérant sur une ligne droite plate.\nSimulations à pas de temps équivalent Une courbe de référence a été simulée en utilisant la méthode d’Euler avec un pas de temps de 0,1s, puis le même parcours a été simulé en utilisant les autres méthodes avec un pas de temps de 1s. Il est alors possible de comparer simplement chaque courbe à la courbe de référence, en calculant la valeur absolue de la différence à chaque point calculé. Voici l’erreur absolue résultante de la position du train sur sa distance parcourue :\nIl apparaît immédiatement que la méthode d’Euler est moins précise que les quatre autres d’environ un ordre de grandeur. Chaque courbe présente un pic où la précision est extrêmement élevée (erreur extrêmement faible), ce qui s’explique par le fait que toutes les courbes commencent légèrement au-dessus de la courbe de référence, la croisent en un point et finissent légèrement en dessous, ou vice versa.\nComme la précision n’est pas le seul indicateur important, le temps de calcul de chaque méthode a été mesuré. Voici ce que nous obtenons pour les mêmes paramètres d’entrée :\nMéthode d’intégration Temps de calcul (s) Euler 1.86 Euler-Cauchy 3.80 Runge-Kutta 4 7.01 Adams 2 3.43 Adams 3 5.27 Ainsi, Euler-Cauchy et Adams 2 sont environ deux fois plus lents que Euler, Adams 3 est environ trois fois plus lent, et RK4 est environ quatre fois plus lent. Ces résultats ont été vérifiés sur des simulations beaucoup plus longues, et les différents ratios sont maintenus.\nSimulation à temps de calcul équivalent Comme les temps de calcul de toutes les méthodes dépendent linéairement du pas de temps, il est relativement simple de comparer la précision pour un temps de calcul à peu près identique. En multipliant le pas de temps d’Euler-Cauchy et d’Adams 2 par 2, le pas de temps d’Adams 3 par 3, et le pas de temps de RK4 par 4, voici les courbes d’erreur absolue résultantes :\nEt voici les temps de calcul :\nMéthode d’intégration Temps de calcul (s) Euler 1.75 Euler-Cauchy 2.10 Runge-Kutta 4 1.95 Adams 2 1.91 Adams 3 1.99 Après un certain temps, RK4 tend à être la méthode la plus précise, légèrement plus précise que Euler-Cauchy, et toujours bien plus précise que la méthode d’Euler.\nConclusions de l’étude L’étude de la précision et de la vitesse de calcul présentée ci-dessus montre que RK4 et Euler-Cauchy seraient de bons candidats pour remplacer l’algorithme d’Euler dans OSRD : les deux sont rapides, précis, et pourraient remplacer la méthode d’Euler sans nécessiter de gros changements d’implémentation car ils ne font que des calculs au sein du pas de temps en cours de calcul. Il a été décidé qu’OSRD utiliserait la méthode Runge-Kutta 4 parce qu’elle est légèrement plus précise que Euler-Cauchy et que c’est une méthode bien connue pour ce type de calcul, donc très adaptée à un simulateur open-source.\n","categories":"","description":"","excerpt":" Introduction La modélisation physique ayant montré que l’accélération …","ref":"/osrd-website/fr/users/docs/running_time_calculation/numerical_integration/","tags":"","title":"Intégration numérique"},{"body":" Introduction Since physical modelling has shown that the acceleration of the train is influenced by various factors that vary along the route (gradient, curvature, engine traction force, etc.), the calculation must be carried out using a numerical integration method. The path is then separated into sufficiently short steps to consider all these factors as constant, which allows this time to use the equation of motion to calculate the displacement and speed of the train.\nEuler’s method of numerical integration is the simplest way of doing this, but it has a number of drawbacks. This article explains the Euler method, why it is not suitable for OSRD purposes and which integration method should be used instead.\nEuler’s method The Euler method applied to the integration of the equation of motion of a train is:\n$$v(t+dt) = a(v(t), x(t))dt + v(t)$$ (1) $$x(t+dt) = \\frac{1}{2}a(v(t), x(t))dt^2 + v(t)dt + x(t)$$ (2)  \nAdvantages of Euler’s method The advantages of the Euler method are that it is very simple to implement and has a rather fast calculation for a given time step, compared to other numerical integration methods (see appendix)\nDisadvantages of the Euler’s method The Euler integration method presents a number of problems for OSRD:\nIt is relatively imprecise, and therefore requires a small time step, which generates a lot of data. With time integration, only the conditions at the starting point of the integration step (gradient, infrastructure parameters, etc.) are known, as one cannot predict precisely where it will end. We cannot anticipate future changes in the directive: the train only reacts by comparing its current state with its set point at the same time. To illustrate, it is as if the driver is unable to see ahead, whereas in reality he anticipates according to the signals, slopes and bends he sees ahead. Runge-Kutta’s 4 method The Runge-Kutta 4 method applied to the integration of the equation of motion of a train is:\n$$v(t+dt) = v(t) + \\frac{1}{6}(k_1 + 2k_2 + 2k_3 + k_4)dt$$ (??) With:\n$$k_1 = a(v(t), x(t))$$\n$$k_2 = a\\Big(v(t+k_1\\frac{dt}{2}), x(t) + v(t)\\frac{dt}{2} + k_1\\frac{dt^2}{8}\\Big)$$\n$$k_3 = a\\Big(v(t+k_2\\frac{dt}{2}), x(t) + v(t)\\frac{dt}{2} + k_2\\frac{dt^2}{8}\\Big)$$\n$$k_4 = a\\Big(v(t+k_3dt), x(t) + v(t)dt + k_3\\frac{dt^2}{2}\\Big)$$\n \nAdvantages of Runge Kutta’s 4 method Runge Kutta’s method of integration 4 addresses the various problems raised by Euler’s method:\nIt allows the anticipation of directive changes within a calculation step, thus representing more accurately the reality of driving a train. It is more accurate for the same calculation time (see appendix), allowing for larger integration steps and therefore fewer data points. Disavantages of Runge Kutta’s 4 method The only notable drawback of the Runge Kutta 4 method encountered so far is its difficulty of implementation.\nThe choice of integration method for OSRD Study of accuracy and speed of calculation Different integration methods could have replaced the basic Euler integration in the OSRD algorithm. In order to decide which method would be most suitable, a study of the accuracy and computational speed of different methods was carried out. This study compared the following methods:\nEuler Euler-Cauchy Runge-Kutta 4 Adams 2 Adams 3 All explanations of these methods can be found (in french) in this document, and the python code used for the simulation is here.\nThe simulation calculates the position and speed of a high-speed train accelerating on a flat straight line.\nEquivalent time step simulations A reference curve was simulated using the Euler method with a time step of 0.1s, then the same path was simulated using the other methods with a time step of 1s. It is then possible to simply compare each curve to the reference curve, by calculating the absolute value of the difference at each calculated point. The resulting absolute error of the train’s position over its distance travelled is as follows:\nIt is immediately apparent that the Euler method is less accurate than the other four by about an order of magnitude. Each curve has a peak where the accuracy is extremely high (extremely low error), which is explained by the fact that all curves start slightly above the reference curve, cross it at one point and end slightly below it, or vice versa.\nAs accuracy is not the only important indicator, the calculation time of each method was measured. This is what we get for the same input parameters:\nIntegration method Calculation time (s) Euler 1.86 Euler-Cauchy 3.80 Runge-Kutta 4 7.01 Adams 2 3.43 Adams 3 5.27 Thus, Euler-Cauchy and Adams 2 are about twice as slow as Euler, Adams 3 is about three times as slow, and RK4 is about four times as slow. These results have been verified on much longer simulations, and the different ratios are maintained.\nSimulation with equivalent calculation time As the computation times of all methods depend linearly on the time step, it is relatively simple to compare the accuracy for approximately the same computation time. Multiplying the time step of Euler-Cauchy and Adams 2 by 2, the time step of Adams 3 by 3, and the time step of RK4 by 4, here are the resulting absolute error curves:\nAnd here are the calculation times:\nIntegration method Calculation time (s) Euler 1.75 Euler-Cauchy 2.10 Runge-Kutta 4 1.95 Adams 2 1.91 Adams 3 1.99 After some time, RK4 tends to be the most accurate method, slightly more accurate than Euler-Cauchy, and still much more accurate than the Euler method.\nConclusions of the study The study of accuracy and computational speed presented above shows that RK4 and Euler-Cauchy would be good candidates to replace the Euler algorithm in OSRD: both are fast, accurate, and could replace the Euler method without requiring large implementation changes because they only compute within the current time step. It was decided that OSRD would use the Runge-Kutta 4 method because it is slightly more accurate than Euler-Cauchy and it is a well-known method for this type of calculation, so it is very suitable for an open-source simulator.\n","categories":"","description":"","excerpt":" Introduction Since physical modelling has shown that the acceleration …","ref":"/osrd-website/en/users/docs/running_time_calculation/numerical_integration/","tags":"","title":"Numerical integration"},{"body":"\n","categories":"","description":"Architecture and inner workings of OSRD","excerpt":"Architecture and inner workings of OSRD","ref":"/osrd-website/en/developers/internals/","tags":"","title":"Architecture and internals"},{"body":"\n","categories":"","description":"Architecture et fonctionnement interne de l'application","excerpt":"Architecture et fonctionnement interne de l'application","ref":"/osrd-website/fr/developers/internals/","tags":"","title":"Architecture et fonctionnement"},{"body":"Please report anything you deem significant!\nOur bug tracking platform is github, so have to register to report bugs.\nFollow this link and pick whatever template fits the best.\n","categories":"","description":"Report a bug or suggest an enhancement","excerpt":"Report a bug or suggest an enhancement","ref":"/osrd-website/en/developers/contribute/bug-tracking/","tags":"","title":"Bug tracking"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/who-we-are/program/strategic-choices/","tags":"","title":"Choix stratégiques"},{"body":" Présentation Des millions d’Euros sont investis chaque année dans des projets ferroviaires sur la base d’études d’exploitation. Les objectifs de ces études sont la mise en cohérence du besoin de transport avec l’infrastructure ferroviaire et l’évaluation de la capacité du réseau à satisfaire ce besoin. Les études d’exploitation, stratégiques et capitales pour éclairer les décisions d’investissements publics relatives à l’avenir du réseau ferré et pour la performance du système ferroviaire, nécessitent des compétences rares et exclusives et produisent aujourd’hui des données éparses et mal capitalisées. Pour cette raison, SNCF Réseau a choisi en 2019 de se doter d’un outil maison pour effectuer ces études.\nLe projet « OSRD Etudes d’exploitation » est né pour répondre aux carences du marché : des outils nombreux et onéreux, fermés et aux résultats non-comparables. A l’opposé, nous proposons un outil de référence accessible a tous dont les résultats sont transparents, explicites et universels. L’outil OSRD fournit une base des données avec une modélisation microscopique de l’infrastructure ferroviaire française (gradients, rayons de courbure, vitesses limites). Une interface pour modifier l’infrastructure existante ou pour designer une nouvelle partie de l’infrastructure est proposée.\nGrâce a cette modélisation et à son moteur de calcul de marche, OSRD peut calculer des itinéraires, tracer des sillons, simuler les trains et leur interaction avec le système de signalisation. OSRD répond aux enjeux de mobilité durable en optimisant les consommations énergétiques. La marge de régularité prévue sur la marche d’un train est repartie selon un algorithme qui minimise l’énergie consommée par le train pendant le trajet.\nUn élément intéressant de vérification d’un scenario d’exploitation est l’évaluation de la robustesse de ce qui est projeté. Pour cette fonction, un module de simulations stochastiques est proposé. Des aléas peuvent être modélisés et injectés dans le simulateur pour en évaluer les conséquences et la capacité du système à revenir à l’équilibre.\n","categories":"","description":"","excerpt":" Présentation Des millions d’Euros sont investis chaque année dans des …","ref":"/osrd-website/fr/who-we-are/project/exploitation-studies/","tags":"","title":"Études d'exploitation"},{"body":"Introduction This page gives an example of how the data formats are used to describe an infrastructure in OSRD.\nFor this purpose, let’s take as an example the following toy infrastructure:\nTip To zoom in on diagrams, click on the edit button that appears when hovering over it. This diagram is an overview of the infrastructure with lines and stations only.\nThis infrastructure is not meant to be realistic, but rather meant to help illustrate OSRD’s data model. This example will be created step by step and explained along the way.\nThe infrastructure generator In the OSRD repository is a python library designed to help generate infrastructures in a format understood by OSRD.\nThe infrastructure discussed in this section can be generated thanks to small_infra.py file. To learn more about the generation scripts, you can check out the related README.\nTracks Track sections The first objects we need to define are TrackSections. Most other objects are positioned relative to track sections.\nA track section is a section of rail (switches not included). One can chose to divide the tracks of their infrastructure in as many track sections as they like. Here we chose to use the longest track sections possible, which means that between two switches there is always a single track section.\nTrack sections is what simulated trains roll onto. They are the abstract equivalent to physical rail sections. Track sections are bidirectional.\nIn this example, we define two tracks for the line between the West and North-East stations. We also have overpassing tracks at the North and Mid-West stations for added realism. Finally, we have three separate tracks in the West station, since it’s a major hub in our imaginary infrastructure.\nImportant TrackSections are represented as arrows in this diagram to stress the fact that they have a start and an end. It matters as objects positioned on track sections are located using their distance from the start of their track section.\nTherefore, to locate an object at the beginning of its track section, set its offset to 0. To move it to the end of its track section, set its offset to the length of the track section.\nThese attributes are required for the track section to be complete:\nlength: the length of the track section in meters. geo: the coordinates in real life (geo is for geographic), in the GeoJSON format. sch: the coordinates in the schematic view (sch for schematic), also in GeoJSON format. cosmetic attributes: line_name, track_name, track_number which are used to indicate the name and labels that were given to the tracks / lines in real life. For all track sections in our infrastructure, the geo and sch attributes are identical, and very much resemble the given diagram.\nFor most track sections, their length is proportional to what can be seen in the diagram. To preserve readability, exceptions were made for TA6, TA7, TD0 and TD1 (which are 10km and 25km).\nTrack Section Links At the moment we only created track sections, which are not connected to each other (geospacial data is not used to deduce which tracks connect).\nTrackSectionLinks are used to connect two track sections together, just like a weld joint would in real life. In an OSRD simulation, a train can go from one track section to another only if they are connected by a TrackSectionLink (or by a Switch).\nTo connect more than two TrackSections together, use the Switches.\nIn our infrastructure, since we chose to have our track sections as long as possible, we do not actually need to use TrackSectionLinks. TrackSectionLinks are always optional: two track sections connected by a link behave just like a single track section.\nSwitches A Switch represents just what you would expect: railway switches.\nSwitches can be thought of as a collections of track section links, partitioned into groups. Each group represents for a switch state. Switching group can take time, and at most one link can be ready to use at a time.\nIn the real world, switches are not unique, but rather instances of existing models. Thus, links and groups are not part of the switch itself, but in a SwitchType object, which is shared by switches of the same model.\nSwitch Types SwitchTypes have two mandatory attributes:\nports: A list of port names. A port is an endpoint which can be connected to a track section. groups: A mapping from group names to lists of links between two ports. At any time, all switches have an active group, and may have an active link, which always belongs to the active group. If there is an active link, it is active in a given direction. During a simulation, changing active link inside a group is instantaneous, but changing active link across groups takes configurable time. This is because a switch is a physical object, and changing active link can involve moving parts of it. Groups are designed to represent the different positions that a switch can have. Each group contains the links that can be used in the associated switch position.\nThe duration needed to change group is stored inside the Switch, since it can vary depending on the physical implementation of the switch.\nOur examples currently use three switch types. Switch types are just like other objects, and can easily be added as needed.\n1) The Point Switch\nThe ubiquitous Y switch, which can be thought of as either two tracks merging, or one track splitting.\nThis switch type has three ports: base, left and right.\nThere are two groups, each with one connection in their list: LEFT, which connects base to left, and RIGHT which connects base to right.\nThus, at any given moment, a train can go from base to left or from base to right but never to both at the same time. A train cannot go from left to right.\nA Point Switch only has two positions:\n2) The Cross Switch\nThis is simply two tracks crossing each other.\nThis type has four ports: north, south, east and west.\nIt has only one group containing two connections: north to south and west to east. Indeed this kind of switch is passive: it has no moving parts. Despite having a single group, it is still used by the simulation to enforce route reservations.\nHere are the two different connections that this switch type has:\n3) The Double cross switch\nThis one is more like two point switches back to back. It has four ports: south1, south2, north1 and north2.\nHowever, it has four groups, each with one connection. The four groups are represented in the following diagram:\nBack to switches A Switch has three attributes:\nswitch_type: the SwitchType identifier for this switch. ports: a mapping from port names to track sections extremities. group_change_delay: the time it takes to change which group of the switch is activated. The port names must match the ports of the switch type chosen. The track section endpoints can be start or end, be careful to chose the appropriate ones.\nMost of our example’s switches are regular point switches. The path from North station to South station has two cross switches, and there is a double cross switch right before the main line splits into the North-East and South-East lines.\nCurves and slopes Curves and Slopes are instrumental to realistic simulations. These objects are defined as a range between a begin and end offsets of one track section. If a curve / slope spans more than one track section, it has to be added to all of them.\nThe slope / curve values are constant on their entire range. For varying curves / slopes, one needs to create several objects.\nSlope values are measured in meters per kilometers, and the curve values are measured in meters (the radius of the curve).\nMind that the begin value should always be smaller than the end value. That is why the curve / slope values can be negative: an uphill slope of 1 going from offset 10 to 0 is the same as a downhill slope of -1 going from offsets 0 to 10. In the small_infra.py file, we have slopes on the track sections TA6, TA7, TD0 and TD1.\nThere are curves as well, on the track sections TE0, TE1, TE3 and TF1.\nInterlocking All objects so far contributed to track topology (shape). Topology would be enough for trains to navigate the network, but not enough to do so safely. to ensure safety, two systems collaborate:\ninterlocking ensures trains are allowed to move forward signaling is the mean by which interlocking communicates with the train Detectors These objects are used to create TVD sections (Track Vacancy Detection section): the track area in between detectors is a TVD section. When a train runs into a detector, the section it is entering becomes occupied. The only function of TVD sections is to locate trains.\nIn real life, detectors can be axle counters or track circuits for example.\nFor this mean of location to be efficient, detectors need to be placed regularly along your tracks, not too many because of cost, but not too few, because then TVD sections would be very large and trains would need to be very far apart to be told apart, which reduces capacity.\nThere often are detectors close to all sides of switches. This way, interlocking is made aware pretty much immediately when a switch is cleared, which is then free to be used again.\nLet’s take a cross switch as an example: if train A is crossing it north to south and train B is coming to cross west to east, then as soon as train A’s last car has passed the crossing, B should be able to go, since A is now on a completely unrelated track section. In OSRD, detectors are point objects, so all the attributes it needs are its id, and track location (track and offset).\nThe clumped up squares represent many detectors at once. Indeed, because some track sections are not represented with their full length, we could not represent all the detectors on the corresponding track section. Some notes:\nBetween some points, we added only one detector (and not two), because they were really close together, and it would have made no sense to create a tiny TVDS between the two. This situation happened on track sections (TA3, TA4, TA5, TF0 and TG3). In our infrastructure, there is relatively few track sections which are long enough to require more detectors than just those related to switches. Namely, TA6, TA7, TDO, TD1, TF1, TG1 and TH1. For example TD0, which measures 25km, has in fact 17 detectors in total. Buffer stops BufferStops are obstacles designed to prevent trains from sliding off dead ends.\nIn our infrastructure, there is a buffer stop on each track section which has a loose end. There are therefore 8 buffer stops in total.\nTogether with detectors, they set the boundaries of TVD sections (see Detectors)\nRoutes A Route is an itinerary in the infrastructure. A train path is a sequence of routes. Routes are used to reserve section of path with the interlocking. See the dedicated documentation.\nIt is represented with the following attributes:\nentry_point and exit_point: references detectors or buffer stops. path: The list of track section ranges a train can pass on to go from entry to exit. There can be two Routes with the same entry and exit points and two different paths. release_detectors: When a train clears a release detector, resources reserved from the beginning of the route until this detector are released. Signaling Thanks to interlocking, trains are located and allowed to move. It’s a good start, but meaningless until trains are made aware of it. This is where Signals come into play: signals react to interlocking, and can be seen by trains.\nHow trains react to signals depends on the aspect, kind of signal, and signaling system.\nHere are the most important attributes for signals:\nlinked_detector: The linked detector. type_code: The type of signal. direction: The direction it protects, which can simply be interpreted as the way in which it can be seen by an incoming train (since there are lights only on one side…). Direction is relative to track section orientation. Cosmetic attributes like angle_geo or side which control the way in which the signals are displayed in the front-end. Here is a visualization of how one can represent a signal, and which direction it protects.\nThe way the signals are arranged is highly dependent on both signaling system and infrastructure manager.\nHere are the basic rules used for this example infrastructure:\nWe add two spacing signals (one per direction) for each detector that is cutting a long TVD section into smaller ones. Switch entries where a train might have to stop are protected by a signal (which is located outside of the switch TVD section). It must be visible from the direction used to approach the switch. When there are multiple switches in a row, only the first one usually needs protection, as interlocking is usually designed as not to encourage trains stopping in the middle of intersections. Note that detectors linked to at least one signal are not represented, as there are not signals without associated detectors in this example. To get the id of a detector linked to a signal, take the signal’s id and replace S by D (e.g. SA0 -\u003e DA0).\nOn TA6, TA7, TD0 and TD1 we could not represent all signals because these track sections are very long and have many detectors, hence many signals. Miscellaneous Operational points OperationalPoints are collections of points (OperationalPointParts) of interest.\nFor example, it may be convenient to store the location of platforms as parts and group them by station in operational points.\nIn the example infrastructure, we only used operational points to represent stations. Operational point parts are displayed as purple diamonds. Keep in mind a single operational point may contain multiple parts.\nLoading Gauge Limits These objects are akin to Slopes and Curves: it covers a range of track section, with a begin and an end offset. It represents a restriction on the trains that can travel on the given range, by weight or by train type (freight or passenger).\nWe did not put any in our examples.\nSpeed Sections The SpeedSections represent speed limits (in meters per second) that are applied on some parts of the tracks. One SpeedSection can span on several track sections, and do not necessarily cover the whole track sections. Speed sections can overlap.\nIn our example infrastructure, we have a speed section covering the whole infrastructure, limiting the speed to 300 km/h. On a smaller part of the infrastructure, we applied more restrictive speed sections.\n","categories":"","description":"OSRD data format usage example","excerpt":"OSRD data format usage example","ref":"/osrd-website/en/developers/internals/data-model/usage-example/","tags":"","title":"Usage Example"},{"body":"Introduction ","categories":"","description":"Exemple d'utilisation des formats de données d'OSRD","excerpt":"Exemple d'utilisation des formats de données d'OSRD","ref":"/osrd-website/fr/developers/internals/data-model/usage-example/","tags":"","title":"Exemple"},{"body":" Presentation Millions of Euros are invested each year in rail projects on the basis of operational studies. The objectives of these studies are to match transport needs with the rail infrastructure and to assess the capacity of the network to meet these needs. Operational studies, which are strategic and crucial for informing public investment decisions concerning the future of the rail network and for the performance of the rail system, require rare and exclusive skills and currently produce scattered and poorly capitalized data. For this reason, SNCF Réseau has chosen in 2019 to equip itself with an in-house tool to carry out these studies.\nThe “OSRD Operational Studies” project was born in response to the shortcomings of the market: numerous and expensive tools, closed and with non-comparable results. On the contrary, we propose a reference tool accessible to all, whose results are transparent, explicit and universal. The OSRD tool provides a database with a microscopic modeling of the French railway infrastructure (gradients, radii of curvature, limiting speeds). An interface to modify the existing infrastructure or to design a new part of the infrastructure is proposed. Thanks to this modeling and to its running calculation engine, OSRD can calculate routes, draw paths, simulate trains and their interaction with the signaling system. OSRD meets the stakes of sustainable mobility by optimizing energy consumption. The expected regularity margin on the running of a train is distributed according to an algorithm that minimizes the energy consumed by the train during the journey.\nAn interesting element of verification of an exploitation scenario is the evaluation of the robustness of what is projected. For this function, a stochastic simulation module is proposed. Hazards can be modeled and injected into the simulator to evaluate the consequences and the ability of the system to return to balance.\n","categories":"","description":"","excerpt":" Presentation Millions of Euros are invested each year in rail …","ref":"/osrd-website/en/who-we-are/project/exploitation-studies/","tags":"","title":"Exploitation studies"},{"body":"Description La couche de localisation suit le déplacement des trains dans l’infrastructure\nDépendances une liste de zones Opérations Occuper une zone Libérer une zone Observer les changements d’occupation d’une zone Exigences de conception il doit être possible de suivre les changements d’occupation d’une zone il devra être possible de suivre les déplacements d’un train il devra être possible d’implémenter un système de bloc mobile ","categories":"","description":"Fournit les informations de position des trains sur le réseau","excerpt":"Fournit les informations de position des trains sur le réseau","ref":"/osrd-website/fr/developers/internals/simulation-model/location/","tags":"","title":"Localisation"},{"body":" Ce modèle n’est pas finalisé, et en attente d’implémentation\nArchitecture flowchart TD %%%% NODES train[Train] %% ↓ signaling[Signalisation] %% ↓ routing[Routage] ordering[Ordonnancement] spacing[\"Espacement\"] %% ↓ reservation[Réservation] %% ↓ location[Localisation] movable-elements[\"Éléments mobiles\"] %%%% EDGES train -- réagit à --\u003e signaling train -- réclame les itinéraires --\u003e ordering signaling -- observe --\u003e routing ordering -- réserve --\u003e routing signaling -- observe --\u003e spacing spacing -- observe --\u003e reservation spacing -- observe --\u003e movable-elements routing -- observe et réserve --\u003e reservation reservation -- observe --\u003e location reservation -- réserve et actionne --\u003e movable-elements train -- informe --\u003e location %%%% CLICKABLE LINKS click train href \"./train/\" _self click ordering href \"./ordering/\" _self click signaling href \"./signaling/\" _self click routing href \"./routing/\" _self click spacing href \"./spacing/\" _self click reservation href \"./reservation/\" _self click location href \"./location/\" _self click movable-elements href \"./movable-elements/\" _self TODO overlaps opposing movement protection ","categories":"","description":"Décrit le fonctionnement du poste d'aiguillage virtuel et de la signalisation","excerpt":"Décrit le fonctionnement du poste d'aiguillage virtuel et de la …","ref":"/osrd-website/fr/developers/internals/simulation-model/","tags":"","title":"Modèle de simulation de la signalisation et des aiguillages"},{"body":" Open data is one of the main digital challenges The opening of data promotes transparency and information, removes barriers to accessibility and use, and is a tremendous gas pedal of innovation.\nOn the rail system side, the SNCF has been committed for a few years to making data available for its passenger transport activities. The company produces a very large amount of data: timetables, equipment and services in stations, regularity, lines and connections, accessibility, etc.\nThe more data released, the more powerful the OSRD simulator will be! We are working every day to continue this opening up! Indeed, some data still classified as confidential are no longer classified as industrial secrets (e.g., data useful for calculating the speed and spacing of trains). The declassification of this non-sensitive data is essential for the operation of certain open source tools, whose performance depends heavily on shared data.\n","categories":"","description":"","excerpt":" Open data is one of the main digital challenges The opening of data …","ref":"/osrd-website/en/who-we-are/program/strategic-choices/opendata/","tags":"","title":"Open-Data"},{"body":" L’open data est l’un des principaux enjeux numériques L’ouverture des données favorise la transparence et l’information, lève les obstacles à l’accessibilité et à l’utilisation, et constitue un formidable accélérateur d’innovation.\nDu côté du système ferroviaire, la SNCF s’est engagée depuis quelques années dans la mise à disposition des données de ses activités de transport de voyageurs. L’entreprise produit un très grand nombre de données : horaires, équipements et services en gare, régularité, lignes et correspondances, accessibilité, etc.\nPlus il y aura de données libérées, plus le simulateur OSRD sera puissant ! Nous oeuvrons chaque jour pour poursuivre cette ouverture ! En effet, certaines données encore classées confidentielles ne relèvent pourtant plus du secret industriel (ex. : données utiles au calcul de marche et à l’espacement des trains). La déclassification de ces données non sensibles est indispensable à l’opérationnalité de certains outils open source, dont la performance dépend fortement des données partagées.\n","categories":"","description":"","excerpt":" L’open data est l’un des principaux enjeux numériques L’ouverture des …","ref":"/osrd-website/fr/who-we-are/program/strategic-choices/opendata/","tags":"","title":"Open-Data"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/who-we-are/program/strategic-choices/","tags":"","title":"Strategic choices"},{"body":"N’hésitez pas à signaler tout ce qui vous semble important !\nNotre outil de suivi des bugs est github. Il est nécessaire de s’inscrire pour signaler un bug.\nSuivez ce lien et choisissez le modèle qui correspond à votre cas de figure.\n","categories":"","description":"Comment signaler un bug ou suggérer une amélioration","excerpt":"Comment signaler un bug ou suggérer une amélioration","ref":"/osrd-website/fr/developers/contribute/bug-tracking/","tags":"","title":"Suivi des bugs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/users/docs/tutorials/","tags":"","title":"Tutorials"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/users/docs/tutorials/","tags":"","title":"Tutorials"},{"body":"The envelope system is an interface created specifically for the OSRD gait calculation. It allows you to manipulate different space/velocity curves, to slice them, to end them, to interpolate specific points, and to address many other needs necessary for the gait calculation.\nA specific interface in the OSRD Core service The envelope system is part of the core service of OSRD (see software architecture).\nIts main components are :\n1 - EnvelopePart: space/speed curve, defined as a sequence of points and having metadata indicating for example if it is an acceleration curve, a braking curve, a speed hold curve, etc.\n2 - Envelope: a list of end-to-end EnvelopeParts on which it is possible to perform certain operations:\ncheck for continuity in space (mandatory) and speed (optional) look for the minimum and/or maximum speed of the envelope cut a part of the envelope between two points in space perform a velocity interpolation at a certain position calculate the elapsed time between two positions in the envelope 3 - Overlays : system for adding more constrained (i.e. lower speed) EnvelopeParts to an existing envelope.\nGiven envelopes vs. calculated envelopes During the simulation, the train is supposed to follow certain speed instructions. These are modelled in OSRD by envelopes in the form of space/speed curves. Two types can be distinguished:\nEnvelopes from infrastructure and rolling stock data, such as maximum line speed and maximum train speed. Being input data for our calculation, they do not correspond to curves with a physical meaning, as they are not derived from the results of a real integration of the physical equations of motion. The envelopes result from real integration of the physical equations of motion. They correspond to a curve that is physically tenable by the train and also contain time information. A simple example to illustrate this difference: if we simulate a TER journey on a mountain line, one of the input data will be a maximum speed envelope of 160km/h, corresponding to the maximum speed of our TER. However, this envelope does not correspond to a physical reality, as it is possible that on certain sections the gradient is too steep for the train to be able to maintain this maximum speed of 160km/h. The calculated envelope will therefore show in this example a speed drop in the steepest areas, where the envelope given was perfectly flat.\n","categories":"","description":"","excerpt":"The envelope system is an interface created specifically for the OSRD …","ref":"/osrd-website/en/users/docs/running_time_calculation/envelopes_system/","tags":"","title":"Envelopes system"},{"body":"Le système d’enveloppes est une interface créée spécifiquement pour le calcul de marche d’OSRD. Il permet de manipuler différentes courbes espace/vitesse, de les découper, de les mettre bout à bout, d’interpoler des points spécifiques, et d’adresser beaucoup d’autres besoins nécessaires au calcul de marche.\nUne interface spécifique dans le service OSRD Core Le système d’enveloppes fait partie du service core d’OSRD (voir l’architecture du logiciel).\nSes principaux composants sont :\n1 - EnvelopePart : courbe espace/vitesse, définie comme une séquence des points et possédant des métadonnées indiquant par exemple s’il s’agit d’une courbe d’accélération, de freinage, de maintien de vitesse, etc.\n2 - Envelope : liste d’EnvelopeParts mises bout-à-bout et sur laquelle il est possible d’effectuer certaines opérations :\nvérifier la continuité dans l’espace (obligatoire) et dans la vitesse (facultative) chercher la vitesse minimale et/ou maximale de l’enveloppe couper une partie de l’enveloppe entre deux points de l’espace effectuer une interpolation de vitesse à une certaine position calculer le temps écoulé entre deux positions de l’enveloppe 3 - Overlays : système permettant d’ajouter des EnvelopePart plus contraignantes (c’est-à-dire dont la vitesse est plus faible) à une enveloppe existante.\nEnveloppes données vs enveloppes calculées Pendant la simulation, le train est censé suivre certaines instructions de vitesse. Celles-ci sont modélisées dans OSRD par des enveloppes sous forme de courbes espace/vitesse. On en distingue deux types :\nLes enveloppes provenant des données d’infrastructure et de matériel roulant, comme la vitesse maximale de la ligne et la vitesse maximale du train. Etant des données d’entrée de notre calcul, elles ne correspondent pas à des courbes ayant un sens physique, car elles ne sont pas issues des résultats d’une intégration réelle des équations physiques du mouvement. Les enveloppes résultant d’une intégration réelle des équations du mouvement physique. Elles correspondent à une courbe physiquement tenable par le train et contiennent également des informations sur le temps. Un exemple simple pour illustrer cette différence : si l’on simule un trajet de TER sur une ligne de montagne, une des données d’entrée va être une enveloppe de vitesse maximale à 160km/h, correspondant à la vitesse maximale de notre TER. Mais cette enveloppe ne correspond pas à une réalité physique, car il se peut que sur certaines portions la rampe soit trop raide pour que le train arrive effectivement à maintenir cette vitesse maximale de 160km/h. L’enveloppe calculée présentera donc dans cet exemple un décrochage de vitesse dans les zones de fortes rampes, là où l’enveloppe donnée était parfaitement plate.\n","categories":"","description":"","excerpt":"Le système d’enveloppes est une interface créée spécifiquement pour le …","ref":"/osrd-website/fr/users/docs/running_time_calculation/envelopes_system/","tags":"","title":"Le système d'enveloppes"},{"body":"OSRD peut être utilisé pour effectuer deux types de calculs :\nCalcul de marche (standalone train simulation) : calcul du temps de parcours d’un train sur un trajet donné,effectué sans interaction entre le train et le système de signalisation. Simulation : calcul “dynamique” de plusieurs trains interagissant entre eux via le système de signalisation. 1 - Les données d’entrée Un calcul de marche est basé sur 5 entrées :\nL’infrastructure : Topologie des lignes et des voies, position des gares et bâtiments voyageurs, position et type des aiguilles, signaux, vitesses maximales de ligne, profil de ligne corrigée (pentes, rampes et virages). L’histogramme bleu est une représentation des déclivités en [‰] par position en [m]. Les déclivités sont positives pour les rampes et négatives pour les pentes.\nLa ligne orange représente le profil cumulé, c’est-à-dire l’altitude relative par rapport au point de départ.\nLa ligne bleue est une représentation des virages en termes de rayons des courbures en [m].\nLe matériel roulant : Dont les caractéristiques nécessaires pour effectuer la simulation sont représentées ci-dessous. La courbe orange, appelée courbe effort-vitesse du matériel, représente l’effort moteur maximal en fonction de la vitesse de circulation.\nLa longueur, la masse, et la vitesse max du train sont représentées en bas de l’encadré.\nL’horaire de départ permettant ensuite de calculer les horaires de passage aux différents points remarquables (dont gares).\nLes marges : Temps ajouté au trajet du train pour détendre sa marche (voir page sur les marges).\nLe pas de temps pour le calcul de l’intégration numérique. 2 - Les résultats Les résultats d’un calcul de marche peuvent se représenter sous différentes formes :\nLe graphique espace/temps (GET) : représente le parcours des trains dans l’espace et dans le temps, sous la forme de traits globalement diagonaux dont la pente est la vitesse. Les arrêts apparaissent sous la forme de plateaux horizontaux. Exemple de GET avec plusieurs trains espacés d’environ 30mn.\nL’axe x est l’horaire de passage du train, l’axe y est la position du train en [m].\nLa ligne bleue représente le calcul de marche le plus tendu pour le train, la ligne verte représente un calcul de marche détendu, dit « économique ».\nLes rectangles pleins entourant les trajets représentent les portions de la voie successivement reservées au passage du train (appelées cantons).\nLe graphique espace/vitesse (GEV) : représente le parcours d’un seul train, cette fois-ci en terme de vitesse. Les arrêts apparaissent donc sous forme de décrochages de la courbe jusqu’à zéro, suivis d’un réaccélération. L’axe x est la position du train en [m], l’axe y est la vitesse du train en [km/h] .\nLa ligne violette représente la vitesse maximale autorisée.\nLa ligne bleue représente la vitesse dans le cas du calcul de marche le plus tendu.\nLa ligne verte représente la vitesse dans le cas du calcul de marche « économique ».\nLes horaires de passage du train aux différents points remarquables ","categories":"","description":"","excerpt":"OSRD peut être utilisé pour effectuer deux types de calculs :\nCalcul …","ref":"/osrd-website/fr/users/docs/running_time_calculation/","tags":"","title":"Calcul de marche"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/news/community/","tags":"","title":"Communauté"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/news/community/","tags":"","title":"Communauté"},{"body":"Whether you would like to understand how the application works or you are willing to contribute, this is the right place!\nArchitecture flowchart TD front[front end] django-api[django api] editoast[editoast] chartos[chartos] core[core] pg[(postgres)] redis[(redis)] front -- various apis--\u003e django-api front -- infrastructure edition --\u003e editoast front -- mapbox layers --\u003e chartos django-api --\u003e core django-api --\u003e pg chartos -- read only --\u003e pg chartos -- stores cached tiles --\u003e redis editoast -- writes --\u003e pg editoast -- invalidates tiles --\u003e chartos click front href \"./#front\" _self click django-api href \"./#django-api\" _self click editoast href \"./#editoast\" _self click chartos href \"./#chartos\" _self click core href \"./#core\" _self ","categories":"","description":"","excerpt":"Whether you would like to understand how the application works or you …","ref":"/osrd-website/en/developers/","tags":"","title":"Developers"},{"body":"Vous souhaitez contribuer à OSRD, ou simplement en comprendre le fonctionnement? Cette documentation est pour vous!\n","categories":"","description":"","excerpt":"Vous souhaitez contribuer à OSRD, ou simplement en comprendre le …","ref":"/osrd-website/fr/developers/","tags":"","title":"Développeurs"},{"body":" Présentation Plusieurs applications utilisées au sein du groupe SNCF et à l’extérieur ont besoin d’une représentation cartographique du réseau ferroviaire. Le fond de carte d’OSRD utilise les données géographiques d’OpenStreetMap (OSM), un « Wikipedia des cartes » qui permet de consulter et éditer des données géographiques de manière collaborative. Ce fond de carte est régulièrement mis à jour pour refléter les évolutions des infrastructures autres que ferroviaires.\n« OSRD Gestion d’infrastructure » propose un service de cartographie accessible à tous et partagé, calqué sur le même modèle : tout le monde pourra contribuer et mettre en qualité les données ferroviaires. Nous fournissons d’une part un éditeur complet de l’infrastructure du réseau ferré et des objets qui le composent, et d’autre part, la mise à disposition des couches de données pour leur exploitation et leur représentation dans les standards de la cartographie en ligne. Nous étudions enfin la possibilité de pouvoir à terme automatiser la mise à jour des données ferroviaires d’OpenStreetMap avec les données ainsi mises en qualité.\n","categories":"","description":"","excerpt":" Présentation Plusieurs applications utilisées au sein du groupe SNCF …","ref":"/osrd-website/fr/who-we-are/project/infrastructure-management/","tags":"","title":"Gestion d'infrastructure"},{"body":"","categories":"","description":"Gestion des versions de l'infrastructure","excerpt":"Gestion des versions de l'infrastructure","ref":"/osrd-website/fr/developers/internals/versionning/","tags":"","title":"Gestion des versions"},{"body":" Presentation Several applications used within the SNCF group and outside need a mapping representation of the railway network. The OSRD base map uses geographic data from OpenStreetMap (OSM), a “Wikipedia of maps” that allows collaborative consultation and editing of geographic data. This base map is regularly updated to reflect the evolution of non-rail infrastructure.\n“OSRD Infrastructure Management**” proposes a mapping service accessible to all and shared, based on the same model: everyone will be able to contribute and put in quality the railway data. We provide on the one hand a complete editor of the rail network infrastructure and the objects that compose it, and on the other hand, the provision of data layers for their exploitation and representation in the standards of online mapping. Finally, we are studying the possibility of **being able to automate the updating of OpenStreetMap’s railway data** with the data thus made available.\n","categories":"","description":"","excerpt":" Presentation Several applications used within the SNCF group and …","ref":"/osrd-website/en/who-we-are/project/infrastructure-management/","tags":"","title":"Infrastructure management"},{"body":"Unfortunately, developping railway software is hard. The main reason why might just be that railway systems both extremely complicated and easy to simplify. As the cost of training a software developper to be a railway expert from the get go is enormous, training usually occurs as needed.\nThis lack of initial detailed understanding makes it very, very easy for software engineers to model railway systems incorrectly, only to realize their mistake once it’s too late.\nThis wiki is meant to help software engineers have a deep understanding of railway systems.\nIt can only happen if content is added as needed. If something is missing, contribute!\n","categories":"","description":"International railway wiki","excerpt":"International railway wiki","ref":"/osrd-website/en/developers/railway_wiki/","tags":"","title":"Railway Wiki"},{"body":"Description Les zones (ou TVDSection / DetectionSection) sont des partitions physiques des voies :\ncapables de détecter la présence d’un train qui fournissent un service de réservation à l’usage des routes Chaque zone a un certain nombre de configurations différentes. Par exemple, une zone sans aiguille aura deux configurations :\nsens pair sens impair Une zone avec une aiguille aura 4 configurations :\nsens pair voie principale sens impair voie principale sens pair voie déviation sens impair voie déviation Chaque zone ne peut être réservée que pour une configuration donnée à la fois, mais peut être réservée simultanément par plusieurs routes. Une zone ne peut changer de configuration que lorsqu’elle n’est pas réservée.\nL’enclanchement de transit est un enclanchement qui vise à empêcher le mouvement d’un appareil de voie lorsqu’un train est en approche. Il concerne les organes de commandes des aiguilles. un enclanchement est un système qui permet d’imposer des ordres de manoeuvre sur un système, soit imposer des interdictions\nExigences de conception Les zones doivent pouvoir être vérouillées dans une configuration particulière. Il doit être possible pour plusieurs routes de partager une réservation de configuration. Il doit être possible d’observer l’évolution de statut d’une réservation. État class ZoneReservationStatus(IntEnum): # the head of the train didn't yet enter the zone AWAITING_USE = auto() # the train is inside the zone IN_USE = auto() # the train went and left AWAITING_RELEASE = auto() class ZoneReservation: train: TrainHandle status: ZoneReservationStatus async def wait_for_status(self, status): raise NotImplemented async def release(self): raise NotImplemented class ZoneState: # the current layout of the zone configuration: ZoneConfiguration # the list of trains which hold a right to use the zone in its current configuration reservations: Set[TrainHandle] # the list of trains currently inside the zone occupation: Set[TrainHandle] @property def is_locked(self): \"\"\"When any train holds a reservation for a route, the zone cannot change configuration\"\"\" return len(self.reservations) != 0 @abstractmethod async def reserve(self, configuration) -\u003e ZoneReservation: raise NotImplemented Dépendances une liste de zones capacité d’observer l’occupation des zones capacité d’actionner les éléments mobiles Opérations cantonnement: Observer l’occupation de la zone cantonnement: Observer la configuration de la zone (?) routage: Réserver une configuration de zone routage: Attendre que la réservation de la zone soit utilisée par son train routage: Relacher une réservation de zone ","categories":"","description":"Gère l'état de réservation des zones","excerpt":"Gère l'état de réservation des zones","ref":"/osrd-website/fr/developers/internals/simulation-model/reservation/","tags":"","title":"Reservation"},{"body":"OSRD can be used to perform two types of calculations:\nStandalone train simulation: calculation of the travel time of a train on a given route without interaction between the train and the signalling system. Simulation: “dynamic” calculation of several trains interacting with each other via the signalling system. 1 - The input data A running time calculation is based on 5 inputs:\nInfrastructure: Line and track topology, position of stations and passenger buildings, position and type of points, signals, maximum line speeds, corrected line profile (gradients, ramps and curves). The blue histogram is a representation of the gradients in [‰] per position in [m]. The gradients are positive for ramps and negative for slopes.\nThe orange line represents the cumulative profile, i.e. the relative altitude to the starting point.\nThe blue line is a representation of turns in terms of radii of curves in [m].\nThe rolling stock: The characteristics of which needed to perform the simulation are shown below. The orange curve, called the effort-speed curve, represents the maximum motor effort as a function of the speed of travel.\nThe length, mass, and maximum speed of the train are shown at the bottom of the box.\nThe departure time is then used to calculate the times of passage at the various points of interest (including stations).\nAllowances: Time added to the train’s journey to relax its running (see page on allowances).\nThe time step for the calculation of numerical integration. 2 - The results The results of a running time calculation can be represented in different forms:\nThe space/time graph (GET): represents the path of trains in space and time, in the form of generally diagonal lines whose slope is the speed. Stops are shown as horizontal plates. Example of a GET with several trains spaced about 30 minutes apart.\nThe x axis is the time of the train, the y axis is the position of the train in [m].\nThe blue line represents the most tense running calculation for the train, the green line represents a relaxed, so-called “economic” running calculation.\nThe solid rectangles surrounding the paths represent the portions of the track successively reserved for the train to pass (called blocks).\nThe space/speed graph (SSG): represents the journey of a single train, this time in terms of speed. Stops are therefore shown as a drop in the curve to zero, followed by a re-acceleration. The x axis is the train position in [m], the y axis is the train speed in [km/h].\nThe purple line represents the maximum permitted speed.\nThe blue line represents the speed in the case of the most stretched running calculation.\nThe green line represents the speed in the case of the “economic” travel calculation.\nThe timetable for the passage of the train at the various points of interest. ","categories":"","description":"","excerpt":"OSRD can be used to perform two types of calculations:\nStandalone …","ref":"/osrd-website/en/users/docs/running_time_calculation/","tags":"","title":"Running time calculation"},{"body":"What envelopes are? OSRD can be used to perform two kinds of calculation:\nStandalone train simulation where the running time calculation is performed without interaction between the train and the signaling system. Many trains simulation where a real dynamic simulation is run. In both cases, during the simulation, the train is supposed to follow some speed instructions. These are modeled in OSRD with space/speed curves called envelopes. There are two kinds of envelopes:\nEnvelopes coming from infrastructure and rolling stock data, such as the max speed of the line and the max speed of the train; these are inputs to our calculation and they are not physically accurate because they are not the results of a real integration of the physical movement equations. Envelopes resulting from a real integration of the physical movement equations. These contain also information about time.\nHow the envelope system is used into OSRD? Standalone train simulation Fastest running time calculation The first goal of a standalone train simulation is to perform the fastest running time calculation, where the train runs at the max permitted speed. To obtain this, a procedure composed by different stages is used. At each stage, some new envelopes are calculated and added to the previous ones. The final resulting envelope is what we call Max Effort envelope:\nA first envelope is calculated at the beginning of the simulation putting together all the envelopes related to some static speed limits (max speed of the line, max speed of the rolling stock, temporary speed restrictions, train category speed restrictions, axle load speed restrictions). The resulting envelope is called Most Restricted Speed Profile (MRSP). All the braking curves are computed by starting from their target point, i.e. the point in space where a certain speed limits is imposed (finite target speed) or stop point (target speed = 0 m/s). The braking curves are calculated by considering all the active forces (braking force constant or not, frictions, gradient gravity force) and for this reason are physically accurate. The resulting envelope is called Max Speed Profile. For each point corresponding to a speed increase in the MRSP or at the end of a stop braking curve, an accelerating curve is computed. The accelerating curves are calculated by considering all the active forces (traction force, frictions, gradient gravity force) and for this reason are physically accurate. For all the envelope parts that are not physically accurate, a proper integration of movement equations is performed. This last calculation is necessary for reproducing the correct behavior of envelope parts where the speed should be maintained at a constant value, by including the effect of all the forces. The resulting envelope is called Max Effort Profile. Running time calculation with allowances After having performed the fastest running time calculation, some allowances can be introduced into it. In the OSRD running time calculation, we decide to distribute allowances in an economical way, by minimizing the energy consumption during the train run. A new Eco envelope, resulting from a dichotomy algorithm, is therefore computed to distribute a certain allowance value into the previously calculated Max Effort envelope.\nMany trains simulation In the case of many trains simulation, the signaling system must assure the safety. The effect of signalization on to a train running time calculation is reproduced by overlapping dynamic envelopes onto the static one. A new dynamic envelope is introduced for example when a signal closes. The train follows the static economical envelope overlapped with the dynamic envelopes, if there are some. In this simulation mode, a check in time is completed with respect to a theoretical time coming from the time information of the static economical envelope. If the train is delayed with respect to the scheduled time, it will stop following the economical envelope and try to go faster. Its space/speed curve will be therefore limited by the max effort envelope.\nWhich integration method should OSRD use? Our Integration Method is available on the project’s Github repositorie.\n","categories":"","description":"","excerpt":"What envelopes are? OSRD can be used to perform two kinds of …","ref":"/osrd-website/en/users/docs/running_time_calculation/technical-and-physical-choices/","tags":"","title":"Technical \u0026 physical choices"},{"body":"Malheureusement, développer des logiciels ferroviaires est difficile. Une des principales raisons est que les systèmes ferroviaires sont à la fois complexes et faciles à simplifier. Le coût de transformer un développeur logiciel en expert ferroviaire étant énorme, cette formation est progressive.\nCe manque de compréhension initiale rend les erreurs de compréhension et de modélisation très, très, très faciles à commettre.\nCe wiki a pour objectif de rendre accessible aux développeurs des informations sur le monde ferroviaire.\nCela ne peut se produire que si le contenu est ajouté lorsque nécessaire. Si quelque chose manque, contribuez !\n","categories":"","description":"Wiki ferroviaire international","excerpt":"Wiki ferroviaire international","ref":"/osrd-website/fr/developers/railway_wiki/","tags":"","title":"Wiki Ferroviaire"},{"body":"Le calcul de marche dans OSRD est un processus à 4 étapes, utilisant chacune le système d’enveloppes :\nConstruction du profil de vitesse le plus restrictif Ajout des différentes courbes de freinage Ajout des différentes courbes d’accélération et vérification des courbes de vitesse constante Application de marge(s) Calcul du Most Restricted Speed Profile (MRSP) Une première enveloppe est calculée au début de la simulation en regroupant toutes les limites de vitesse statiques :\nvitesse maximale de la ligne vitesse maximale du matériel roulant limitations temporaires de vitesse (en cas de travaux sur une ligne par exemple) limitations de vitesse par catégorie de train limitations de vitesse selon la charge du train limitations de vitesse correspondant à des panneaux de signalisation La longueur du train est également prise en compte pour s’assurer que le train n’accélère qu’une fois sa queue ayant quitté la zone de plus faible vitesse. Un décalage est alors appliqué à la courbe en pointillée rouge. L’enveloppe résultante (courbe noire) est appelée Most Restricted Speed Profile (MRSP) correspondant donc au profil de vitesse le plus restrictif. C’est sur cette enveloppe que seront calculées les étapes suivantes.\nLa ligne pointillée rouge représente la vitesse maximale autorisée en fonction de la position. La ligne noire représente le MRSP où la longueur du train a été prise en compte.\nIl est à noter que les différentes envelopeParts composant le MRSP sont des données d’entrée, elles ne correspondent donc pas à des courbes avec une réalité physique.\nCalcul du Max Speed Profile En partant du MRSP, toutes les courbes de freinage sont calculées grâce au système d’overlay (voir ici pour plus de détails sur les overlays), c’est-à-dire en créant des envelopeParts qui seront plus restrictives que le MRSP. La courbe ainsi obtenue est appelée Max Speed Profile (profil de vitesse maximale). Il s’agit de l’enveloppe de vitesse maximale du train, tenant compte de ses capacités de freinage.\nEtant donné que les courbes de freinage ont un point de fin imposé et que l’équation de freinage n’a pas de solution analytique, il est impossible de prédire leur point de départ. Les courbes de freinage sont donc calculées à rebours en partant de leur point cible, c’est-à-dire le point dans l’espace où une certaine limite de vitesse est imposée (vitesse cible finie) ou le point d’arrêt (vitesse cible nulle).\nPour des raisons historiques en production horaire, les courbes de freinages sont calculées à la SNCF avec une décélération forfaitaire, dite décélération horaire (typiquement ~0,5m/s²) sans prendre en compte les autres forces. Cette méthode a donc également été implémentée dans OSRD, permettant ainsi de calculer les freinages de deux manières différentes : avec ce taux horaire ou avec une force de freinage qui vient simplement s’ajouter aux autres forces.\nCalcul du Max Effort Profile Pour chaque point correspondant à une augmentation de vitesse dans le MRSP ou à la fin d’une courbe de freinage d’arrêt, une courbe d’accélération est calculée. Les courbes d’accélération sont calculées en tenant compte de toutes les forces actives (force de traction, résistance à l’avancement, poids) et ont donc un sens physique.\nPour les envelopeParts dont le sens physique n’a pas encore été vérifié (qui à ce stade sont les phases de circulation à vitesse constante, provenant toujours du MRSP), une nouvelle intégration des équations de mouvement est effectuée. Ce dernier calcul est nécessaire pour prendre en compte d’éventuels décrochages de vitesse dans le cas où le train serait physiquement incapable de tenir sa vitesse, typiquement en présence de fortes rampes (voir cet exemple).\nL’enveloppe qui résulte de ces ajouts de courbes d’accélérations et de la vérification des plateaux de vitesse est appelée Max Effort Profile (profil d’effort maximal).\nA ce stade, l’enveloppe obtenue est continue et a un sens physique du début à fin. Le train accélère au maximum, roule aussi vite que possible en fonction des différentes limites de vitesse et de ses capacités motrices, et freine au maximum. Le calcul de marche obtenu s’appelle la marche de base. Elle correspond au trajet le plus rapide possible pour le matériel roulant donné sur le parcours donné.\nApplication de marge(s) Après avoir effectué le calcul de la marche de base (correspondant au Max Effort Profile dans OSRD), il est possible d’y appliquer des marges (allowances). Les marges sont des ajouts de temps supplémentaire au parcours du train. Elles servent notamment à lui permettre de rattraper son retard si besoin ou à d’autres besoins opérationnels (plus de détails sur les marges ici).\nUne nouvelle enveloppe Allowances est donc calculée grâce à des overlays pour distribuer la marge demandée par l’utilisateur sur l’enveloppe d’effort maximal calculée précédemment.\nDans le calcul de marche d’OSRD, il est possible de distribuer les marges d’une manière linéaire, en abaissant toutes les vitesses d’un certain facteur, ou économique, c’est-à-dire en minimisant la consommation d’énergie pendant le parcours du train.\nSimulation de plusieurs trains Dans le cas de la simulation de nombreux trains, le système de signalisation doit assurer la sécurité. L’effet de la signalisation sur le calcul de marche d’un train est reproduit en superposant des enveloppes dynamiques à l’enveloppe statique. Une nouvelle enveloppe dynamique est introduite par exemple lorsqu’un signal se ferme. Le train suit l’enveloppe économique statique superposée aux enveloppes dynamiques, s’il y en a. Dans ce mode de simulation, un contrôle du temps est effectué par rapport à un temps théorique provenant de l’information temporelle de l’enveloppe économique statique. Si le train est en retard par rapport à l’heure prévue, il cesse de suivre l’enveloppe économique et essaie d’aller plus vite. Sa courbe espace/vitesse sera donc limitée par l’enveloppe d’effort maximum.\n","categories":"","description":"","excerpt":"Le calcul de marche dans OSRD est un processus à 4 étapes, utilisant …","ref":"/osrd-website/fr/users/docs/running_time_calculation/pipeline/","tags":"","title":"Le processus de calcul de marche"},{"body":"The walk calculation in OSRD is a 4-step process, each using the envelopes system:\nConstruction of the most restrictive speed profile Addition of the different braking curves Adding the different acceleration curves and checking the constant speed curves Application of allowance(s) Calculation of the Most Restricted Speed Profile (MRSP) A first envelope is calculated at the beginning of the simulation by grouping all static velocity limits:\nmaximum line speed maximum speed of rolling stock temporary speed limits (e.g. in case of works on a line) speed limits by train category speed limits according to train load speed limits corresponding to signposts The length of the train is also taken into account to ensure that the train does not accelerate until its tail leaves the slowest speed zone. An offset is then applied to the red dashed curve. The resulting envelope (black curve) is called the Most Restricted Speed Profile (MRSP). It is on this envelope that the following steps will be calculated.\nThe red dotted line represents the maximum permitted speed depending on the position. The black line represents the MRSP where the train length has been taken into account.\nIt should be noted that the different envelopeParts composing the MRSP are input data, so they do not correspond to curves with a physical reality.\nCalculation of the Max Speed Profile Starting from the MRSP, all braking curves are calculated using the overlay system (see here for more details on overlays), i.e. by creating envelopeParts which will be more restrictive than the MRSP. The resulting curve is called Max Speed Profile. This is the maximum speed envelope of the train, taking into account its braking capabilities.\nSince braking curves have an imposed end point and the braking equation has no analytical solution, it is impossible to predict their starting point. The braking curves are therefore calculated backwards from their target point, i.e. the point in space where a certain speed limit is imposed (finite target speed) or the stopping point (zero target speed).\nFor historical reasons in hourly production, braking curves are calculated at SNCF with a fixed deceleration, the so-called hourly deceleration (typically ~0.5m/s²) without taking into account the other forces. This method has therefore also been implemented in OSRD, allowing the calculation of braking in two different ways: with this hourly rate or with a braking force that is simply added to the other forces.\nCalculation of the Max Effort Profile For each point corresponding to an increase in speed in the MRSP or at the end of a stop braking curve, an acceleration curve is calculated. The acceleration curves are calculated taking into account all active forces (traction force, driving resistance, weight) and therefore have a physical meaning.\nFor envelopeParts whose physical meaning has not yet been verified (which at this stage are the constant speed running phases, always coming from the MRSP), a new integration of the equations of motion is performed. This last calculation is necessary to take into account possible speed stalls in case the train is physically unable to hold its speed, typically in the presence of steep ramps (see this example).\nThe envelope that results from the addition of the acceleration curves and the verification of the speed plates is called the Max Effort Profile.\nAt this stage, the resulting envelope is continuous and has a physical meaning from start to finish. The train accelerates to the maximum, runs as fast as possible according to the different speed limits and driving capabilities, and brakes to the maximum. The resulting travel calculation is called the basic running time. It corresponds to the fastest possible route for the given rolling stock on the given route.\nApplication of allowance(s) After the calculation of the basic run (corresponding to the Max Effort Profile in OSRD), it is possible to apply allowances. Allowances are additions of extra time to the train’s journey. They are used to allow the train to catch up if necessary or for other operational purposes (more details on allowances here).\nA new Allowances envelope is therefore calculated using overlays to distribute the allowance requested by the user over the maximum effort envelope calculated previously.\nIn the OSRD running calculation it is possible to distribute the allowances in a linear way, by lowering all speeds by a certain factor, or in an economic way, i.e. by minimising the energy consumption during the train run.\nSimulation of several trains In the case of the simulation of many trains, the signalling system must ensure safety. The effect of signalling on the running calculation of a train is reproduced by superimposing dynamic envelopes on the static envelope. A new dynamic envelope is introduced for example when a signal closes. The train follows the static economic envelope superimposed on the dynamic envelopes, if any. In this simulation mode, a time check is performed against a theoretical time from the time information of the static economic envelope. If the train is late with respect to the scheduled time, it stops following the economic envelope and tries to go faster. Its space/speed curve will therefore be limited by the maximum effort envelope.\n","categories":"","description":"","excerpt":"The walk calculation in OSRD is a 4-step process, each using the …","ref":"/osrd-website/en/users/docs/running_time_calculation/pipeline/","tags":"","title":"Pipeline"},{"body":"Schéma de l’architecture du logiciel OSRD Il s’agit d’une architecture multi-services où plusieurs composants logiciels interagissent entre eux. Ce choix a été fait pour assurer la modularité du code et pour garantir l’exploitabilité de certains services d’OSRD par des applications extérieures.\n","categories":"","description":"","excerpt":"Schéma de l’architecture du logiciel OSRD Il s’agit d’une architecture …","ref":"/osrd-website/fr/users/docs/architecture/","tags":"","title":"Architecture de l'outil OSRD"},{"body":"Diagram of the OSRD software architecture It is a multi-service architecture where several software components interact with each other. This choice was made to ensure the modularity of the code and to guarantee the exploitability of certain OSRD services by external applications.\n","categories":"","description":"","excerpt":"Diagram of the OSRD software architecture It is a multi-service …","ref":"/osrd-website/en/users/docs/architecture/","tags":"","title":"Architecture of the OSRD tool"},{"body":"Ce chapitre décrit le processus aboutissant à l’intégration de code au sein du projet. Si vous avez besoin d’aide, ouvrez une issue ou envoyez un message instantané.\nSi vous n’être pas un habitué de Git, suivez ce tutoriel\nCréez une branche\nSi vous comptez contribuer régulièrement, vous pouvez demander accès au dépot principal. Sinon, créez un fork.\nAjoutez des changements sur votre branche\nEssayez de découper votre travail en étapes macroscopiques, et sauvegardez vos changements dans un commit à la fin de chaque étape. Essayez de suivre les conventions du projet.\nOuvrez une pull request\nUne fois que vos changements sont prêts, il est temps de proposer de les intégrer à la branche dev. Cela se fait dans l’interface web de Github.\nPrennez en compte les retours\nUne fois que votre pull request est ouverte, d’autres contributeurs doivent donner leur avis sur votre proposition:\nN’importe qui peut donner son avis Il est nécessaire d’obtenir l’approbation de quelqu’un familier avec le code pour pouvoir intégrer le changement Il est d’usage de prendre en compte tous les commentaires critiques Les commentaires sont souvent écrits dans un style plutôt direct, dans le soucis de collaborer efficacement vers une solution acceptable par tous. Une fois que tous les commentaires ont été pris en compte, un mainteneur intègre le changement. N’hésitez pas à relancer vos interlocuteurs, plusieurs fois si besoin.\n","categories":"","description":"Apporter des modifications au code d'OSRD","excerpt":"Apporter des modifications au code d'OSRD","ref":"/osrd-website/fr/developers/contribute/contributing-code/","tags":"","title":"Contribuer du code"},{"body":"This chapter is about the process of integrating changes into the common code base. If you need help at any stage, open an issue or message us.\nIf you are not used to Git, follow this tutorial\nCreate a branch\nIf you intend to contribute regularly, you can request access to the main repository. Otherwise, create a fork.\nAdd changes to your branch\nBefore you start working, try to split your work into macroscopic steps. At the end of each stop, save your changes into a commit. Try to follow style conventions.\nOpen a pull request\nOnce your changes are ready, you have to request integration with the dev branch. It can be done through the web interface.\nTake feedback into account\nOnce your pull request is open, other contributors can review your changes:\nAny user can review your changes Your code has to be approved by a contributor familiar with the code All users are expected to take critical comments into account Comments tend to be written in an open and direct manner. The intent is to efficiently collaborate towards a solution we all agree on. Once all discussions are resolved, a maintainer integrates the change. If you believe somebody forgot to review / merge your change, please speak out, multiple times if needs be.\n","categories":"","description":"Integrate changes into OSRD","excerpt":"Integrate changes into OSRD","ref":"/osrd-website/en/developers/contribute/contributing-code/","tags":"","title":"Contribute code"},{"body":" Infra Train Schedule ","categories":"","description":"","excerpt":" Infra Train Schedule ","ref":"/osrd-website/en/developers/json_schema/","tags":"","title":"JSON Schemas"},{"body":" Infra Rolling Stock ","categories":"","description":"","excerpt":" Infra Rolling Stock ","ref":"/osrd-website/fr/developers/json_schema/","tags":"","title":"JSON Schemas"},{"body":"Description Les routes sont formées à la demande. Plusieurs demandes peuvent avoir cours en simultané. Il est de la responsabilité du composant qui active les routes de s’assurer que les demandes sont faites dans le bon ordre. Une route est dite commandée lorsqu’un processus d’activation est en cours, et elle devient formée lorsque le processus se termine Une route peut être activée alors qu’un train est déjà en train de la parcourir. Il faut seulement qu’il soit possible de réserver les zones dans la bonne configuration. certains postes d’aiguillages ont un enclanchement entre itinéraires de sens contraire (affrontement) qui empêche l’activation d’une route en menant à une zone avec un transit en sens contraire. Exigences de conception Le système doit permettre à la signalisation de déterminer si la route est prête à être empruntée. Le système doit permettre l’ordonnancement des trains selon des critères configurables. Le système doit optionnellement permettre la destruction progressive (transit souple) de l’itinéraire après le passage du train. Commande simultanée de l’itinéraire Possibilités de design La contrainte la plus importante est la réaction des signaux aux itinéraires devant eux. Traditionnellement, les signaux réagissent à la complète formation d’une des routes devant eux. Cette formulation, si elle est sûre, impose plusieurs contraintes:\nIl est nécessaire d’associer un état à chaque itinéraire. Les signaux doivent aggréger l’état de tous les itinéraires devant eux. Il peut y en avoir beaucoup. Une autre possibilité est d’insérer un objet intermédiaire entre le signal et les routes devant lui, qui serait explicitement notifié par le processus d’activation de l’itinéraire de son état. Il existerait un objet de ce genre par couple (détecteur, direction) d’où une route part.\nLa seconde option nous semble préférable, car elle permet d’avoir un couplage moins fort entre la signalisation et les itinéraires.\nDépendances une liste d’élements mobiles liste des états possibles de chaque élément mobile Opérations activer une route: démarre un processus asynchrone qui ne se terminera que lorsque la route aura été réservée. Un objet permettant d’attendre que la route soit détruite après le passage du train est retourné observer un point d’entrée d’itinéraire permet à la signalisation de protéger les appareils de voie @dataclass class RouteHandle: route: Route zone_handles: List[ZoneReservationHandle] async def release(): \"\"\"This method must be awaited on for the route to release reservations behind the train\"\"\" for release_group in route.release_groups: last_zone_index = release_group.last_zone_index zone_handle = self.zone_handles[last_zone_index] await zone_handle.wait_for_status(train) await last_zone.release(train) class Route: async def activate(route, train) -\u003e RouteHandle: # zone_sequence is a list of the zones of the route, # sorted by any absolute order to avoid deadlocks handles = [] for zone, config in route.zone_reservation_sequence: handles.append(await zone.reserve(config, train)) # open and close the entrance signals route.entry_trigger.open() await route.zones[0].wait_until_train_leaves() route.entry_trigger.close() return RouteHandle(route, handles) ","categories":"","description":"Gère le cycle de vie des itinéraires","excerpt":"Gère le cycle de vie des itinéraires","ref":"/osrd-website/fr/developers/internals/simulation-model/routing/","tags":"","title":"Routage"},{"body":" Présentation Défis Ambition L’un des objectifs d’OSRD est de proposer un outil\n","categories":"","description":"","excerpt":" Présentation Défis Ambition L’un des objectifs d’OSRD est de proposer …","ref":"/osrd-website/fr/who-we-are/project/short-term-dcm/","tags":"","title":"Sillon de dernière minute"},{"body":" The purpose of allowances As explained in the calcul du Max Effort Profile, the basic running time represents the most stretched run normally achievable, i.e. the fastest possible run of the given equipment on the given route. The train accelerates to the maximum, travels as fast as possible according to the different speed limits and driving capabilities, and brakes to the maximum.\nThis basic run has a major disadvantage: if a train leaves 10 minutes late, it will arrive at best 10 minutes late, because by definition it is impossible for it to run faster than the basic run. Therefore, trains are scheduled with one or more allowances added. The allowances are a relaxation of the train’s route, an addition of time to the scheduled timetable, which inevitably results in a lowering of running speeds.\nA train running in basic gear is unable to catch up!\nAllowances types There are two types of allowances:\nThe regularity allowance: this is the additional time added to the basic running time to take account of the inaccuracy of speed measurement, to compensate for the consequences of external incidents that disrupt the theoretical run of trains, and to maintain the regularity of the traffic. The regularity allowance applies to the whole route, although its value may change at certain intervals. The construction allowance: this is the time added/removed on a specific interval, in addition to the regularity allowance, but this time for operational reasons (dodging another train, clearing a track more quickly, etc.) A basic running time with an added allowance of regularity gives what is known as a standard walk.\nAllowance distribution Since the addition of allowance results in lower speeds along the route, there are a number of possible routes. Indeed, there are an infinite number of solutions that result in the same journey time.\nAs a simple example, in order to reduce the running time of a train by 10% of its journey time, it is possible to extend any stop by the time equivalent to this 10%, just as it is possible to run at 1/1.1 = 90.9% of the train’s capacity over the entire route, or to run slower, but only at high speeds…\nThere are currently two algorithms for margin distribution in OSRD: linear and economic.\nLinear distribution Linear allowance distribution is simply lowering the speeds by the same factor over the area where the user applies the allowance. Here is an example of its application:\nThe advantage of this distribution is that the allowance is spread evenly over the entire journey. A train that is late on 30% of its journey will have 70% of its allowance for the remaining 70% of its journey.\nEconomic distribution The economic distribution of the allowance, presented in detail in this document, consists of distributing the allowance in the most energy-efficient way possible. It is based on two principles:\na maximum speed, avoiding the most energy-intensive speeds run-on zones, located before braking and steep gradients, where the train runs with the engine off thanks to its inertia, allowing it to consume no energy during this period An example of economic walking. Above, the gradients/ramps encountered by the train. The areas of travel on the track are shown in blue.\n","categories":"","description":"","excerpt":" The purpose of allowances As explained in the calcul du Max Effort …","ref":"/osrd-website/en/users/docs/running_time_calculation/allowances/","tags":"","title":"Allowances"},{"body":" La raison d’être des marges Comme expliqué dans le calcul du Max Effort Profile, la marche de base représente la marche la plus tendue normalement réalisable, c’est-à-dire le trajet le plus rapide possible du matériel donné sur le parcours donné. Le train accélère au maximum, roule aussi vite que possible en fonction des différentes limites de vitesse et de ses capacités motrices, et freine au maximum.\nCette marche de base présente un inconvénient majeur : si un train part avec 10min de retard, il arrivera au mieux avec 10min de retard, car par définition il lui est impossible de rouler plus vite que la marche de base. Par conséquent, les trains sont programmés avec un ajout d’une ou de plusieurs marges. Les marges sont une détente du trajet du train, un ajout de temps à l’horaire prévu, qui se traduit inévitablement par un abaissement des vitesses de circulation.\nUn train circulant en marche de base est incapable de rattraper son retard !\nLe type de marge On distingue deux types de marges :\nLa marge de régularité : il s’agit du temps complémentaire ajouté à la marche de base pour tenir compte de l’imprécision de la mesure de la vitesse, pour pallier les conséquences des incidents extérieurs venant perturber la marche théorique des trains, et pour maintenir la régularité de la circulation. La marge de régularité s’applique sur l’ensemble du trajet, bien que sa valeur puisse changer sur certains intervalles. La marge de construction : il s’agit du temps ajouté / retiré sur un intervalle spécifique, en plus de la marge de régularité, mais cette fois pour des raisons opérationnelles (esquiver un autre train, libérer une voie plus rapidement, etc.) Une marche de base à laquelle on vient ajouter une marge de régularité donne ce que l’on appelle une marche type.\nLa distribution de la marge L’ajout de marge se traduisant par un abaissement des vitesses le long du trajet, plusieurs marches types sont possibles. En effet, il existe une infinité de solutions aboutissant au même temps de parcours.\nEn guise d’exemple simple, pour détendre la marche d’un train de 10% de son temps de parcours, il est possible de prolonger n’importe quel arrêt de l’équivalent en temps de ces 10%, tout comme il est possible de rouler à 1/1,1 = 90,9% des capacités du train sur l’ensemble du parcours, ou encore de rouler moins vite, mais seulement aux vitesses élevées…\nIl y a pour l’instant deux algorithmes de distribution de la marge dans OSRD : linéaire et économique.\nLa distribution linéaire La distribution de marge linéaire consiste simplement à abaisser les vitesses d’un même facteur sur la zone où l’utilisateur applique la marge. En voici un exemple d’application :\nCette distribution a pour avantage de répartir la marge de la même manière sur tout le trajet. Un train prenant du retard à 30% de son trajet disposera de 70% de sa marge pour les 70% de trajets restants.\nLa distribution économique La distribution économique de la marge, présentée en détail dans ce document, consiste à répartir la marge de la manière la plus économe possible en énergie. Elle est basée sur deux principes :\nune vitesse plafond, évitant les vitesses les plus consommatrices en énergie des zones de marche sur l’erre, situées avant les freinages et les fortes pentes, où le train circule à moteur coupé grâce à son inertie, permettant de ne consommer aucune énergie pendant ce laps de temps Un exemple de marche économique. En haut, les pentes/rampes rencontrées par le train. Les zones de marche sur l’erre sont représentées en bleu.\n","categories":"","description":"","excerpt":" La raison d’être des marges Comme expliqué dans le calcul du Max …","ref":"/osrd-website/fr/users/docs/running_time_calculation/allowances/","tags":"","title":"Les marges"},{"body":"Couche de cantonnement La couche de cantonnement gère des routes de signal à signal (canton). Elle permet à la signalisation d’observer l’état d’un groupe de zones protégées par chaque signal, et de trouver le signal suivant dans la chaîne.\nChaque canton porte les informations statiques suivantes:\nles zones protégées par le canton, et leur configuration attendue (ce qui inclus l’état des éléments mobiles) les signaux de début et de fin (optionnels) Un canton est actif si tous ses éléments mobiles sont dans la position requise.\nTODO Un canton devrait-il être actif quand toutes ses zones sont dans la configuration requise ? Dans ce cas, les cantons de sens contraire seront inactifs. État L’état du canton est une combinaison de:\nsi toutes les zones sont correctement réservées si une des zones est occupée struct SignalingRouteState { reserved: bool, occupied: bool, } Les cantons n’ont pas d’état persistant. Ils sont à tout instant capables de recalculer leur état.\nOpérations On peut demander, étant une liste de signaling routes partant du même point, laquelle est active (si il y en a une), et son état. Cette opération est commune à la couche d’API, et non à une signaling route en particulier. Exigences de conception chaque signal doit connaître le prochain signal compatible chaque signal doit connaître les zones qu’il protège compatibilité modules signalisation : les modules doivent créer les cantons entre chaque signaux. Chaque canton a un système de signalisation associé. compatibilité pathfinding : Le pathfinding se fait dans le produit du graphe de routage et du graphe de cantons. ","categories":"","description":"Gère l'état des cantons","excerpt":"Gère l'état des cantons","ref":"/osrd-website/fr/developers/internals/simulation-model/spacing/","tags":"","title":"Espacement"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/users/docs/json_schema/","tags":"","title":"JSON Schema"},{"body":" ","categories":"","description":"","excerpt":" ","ref":"/osrd-website/fr/users/docs/json_schema/","tags":"","title":"JSON Schema"},{"body":" ","categories":"","description":"Comment faire des retours constructifs","excerpt":"Comment faire des retours constructifs","ref":"/osrd-website/fr/developers/contribute/reviewing-code/","tags":"","title":"Passer du code en revue"},{"body":" ","categories":"","description":"How to give useful feedback","excerpt":"How to give useful feedback","ref":"/osrd-website/en/developers/contribute/reviewing-code/","tags":"","title":"Reviewing code"},{"body":"Définition La couche d’ordonnancement a pour a responsabilité d’établir l’ordre de commande des itinéraires, et par conséquent, l’ordre de passage des trains. La méthode exacte utilisée pour prendre cette décision n’importe pas, du moment qu’elle garanti que la simulation se termine (elle ne doit pas amener de trains en nez-à-nez, ou créer d’autre cas de figure de blocage).\nIl est possible d’implémenter un module d’ordonnancement via des tableaux d’ordre de succession des trains aux aiguilles.\nExigences de conception Il doit être possible de connecter n’importe quel algorithme d’ordonnancement Le module d’ordonnancement doit blocker puis redémarrer des demandes d’itinéraire. Opérations train: Le train demande les itinéraires devant lui, aussi loin qu’il peut. Sa demande peut être mise en attente du passage d’un autre train. ","categories":"","description":"Décide de l'ordre de formation des itinéraires","excerpt":"Décide de l'ordre de formation des itinéraires","ref":"/osrd-website/fr/developers/internals/simulation-model/ordering/","tags":"","title":"Ordonnancement"},{"body":"Description La couche de signalisation comprend l’ensemble des signaux, qui réagissent au cantonnement et à la réservation. Les signaux peuvent être de différent types, et sont chargés de manière modulaire. Seul importe leur comportement vis-à-vis de l’état de l’infrastructure, et la réaction des trains à la signalisation.\nÉtat Chaque système de signalisation a son type d’état de signal.\nÉtant donné un type de signal, il doit être possible de :\nsavoir s’il est contraignant déterminer une représentation graphique de ce signal TODO: il devra être possible de faire réagit un train à ce signal Dépendances capacité d’observer l’état des routes, pour les signaux qui débutent une route possibilité d’observer l’état des cantons devant le signal, de sélectionner le canton actif, et de réagir en fonction de l’occupation du canton et du signal de fin de canton Opérations observer le signal ","categories":"","description":"Gère l'état des signaux","excerpt":"Gère l'état des signaux","ref":"/osrd-website/fr/developers/internals/simulation-model/signaling/","tags":"","title":"Signalisation"},{"body":"Description Les contraintes sur ce qu’est un train sont relativement faibles. Il doit seulement avoir un identifiant, qui permet aux autres systèmes de garder des références vers des trains.\nExigences de conception Les trains occupent les zones. Les trains doivent être suivis pour préserver leur ordre de passage. Les trains ont pour responsabilité de demander les itinéraires devant eux. ","categories":"","description":"Représente un train dans la simulation","excerpt":"Représente un train dans la simulation","ref":"/osrd-website/fr/developers/internals/simulation-model/train/","tags":"","title":"Train"},{"body":"Les conventions de style sont des règles d’écriture qui permettent d’uniformiser divers aspects du projet.\nElles sont relativement importantes, car elles permettent une meilleure compréhension entre développeurs, et donc une productivité accrue.\n","categories":"","description":"Conventions de style communes","excerpt":"Conventions de style communes","ref":"/osrd-website/fr/developers/contribute/conventions/","tags":"","title":"Conventions de style"},{"body":"Style conventions are writting rules means to standardize various aspects of the project.\nThese matter quite a bit: They enable better communication and programming efficiently.\n","categories":"","description":"","excerpt":"Style conventions are writting rules means to standardize various …","ref":"/osrd-website/en/developers/contribute/conventions/","tags":"","title":"Style conventions"},{"body":"À compléter : ouvrez une issue en cas de mot manquant\nA ADV : Appareil de voie B BA : Block automatique BAL : Block automatique lumineux BAPR : Block automatique à permissivité restreinte BM : Block manuel BMCV : BM par circuit de voie BMVU : BM de voie unique C CAPI : Cantonnement assisté par informatique CC : Commande et contrôle COVIT : Contrôle de vitesse CT : Cantonnement téléphonique D DAAT : Dispositif d’arrêt automatique des trains DMI : Driver machine interface : dispositif qui permet la communication entre le système bord et le conducteur DV : Double voie E EOA : End of authority (fin d’autorisation de mouvement) EPSF : Établissement public de sécurité ferroviaire ETCS : European train control system (système européen de contrôle commande des trains) ERTMS : European rail traffic management system (système européen de gestion du trafic ferroviaire) EVC : European vital computer. (ordinateur européen de sécurité) : calculateur de bord qui supervise la marche du train en fonction des données sol et bord F FA : Fermeture automatique FS : Full supervision (supervision complète) : mode technique dans lequel le train est supervisé en vitesse et déplacement = marche normale attribuée au train G GI : Gestionnaire d’infrastructure GSM/GFU : Global system for mobile communication/Groupe fermé d’utilisateurs GSM-R : Global system for mobile communication railways (Système de communication téléphonique pour mobile dédié aux chemins de fer) GSM-R Data : Système de transmission de données entre les installations « sol » et les installations « bord » via le réseau GSM-R I ICS : Installations de circulation à contre-sens IPCS : Installations permanentes de contre-sens IS : Installation de sécurité ITCS : Installations temporaires de contre-sens J JRU : Juridical recording unit (Enregistreur des paramètres d’exploitation) K KVB : Contrôle de vitesse par balises L LEU : Line side electronic unit (codeur ERTMS) LGV : Ligne à grande vitesse M MA : Movement authority : autorisation donnée à un train de circuler vers un point donné en tant que mouvement supervisé N Nf : Non franchissable NL : Non leading (non en tête) : Mode technique de circulation utilisé pour la double traction ou la pousse O OS : On sight (conduite à vue) : mode technique de circulation qui autorise le conducteur à s’avancer en marche à vue. En ETCS1, le mode OS accompagné du message textuel national « Voie de service » impose la marche en manoeuvre pour la réception sur voie de service P PI ETCS : Point d’information ETCS : constitué d’une ou plusieurs balises transmettant des informations vers le bord (par exemple PI avancé ou PI signal) PL : Pleine ligne PLD : Point limite de domaine : point où une transition entre ETCS et un autre système de signalisation a lieu PN : Passage à niveau R RBC : Radio block center : système centralisé fonctionnant avec les enclenchements afin d’établir et de contrôler l’espacement et le mouvement des trains en envoyant et recevant des informations par radio en ETCS2 ou 3 RFN : Réseau Ferré National RST : Radio sol-train RT : Renseignement technique RV : Reversing (refoulement) : mode technique de circulation utilisé pour permettre au train de reculer d’urgence sans signaux ni ordre dans une zone prédéfinie. Ce mode n’est pas utilisé sur le RFN S SGS : Système de gestion de la sécurité SH : Shunting (manoeuvre) : mode technique de circulation manoeuvre SN : System national : mode technique de circulation de niveau STM SR : Staff responsible (responsabilité agent) : mode technique de circulation utilisé dans les situations dégradées. Il est utilisable sous la responsabilité respective de l’agent-circulation et du conducteur STM : Specific transmission module (Module spécifique de transmission) : ce dispositif permet à l’ETCS d’utiliser un système de signalisation national T TECS : Tableau lumineux d’entrée à contre sens TIV : Tableau indicateur de vitesse TR : Trip : mode technique de circulation entraînant une application irréversible du freinage d’urgence par le système ETCS jusqu’à l’arrêt du train TSCS : Tableau lumineux de sortie à contre sens TVM : Transmission voie machine V VB : Voie banalisée VP : Voie principale VS : Voie de service VU : Voie unique VUT : Voie unique temporaire VUTP : Voie unique temporaire à caractère permanent ","categories":"","description":"Glossaire thématique d'OSRD et du ferroviaire","excerpt":"Glossaire thématique d'OSRD et du ferroviaire","ref":"/osrd-website/fr/developers/railway_wiki/glossary/","tags":"","title":"Glossaire"},{"body":"Please open an issue if you’re missing a word\n","categories":"","description":"Glossary of OSRD and railway vocabulary","excerpt":"Glossary of OSRD and railway vocabulary","ref":"/osrd-website/en/developers/railway_wiki/glossary/","tags":"","title":"Glossary"},{"body":"Tout le code du dépot OSRD est mis à disposition sous la licence LGPLv3.\nComme pour tout autre projet open source, contribuer du code implique que son propriétaire consent à sa distribution sous la licence du projet.\nLa licence LGPL interdit de modifier OSRD sans publier le code source de l’application modifiée: profitez du travail des autres, et laissez les autres profiter de votre travail !\nCette contrainte n’est pas contagieuse à travers les API: Il est possible d’utiliser OSRD comme bibliothèque, framework ou serveur pour s’interfacer avec des composants propriétaires. N’hésitez pas à proposer des changements pour répondre à vos besoins.\n","categories":"","description":"Droits et obligations","excerpt":"Droits et obligations","ref":"/osrd-website/fr/developers/contribute/license/","tags":"","title":"Licence"},{"body":"The source code of OSRD is available under the LGPLv3 license.\nJust like with any other open source project, by contributing source code, you imply the owner of the source code allows its distribution under the project’s license.\nLGPLv3 forbids modifying source code without sharing the changes under the same license: use other people’s work, and share yours!\nThis constraint does not propagate through APIs: You can use OSRD as a library, framework or API server to interface with proprietary software. Please suggest changes if you need new interfaces.\n","categories":"","description":"Rights and obligations","excerpt":"Rights and obligations","ref":"/osrd-website/en/developers/contribute/license/","tags":"","title":"License"},{"body":"Cette section est destinée à exposer les principes généraux relatifs :\naux signaux aux régimes d’exploitation des lignes (à venir) aux différents systèmes d’espacement des trains La grande majorité des informations de cette section sont extraites du document pédagogique de l’Établissement Public de Sécurité Ferroviaire (EPSF) édité le 05 juillet 2017.\n","categories":"","description":"Les signaux, régimes d'exploitation des trains, et les systèmes d'espacement des trains","excerpt":"Les signaux, régimes d'exploitation des trains, et les systèmes …","ref":"/osrd-website/fr/developers/railway_wiki/signalling/","tags":"","title":"Signalisation"},{"body":"Principe Pour transmettre au conducteur des ordres et informations liées à la sécurité des circulations, il est fait usage de signaux. Ces signaux peuvent indiquer des informations relatives aux limites de vitesse, peuvent servir à garantir l’espacement des trains ou donner des indications diverses telles que l’accès à des voies de service, des ouvrages d’art à gabarits réduit, etc.\nLa signalisation à main La signalisation au sol La signalisation au sol est normalement implantée à gauche ou au-dessus de la voie concernée.\nSignaux de protection Les signaux de protection sont destinés à interdire l’accès à un itinéraire, à une aiguille, à un PN, etc. Ils sont généralement manœuvrés depuis des postes par des agents de SNCF Réseau.\nSignaux de cantonnement Les signaux de cantonnement sont destinés à assurer l’espacement des circulations de même sens.\nSur les sections de lignes équipées en block automatique (BA), les signaux de cantonnement se ferment automatiquement dès l’occupation du canton et restent fermés jusqu’à sa complète libération.\nSur les sections de lignes équipées en block manuel (BM), les signaux de cantonnement sont manœuvrés depuis des postes par des agents du service du GI chargé de la gestion des circulations.\nSignaux d’annonce d’arrêt Le carré, le sémaphore et le feu rouge clignotant sont normalement annoncés à distance par un avertissement qui peut lui-même être précédé, en signalisation lumineuse, par un feu jaune clignotant.\nToutefois, les signaux qui ne peuvent être abordés qu’en marche à vue ou en marche en manœuvre ne sont normalement pas annoncés (par exemple, le guidon d’arrêt). Il en est de même des signaux situés sur voie principale à la sortie des gares en impasse.\nSignaux d’indication de marche Le feu vert indique au conducteur que la circulation en marche normale est autorisée, s’y rien ne s’y oppose.\nSur les sections de ligne où la vitesse des trains est supérieure à 160 km/h, un feu vert clignotant précède généralement l’avertissement ou le feu jaune clignotant.\nSignaux de limitation de vitesse Ils limitent à un taux déterminé la vitesse des trains sur une partie de voie ou au franchissement de certains points particuliers (aiguille, traversée de gare, etc.).\nLes limitations permanentes de vitesse (en complément de celles pouvant figurer dans les RT) Sur des parties de voie par tableau indicateur de vitesse (TIV) ordinaire Au franchissement de certains points particuliers (exemple des aiguilles)\nRalentissement à 30 km/h en signalisation lumineuse Ralentissement à 60 km/h en signalisation lumineuse TIV mobiles Ces tableaux peuvent être lumineux ou mécaniques ; lorsqu’ils sont ouverts ils présentent une bande verticale blanche continue.\nSi cela est nécessaire, l’emplacement de l’aiguille (ou de la première aiguille dans le cas d’aiguilles successives) est repéré par un chevron pointe en bas.\nLes limitations temporaires de vitesse Cette signalisation s’applique sur des parties de voie (chantiers de travaux, etc.) sur lesquelles une limitation temporaire de vitesse doit être observée.\nSignaux indicateurs de direction Ils renseignent les conducteurs sur la direction géographique qui leur est donnée.\nSignaux caractéristiques de prescriptions particulières Ils renseignent les conducteurs sur des particularités.\nOn trouve :\ndes tableaux des pancartes la bande lumineuse jaune la croix de Saint-André (annulation des signaux) Exemples de tableaux Exemples de pancartes Bande lumineuse jaune horizontale La bande lumineuse jaune horizontale est utilisée en complément de l’avertissement. Elle indique au conducteur que son train est dirigé vers une voie à quai de courte longueur ou bien que sa longueur se trouve réduite.\nCroix de Saint-André (annulation des signaux) Signalisation de sortie de certains faisceaux ou groupes de voies convergentes Elle peut être constituée de :\nLa signalisation de cabine Sur les lignes à signalisation de cabine, le système transmet de manière continue (ou discontinue) en cabine de conduite des ordres et une consigne de vitesse associée éventuellement à une distance but. La signalisation de cabine peut être complétée par une signalisation au sol dans certains cas pour :\nrepérer les points à ne pas dépasser, par exemple : donner des ordres de traction électrique, des informations aux points d’entrée et de sortie du domaine de signalisation de cabine, etc. Des pancartes ou tableaux indiquent ces ordres et informations.\nCes repères, pancartes ou tableaux sont implantés :\nà gauche de la voie sur les plateformes à une seule voie ; côté piste, à l’extérieur sur les plateformes à deux voies ; dans le cas de plan de voie plus complexe, les pancartes ou tableaux sont fléchés. Nota : les repères ETCS et de la TVM ne sont pas fléchés du fait de leur graphisme indiquant la voie à laquelle ils s’adressent.\nPoint de transition de signalisation (entrée sur LGV, armement de la signalisation de cabine) Le point de transition de signalisation (tableau CAB), ainsi que l’armement de la signalisation de cabine, se situent à hauteur ou immédiatement en aval du dernier signal au sol (signal carré).\n","categories":"","description":"","excerpt":"Principe Pour transmettre au conducteur des ordres et informations …","ref":"/osrd-website/fr/developers/railway_wiki/signalling/signals/","tags":"","title":"Les signaux"},{"body":"Définition Le système d’espacement des trains de même sens, est destiné à éviter les rattrapages et consiste à fractionner la ligne en plusieurs cantons dont l’entrée est protégée par un signal d’arrêt.\nPrincipe Compte tenu de leur masse importante, de leur vitesse élevée, de la faible adhérence rail-roue, les trains ont besoin d’une distance importante pour s’arrêter.\nDe ce fait, la distance nécessaire pour obtenir l’arrêt est généralement plus grande que la partie de voie visible par le conducteur. Dans ces conditions, le conducteur d’un train en marche ne voyant pas à temps la queue d’un train arrêté ou circulant à plus faible vitesse devant lui risquerait de le heurter.\nPour prévenir le risque de rattrapage : un dispositif d’espacement des trains appelé « cantonnement » est mis en place selon les principes suivants :\nla ligne est divisée en portions de voie appelées « cantons » l’entrée de chaque canton est normalement commandée par un signal un seul train est normalement admis dans chaque canton aucun train ne peut normalement pénétrer dans un canton occupé, du fait du maintien à la fermeture du signal d’entrée du canton durant tout le temps de son occupation Dans certains cas particuliers, la pénétration d’un train dans un canton occupé ainsi que les modalités de franchissement du signal d’entrée du canton sont prévues dans une procédure propre à chaque mode de cantonnement.\nLes différents modes de cantonnement On distingue :\nle cantonnement téléphonique le block manuel par appareils (BM) le block automatique : lumineux (BAL) ou à permissivité restreinte (BAPR) l’ETCS 1 généralement superposé à la signalisation au sol l’espacement sur lignes à grande vitesse (TVM, ETCS 2) Sur les sections de lignes équipées en cantonnement téléphonique ou en block manuel par appareils, les signaux de cantonnement sont manoeuvrés au sol ou depuis des postes par des agents du service du gestionnaire d’infrastructure (GI) chargé de la gestion des circulations dénommés « gardes ».\nSur les sections de lignes équipées en BAL ou BAPR, les signaux de cantonnement se ferment automatiquement dès l’occupation du canton et restent fermés jusqu’à sa complète libération.\nSur les sections de lignes à signalisation de cabine, équipées en TVM ou ETCS, les informations liées à l’espacement des trains sont données au conducteur automatiquement directement en cabine de conduite.\nPour déterminer le mode et le cas échéant les postes de cantonnement d’une section de ligne, il faut consulter les RT.\n","categories":"","description":"","excerpt":"Définition Le système d’espacement des trains de même sens, est …","ref":"/osrd-website/fr/developers/railway_wiki/signalling/spacing/","tags":"","title":"Les systèmes d'espacement des trains"},{"body":"Context The onboard computer of ETCS-enabled trains has to compute a number of position / speed curves. Here is how it works:\nbelow all the curves, the speed indicator is white above the indication curve, the speed indicator is yellow above the permitted curve, the speed indicator is orange above the warning curve, an alarm rings above the intervention curves, an emergency break intervention is triggered Inputs In order to compute any of these curves, a number of things are needed:\ntarget data (the destination of the braking curve, which can be EOA and SvL or LOA and MRSP) train data infrastructure data infrastructure manager constants standardized constants Train max speed length rotating mass T_traction_cutoff: the time it take to cut off traction braking model, either lambda or gamma: lambda (braking weight/mass) gamma (contant deceleration at a given speed) correction factors (k_dry and k_wet for gamma braking) for braking curves Infrastructure corrected gradients (it incorporates curvature) odometry balises location Processes Braking coefficients: A_brake_emergency is the expected emergency braking capability, without safety margins A_brake_safe is the emergency braking coefficient, with safety margins A_brake_service is the expected service braking capability, without safety margins Speed / distance targets EOA end of movement authority: the location until which the train is allowed to move SvL supervized location: the protected location Curves SBD supervised braking deceleration: intermediary result computed from EOA and A_brake_service EBD emergency braking deceleration: intermediary result computed from SvL and A_brake_safe All the curves below are cut below a given release speed:\nEBI (emergency break intervention) computed from EBD, shifted in position and space given rolling stock metadata SBI1 computed from SBD, shifted in time with Tbs1 SBI2 computed from SBD, shifted in time with Tbs2 FLOI (also called SBI, the intervention curve) the minimum of SBI1 and SBI2 WARNING (warning curve) computed as a shift of FLOI by Twarning PS (permitted speed curve): shift of WARNING by time Tdriver INDICATION is a shift of PS by time Tindication ","categories":"","description":"European Train Control System","excerpt":"European Train Control System","ref":"/osrd-website/en/developers/railway_wiki/signalling/spacing/ertms/etcs/","tags":"","title":"ETCS"},{"body":"Généralités ETCS est le système européen de contrôle commande des trains. La partie bord est interopérable. La partie sol peut être différente selon les pays tout en répondant aux mêmes objectifs de fonctionnalité.\nIl existe quatre niveaux différents dont deux sont en service : L’ETCS 1 et L’ETCS 2. L’ETCS 0 est interdit en France. L’ETCS 3 est encore à l’état de développement dans la plupart des pays de l’Union européenne.\nIl s’agit d’un système de signalisation de cabine et de contrôle de vitesse faisant appel aux trois composantes suivantes :\nsol : pour la gestion des circulations comprenant notamment l’espacement, la protection des points à protéger et des circulations bord : pour l’affichage des ordres et informations à destination du conducteur et le contrôle de la bonne exécution de ceux-ci, dénommé EUROCAB liaison : pour les échanges de données entre le sol et le bord : liaison ponctuelle unidirectionnelle du sol vers le bord par EURO BALISES, liaison radiotéléphonique continue et bidirectionnelle par GSM-R DATA pour ETCS2 dénommé EURORADIO. Sur le RFN, sont mis en oeuvre les niveaux d’exploitations suivants :\nL’ETCS1 sur certaines lignes parcourables jusqu’à 220 km/h. Il correspond à un système de signalisation de cabine, généralement superposé à la signalisation au sol existante, dont les informations entre le sol et le bord sont transmises ponctuellement par eurobalise.\nL’ETCS2 sur certaines lignes à grande vitesse. Il correspond à un système de signalisation de cabine dont les informations entre le sol et le bord sont transmises en temps utile ou cycliquement par liaison permanente GSM-R DATA.\nL’ETCS2 est un système qui ne nécessite pas la matérialisation des cantons sur le terrain.\nPréalablement à tout déplacement, les données relatives au train doivent être saisies ou paramétrées à bord. Ainsi, le système peut, à partir des données bord et sol, superviser le train, c’est-à-dire contrôler sa vitesse et ses déplacements et intervenir en cas de nécessité.\nLa détection d’une circulation sur une partie de voie est réalisée au moyen de circuits de voie ou de compteurs d’essieux. En ETCS2, la combinaison des équipements sol et bord est telle qu’elle ne nécessite, normalement, pas de signalisation complémentaire au sol.\nÉquipement bord Le bord est constitué d’un DMI, d’un EVC, de capteurs odométriques (de vitesse), d’antennes pour la lecture des PI ETCS, un modem GSM-R (Euroradio) pour ETCS2, d’une unité juridique d’enregistrement des paramètres d’exploitation, d’interfaces avec le train.\nLe DMI Le DMI est l’interface entre le conducteur et la machine. Il permet d’afficher les ordres et instructions en fonction des données sol et/ou bord. Le conducteur renseigne également le système par saisie de données.\nL’espacement des circulations et la protection des points dangereux se traduisent par l’affichage en temps utile d’une vitesse but et d’une distance but. La vitesse but doit être respectée par le conducteur au point défini par la distance but.\nEn « marche normale », le DMI indique au conducteur la vitesse autorisée qui ne doit pas être dépassée. Dans ce cas, il n’y a pas d’affichage de la distance but et de la vitesse but.\nUn secteur pouvant présenter différentes couleurs est utilisé pour indiquer les ordres de vitesse ou d’arrêt.\nEnfin, d’autres indications sont affichées telles que la signalisation de traction électrique, le niveau d’exploitation, le mode technique. Les changements d’indication au DMI peuvent être accompagnés d’indications sonores. Une zone en partie basse du DMI est également réservée pour l’affichage de messages textuels. Certaines informations complémentaires peuvent également être affichées par l’entreprise ferroviaire.\nDans cet exemple, le conducteur autorisé à circuler à 140 km/h maximum, circule à 125 km/h, il va devoir observer une phase de ralentissement afin de respecter la vitesse maxi de 100 km/h (vitesse But) à une distance de 2850 mètres (distance But).\nLe DMI utilise un code couleur, avec la signification suivante :\nblanc/gris clair/gris foncé : aucune action immédiate n’est exigée du conducteur jaune : le conducteur doit intervenir si la vitesse réelle est proche de la vitesse autorisée (risque de passer à la couleur orange en l’absence de réaction) orange : l’intervention est insuffisante (risque de passer à la couleur rouge en l’absence de réaction du conducteur) rouge : réaction trop tardive du conducteur, prise en charge par le système (peut revenir au jaune, au gris ou au blanc après une action appropriée) ETCS niveau 1 Transmission sol-bord Ce niveau utilise une transmission ponctuelle à l’aide de balises placées au pied des signaux et en amont. Ces balises (eurobalises) communiquent les données de signalisation au train.\nDétection des trains Le niveau 1 nécessite l’utilisation d’un système de détection des trains au sol (tel que des circuits de voie, compteurs d’essieux et autres). Toutes ces informations sont donc transmises ponctuellement au train. La cadence de l’information donnée pouvant être augmentée en jouant sur le nombre de balises, ou en installant une boucle (euroloop), équivalent d’une balise, mais longeant la ligne sur une certaine distance.\nETCS niveau 2 Transmission sol-bord Les données de signalisation sont transmises de manière permanente, via le réseau GSM-R. Le train communique constamment sa position (qu’il détermine avec un odomètre) au centre de contrôle qui lui communique en retour les actions à effectuer (vitesse, arrêt, etc.).\nDes eurobalises sont toujours présentes sur la voie pour recaler éventuellement l’odométrie embarquée.\nDétection des trains Un système de détection des trains au sol s’appuie sur l’existence des circuits de voie pour localiser un train aval sur un canton. Cette information est transmise au radio block center (RBC) qui gère ensuite l’espacement entre deux circulations. Le train suiveur reçoit une nouvelle autorisation de circulation par l’intermédiaire de la liaison radio GSM-R. Dès que le train aval libère un canton le poste central de commande reçoit l’information correspondante du sol qui est transmise par liaison radio au train suiveur.\nAvantage Le niveau 2 rend disponible quasi immédiatement une information « libératoire » pour le train suiveur et contribue ainsi à augmenter la fluidité. Cette immédiateté est la différence par rapport à la signalisation conventionnelle, où une demi-minute est parfois nécessaire pour libérer un aiguillage alors que le train est déjà bien loin.\nLes modes techniques Les modes techniques utilisés sur le RFN sont :\nMode FS : Conduite en supervision complète.\nToutes les données train et voie sont disponibles à bord.\nLe DMI affiche :\nla vitesse réelle du train et la vitesse autorisée lors de l’approche d’un EOA, d’un repère d’arrêt ETCS ou un heurtoir, la vitesse but et la distance but Le système « bord » supervise la vitesse, le déplacement du train, le respect de l’EOA matérialisé par un repère d’arrêt ETCS, un signal d’arrêt ou un heurtoir en ETCS1.\nMode OS : Conduite en marche à vue.\nToutes les données train et voie sont disponibles à bord sauf l’assurance de la libération de toute ou partie de la voie allouée au train.\nLe DMI affiche les mêmes indications qu’en mode FS.\nLe système « bord » assure également la supervision comme en mode FS.\nMode SR : Conduite sous la responsabilité des agents.\nCe mode technique est utilisé pour les situations dégradées et la procédure « Mise en service » lorsque le bord n’a pas reçu d’allocation de voie. Le système « bord » ne supervise que la vitesse du mode SR et le franchissement des repères d’arrêt ETCS et des signaux d’arrêt.\nMode SH : Circulation en manœuvre.\nCe mode technique est sélectionné par le conducteur pour les mouvements de manœuvre. Le système « bord » ne supervise que la vitesse du train.\nMode NL : Conduite d’un engin moteur non en tête du mouvement\nCe mode technique est utilisé en cas de pousse ou de double traction.\nProtection contre le rattrapage En mode FS, une vitesse autorisée affichée sans la présentation de l’EOA signifie « marche normale ».\nLa MA constituée d’un ou plusieurs cantons est allouée canton par canton, par ajout successif d’un canton. Si le canton en aval du dernier canton alloué est occupé le train doit être en mesure de s’arrêter avant l’entrée de ce canton. Le conducteur est alors avisé par une indication sonore au DMI.\nDès lors, les indications de conduite (vitesse but égale à 0 et une distance but) permettant de respecter la courbe de freinage sont affichées.\nLe conducteur doit ralentir de façon à être en mesure de s’arrêter avant l’EOA, tout en respectant la vitesse autorisée.\n","categories":"","description":"European Train Control System","excerpt":"European Train Control System","ref":"/osrd-website/fr/developers/railway_wiki/signalling/spacing/ertms/etcs/","tags":"","title":"ETCS"},{"body":"","categories":"","description":"Global System for Mobiles - Railways","excerpt":"Global System for Mobiles - Railways","ref":"/osrd-website/fr/developers/railway_wiki/signalling/spacing/ertms/gsm-r/","tags":"","title":"GSM-R"},{"body":"","categories":"","description":"General Packet Radio Service","excerpt":"General Packet Radio Service","ref":"/osrd-website/fr/developers/railway_wiki/signalling/spacing/ertms/gprs/","tags":"","title":"GPRS"},{"body":"","categories":"","description":"Futur Système de Communications Mobiles Ferroviaires","excerpt":"Futur Système de Communications Mobiles Ferroviaires","ref":"/osrd-website/fr/developers/railway_wiki/signalling/spacing/ertms/frmcs/","tags":"","title":"FRMCS"},{"body":"","categories":"","description":"European Train Management Layer","excerpt":"European Train Management Layer","ref":"/osrd-website/fr/developers/railway_wiki/signalling/spacing/ertms/etml/","tags":"","title":"ETML"},{"body":"This is a typical blog post that includes images.\nThe front matter specifies the date of the blog post, its title, a short description that will be displayed on the blog landing page, and its author.\nIncluding images Here’s an image (featured-sunset-get.png) that includes a byline and a caption.\nFetch and scale an image in the upcoming Hugo 0.43. Photo: Riona MacNamara / CC-BY-CA\nThe front matter of this post specifies properties to be assigned to all image resources:\nresources: - src: \"**.{png,jpg}\" title: \"Image #:counter\" params: byline: \"Photo: Riona MacNamara / CC-BY-CA\" To include the image in a page, specify its details like this:\nFetch and scale an image in the upcoming Hugo 0.43. Photo: Riona MacNamara / CC-BY-CA\nThe image will be rendered at the size and byline specified in the front matter.\n","categories":"","description":"The Docsy Hugo theme lets project maintainers and contributors focus on content, not on reinventing a website infrastructure from scratch","excerpt":"The Docsy Hugo theme lets project maintainers and contributors focus …","ref":"/osrd-website/en/news/news/blog/first-post/","tags":"","title":"Easy documentation with Docsy"},{"body":"This is a typical blog post that includes images.\nThe front matter specifies the date of the blog post, its title, a short description that will be displayed on the blog landing page, and its author.\nIncluding images Here’s an image (featured-sunset-get.png) that includes a byline and a caption.\nFetch and scale an image in the upcoming Hugo 0.43. Photo: Riona MacNamara / CC-BY-CA\nThe front matter of this post specifies properties to be assigned to all image resources:\nresources: - src: \"**.{png,jpg}\" title: \"Image #:counter\" params: byline: \"Photo: Riona MacNamara / CC-BY-CA\" To include the image in a page, specify its details like this:\nFetch and scale an image in the upcoming Hugo 0.43. Photo: Riona MacNamara / CC-BY-CA\nThe image will be rendered at the size and byline specified in the front matter.\n","categories":"","description":"The Docsy Hugo theme lets project maintainers and contributors focus on content, not on reinventing a website infrastructure from scratch","excerpt":"The Docsy Hugo theme lets project maintainers and contributors focus …","ref":"/osrd-website/fr/news/news/blog/first-post/","tags":"","title":"Easy documentation with Docsy"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/news/news/blog/","tags":"","title":"Blog"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/news/news/blog/","tags":"","title":"Blog"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/news/","tags":"","title":"News"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/news/","tags":"","title":"News"},{"body":" Open Source Railway Designer Who we are Github Follow us on LinkedIn! Discuss with all our team and discover the world of exploitation studies by SNCF Réseau.\nRead more …\nContribute! Contributors are always welcome, our approach is 100% open-source.\nRead more …\nFollow us on Twitter! And be informed by last functions, partcipations \u0026 developements.\nRead more …\n","categories":"","description":"","excerpt":" Open Source Railway Designer Who we are Github Follow us on LinkedIn! …","ref":"/osrd-website/en/","tags":"","title":"OSRD"},{"body":" Open Source Railway Designer Qui sommes-nous Github Suivez-nous sur LinkedIn ! Venez échanger avec toute l’équipe et découvrir le monde des études d’exploitation chez SNCF Réseau.\nLire plus …\nVenez contribuer ! Les contributeurs sont toujours les bienvenus, notre démarche est 100% open-source.\nLire plus …\nSuivez-nous sur Twitter ! Et tenez-vous au courant des dernières nouveautés, participations et développements.\nLire plus …\n","categories":"","description":"","excerpt":" Open Source Railway Designer Qui sommes-nous Github Suivez-nous sur …","ref":"/osrd-website/fr/","tags":"","title":"OSRD"},{"body":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\nFirst Header This is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nBacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nLorem markdownum tuta hospes stabat; idem saxum facit quaterque repetito occumbere, oves novem gestit haerebat frena; qui. Respicit recurvam erat: pignora hinc reppulit nos aut, aptos, ipsa.\nMeae optatos passa est Epiros utiliter Talibus niveis, hoc lata, edidit. Dixi ad aestum.\nHeader 2 This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nHeader 3 This is a code block following a header. Header 4 This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header. Header 5 This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header. Header 6 What Follows A table A header A table A header A table A header There’s a horizontal rule above and below this.\nHere is an unordered list:\nSalt-n-Pepa Bel Biv DeVoe Kid ‘N Play And an ordered list:\nMichael Jackson Michael Bolton Michael Bublé And an unordered task list:\nCreate a sample markdown document Add task lists to it Take a vacation And a “mixed” task list:\nSteal underpants ? Profit! And a nested list:\nJackson 5 Michael Tito Jackie Marlon Jermaine TMNT Leonardo Michelangelo Donatello Raphael Definition lists can be used with Markdown syntax. Definition terms are bold.\nName Godzilla Born 1952 Birthplace Japan Color Green Tables should have bold headings and alternating shaded rows.\nArtist Album Year Michael Jackson Thriller 1982 Prince Purple Rain 1984 Beastie Boys License to Ill 1986 If a table is too wide, it should scroll horizontally.\nArtist Album Year Label Awards Songs Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin’ Somethin’, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\nLanguage Code Javascript var foo = \"bar\"; Ruby foo = \"bar\"{ Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nComponents Alerts This is an alert. Note: This is an alert with a title. This is a successful alert. This is a warning! Warning! This is a warning with a title! Sizing Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nParameters available Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing pixels Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing rem Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMemory Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nRAM to use Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMore is better Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsed RAM Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis is the final element on the page and there should be no margin below this. ","categories":"","description":"A short lead description about this content page. Text here can also be **bold** or _italic_ and can even be split over multiple paragraphs.\n","excerpt":"A short lead description about this content page. Text here can also …","ref":"/osrd-website/en/news/news/blog/second-post/","tags":"","title":"The second blog post"},{"body":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\nFirst Header This is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nBacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nLorem markdownum tuta hospes stabat; idem saxum facit quaterque repetito occumbere, oves novem gestit haerebat frena; qui. Respicit recurvam erat: pignora hinc reppulit nos aut, aptos, ipsa.\nMeae optatos passa est Epiros utiliter Talibus niveis, hoc lata, edidit. Dixi ad aestum.\nHeader 2 This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nHeader 3 This is a code block following a header. Header 4 This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header. Header 5 This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header. Header 6 What Follows A table A header A table A header A table A header There’s a horizontal rule above and below this.\nHere is an unordered list:\nSalt-n-Pepa Bel Biv DeVoe Kid ‘N Play And an ordered list:\nMichael Jackson Michael Bolton Michael Bublé And an unordered task list:\nCreate a sample markdown document Add task lists to it Take a vacation And a “mixed” task list:\nSteal underpants ? Profit! And a nested list:\nJackson 5 Michael Tito Jackie Marlon Jermaine TMNT Leonardo Michelangelo Donatello Raphael Definition lists can be used with Markdown syntax. Definition terms are bold.\nName Godzilla Born 1952 Birthplace Japan Color Green Tables should have bold headings and alternating shaded rows.\nArtist Album Year Michael Jackson Thriller 1982 Prince Purple Rain 1984 Beastie Boys License to Ill 1986 If a table is too wide, it should scroll horizontally.\nArtist Album Year Label Awards Songs Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin’ Somethin’, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\nLanguage Code Javascript var foo = \"bar\"; Ruby foo = \"bar\"{ Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nComponents Alerts This is an alert. Note: This is an alert with a title. This is a successful alert. This is a warning! Warning! This is a warning with a title! Sizing Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nParameters available Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing pixels Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing rem Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMemory Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nRAM to use Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMore is better Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsed RAM Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis is the final element on the page and there should be no margin below this. ","categories":"","description":"A short lead description about this content page. Text here can also be **bold** or _italic_ and can even be split over multiple paragraphs.\n","excerpt":"A short lead description about this content page. Text here can also …","ref":"/osrd-website/fr/news/news/blog/second-post/","tags":"","title":"The second blog post"},{"body":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\nFirst Header This is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nBacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nLorem markdownum tuta hospes stabat; idem saxum facit quaterque repetito occumbere, oves novem gestit haerebat frena; qui. Respicit recurvam erat: pignora hinc reppulit nos aut, aptos, ipsa.\nMeae optatos passa est Epiros utiliter Talibus niveis, hoc lata, edidit. Dixi ad aestum.\nHeader 2 This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nHeader 3 This is a code block following a header. Header 4 This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header. Header 5 This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header. Header 6 What Follows A table A header A table A header A table A header There’s a horizontal rule above and below this.\nHere is an unordered list:\nSalt-n-Pepa Bel Biv DeVoe Kid ‘N Play And an ordered list:\nMichael Jackson Michael Bolton Michael Bublé And an unordered task list:\nCreate a sample markdown document Add task lists to it Take a vacation And a “mixed” task list:\nSteal underpants ? Profit! And a nested list:\nJackson 5 Michael Tito Jackie Marlon Jermaine TMNT Leonardo Michelangelo Donatello Raphael Definition lists can be used with Markdown syntax. Definition terms are bold.\nName Godzilla Born 1952 Birthplace Japan Color Green Tables should have bold headings and alternating shaded rows.\nArtist Album Year Michael Jackson Thriller 1982 Prince Purple Rain 1984 Beastie Boys License to Ill 1986 If a table is too wide, it should scroll horizontally.\nArtist Album Year Label Awards Songs Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin’ Somethin’, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\nLanguage Code Javascript var foo = \"bar\"; Ruby foo = \"bar\"{ Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nComponents Alerts This is an alert. Note: This is an alert with a title. This is a successful alert. This is a warning! Warning! This is a warning with a title! Sizing Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nParameters available Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing pixels Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing rem Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMemory Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nRAM to use Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMore is better Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsed RAM Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis is the final element on the page and there should be no margin below this. ","categories":"","description":"A short lead description about this content page. Text here can also be **bold** or _italic_ and can even be split over multiple paragraphs.\n","excerpt":"A short lead description about this content page. Text here can also …","ref":"/osrd-website/fr/news/articles/in-depth-monoliths-detailed-spec/","tags":"","title":"Super nouvelle sortie"},{"body":"Text can be bold, italic, or strikethrough. Links should be blue with no underlines (unless hovered over).\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.\nThere should be no margin above this first sentence.\nBlockquotes should be a lighter gray with a border along the left side in the secondary color.\nThere should be no margin below this final sentence.\nFirst Header This is a normal paragraph following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nBacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nOn big screens, paragraphs and headings should not take up the full container width, but we want tables, code blocks and similar to take the full width.\nLorem markdownum tuta hospes stabat; idem saxum facit quaterque repetito occumbere, oves novem gestit haerebat frena; qui. Respicit recurvam erat: pignora hinc reppulit nos aut, aptos, ipsa.\nMeae optatos passa est Epiros utiliter Talibus niveis, hoc lata, edidit. Dixi ad aestum.\nHeader 2 This is a blockquote following a header. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nHeader 3 This is a code block following a header. Header 4 This is an unordered list following a header. This is an unordered list following a header. This is an unordered list following a header. Header 5 This is an ordered list following a header. This is an ordered list following a header. This is an ordered list following a header. Header 6 What Follows A table A header A table A header A table A header There’s a horizontal rule above and below this.\nHere is an unordered list:\nSalt-n-Pepa Bel Biv DeVoe Kid ‘N Play And an ordered list:\nMichael Jackson Michael Bolton Michael Bublé And an unordered task list:\nCreate a sample markdown document Add task lists to it Take a vacation And a “mixed” task list:\nSteal underpants ? Profit! And a nested list:\nJackson 5 Michael Tito Jackie Marlon Jermaine TMNT Leonardo Michelangelo Donatello Raphael Definition lists can be used with Markdown syntax. Definition terms are bold.\nName Godzilla Born 1952 Birthplace Japan Color Green Tables should have bold headings and alternating shaded rows.\nArtist Album Year Michael Jackson Thriller 1982 Prince Purple Rain 1984 Beastie Boys License to Ill 1986 If a table is too wide, it should scroll horizontally.\nArtist Album Year Label Awards Songs Michael Jackson Thriller 1982 Epic Records Grammy Award for Album of the Year, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Selling Album, Grammy Award for Best Engineered Album, Non-Classical Wanna Be Startin’ Somethin’, Baby Be Mine, The Girl Is Mine, Thriller, Beat It, Billie Jean, Human Nature, P.Y.T. (Pretty Young Thing), The Lady in My Life Prince Purple Rain 1984 Warner Brothers Records Grammy Award for Best Score Soundtrack for Visual Media, American Music Award for Favorite Pop/Rock Album, American Music Award for Favorite Soul/R\u0026B Album, Brit Award for Best Soundtrack/Cast Recording, Grammy Award for Best Rock Performance by a Duo or Group with Vocal Let’s Go Crazy, Take Me With U, The Beautiful Ones, Computer Blue, Darling Nikki, When Doves Cry, I Would Die 4 U, Baby I’m a Star, Purple Rain Beastie Boys License to Ill 1986 Mercury Records noawardsbutthistablecelliswide Rhymin \u0026 Stealin, The New Style, She’s Crafty, Posse in Effect, Slow Ride, Girls, (You Gotta) Fight for Your Right, No Sleep Till Brooklyn, Paul Revere, Hold It Now, Hit It, Brass Monkey, Slow and Low, Time to Get Ill Code snippets like var foo = \"bar\"; can be shown inline.\nAlso, this should vertically align with this and this.\nCode can also be shown in a block element.\nfoo := \"bar\"; bar := \"foo\"; Code can also use syntax highlighting.\nfunc main() { input := `var foo = \"bar\";` lexer := lexers.Get(\"javascript\") iterator, _ := lexer.Tokenise(nil, input) style := styles.Get(\"github\") formatter := html.New(html.WithLineNumbers()) var buff bytes.Buffer formatter.Format(\u0026buff, style, iterator) fmt.Println(buff.String()) } Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. Inline code inside table cells should still be distinguishable.\nLanguage Code Javascript var foo = \"bar\"; Ruby foo = \"bar\"{ Small images should be shown at their actual size.\nLarge images should always scale down and fit in the content container.\nComponents Alerts This is an alert. Note: This is an alert with a title. This is a successful alert. This is a warning! Warning! This is a warning with a title! Sizing Add some sections here to see how the ToC looks like. Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nParameters available Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing pixels Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsing rem Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMemory Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nRAM to use Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nMore is better Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nUsed RAM Bacon ipsum dolor sit amet t-bone doner shank drumstick, pork belly porchetta chuck sausage brisket ham hock rump pig. Chuck kielbasa leberkas, pork bresaola ham hock filet mignon cow shoulder short ribs biltong.\nThis is the final element on the page and there should be no margin below this. ","categories":"","description":"A short lead description about this content page. Text here can also be **bold** or _italic_ and can even be split over multiple paragraphs.\n","excerpt":"A short lead description about this content page. Text here can also …","ref":"/osrd-website/en/news/articles/in-depth-monoliths-detailed-spec/","tags":"","title":"Another Great Release"},{"body":"","categories":"","description":"APIs disponibles dans OSRD","excerpt":"APIs disponibles dans OSRD","ref":"/osrd-website/fr/developers/internals/data-model/apis/","tags":"","title":"Liste des APIs"},{"body":"Principe Le block automatique se caractérise en block automatique lumineux (BAL) et en block automatique à permissivité restreinte (BAPR) par :\nle fonctionnement entièrement automatique des signaux de cantonnement dont le changement d’état (fermeture ou ouverture) est provoqué par le passage des circulations sans aucune intervention humaine ; l’état d’occupation de chaque canton, agissant directement sur le signal d’entrée correspondant est obtenu par le circuit de voie en BAL, généralement par un comptage d’essieu en BAPR. Le BAL permet un débit élevé des circulations sur la ligne. Fonctionnement d’un circuit de voie Un circuit de voie est principalement constitué de trois éléments :\nun émetteur, branché à l’une des extrémités de la zone. Il délivre un courant qui peut être de différente nature selon les types de circuit de voie (continu, impulsionnel, alternatif, etc.) ; une ligne de transmission, constituée par les deux files de rails ; un récepteur, branché à l’autre extrémité de la zone. Il assure le filtrage, l’amplification et la transformation du signal reçu via les rails, ce qui agit sur un relais appelé relais de voie. Les contacts de ce relais sont utilisés pour établir ou couper le circuit électrique du signal d’entrée du canton. Lorsqu’aucun véhicule n’est présent sur la zone délimitant le circuit de voie (voie libre), le signal délivré par l’émetteur parvient au récepteur à travers la ligne de transmission, et le relais de voie est excité. Le feu d’entrée du canton est à voie libre (cas 1 ci-dessous).\nLorsqu’un véhicule est présent, son premier essieu agit comme une faible résistance, appelée shunt, qui court-circuite la transmission. Dans ce cas, le niveau du signal parvenant au récepteur n’est plus suffisant et le relais de voie se désexcite, ce qui entraine la fermeture du signal d’entrée du canton (cas 2 ci-dessous).\nFonctionnement des compteurs d’essieux Un compteur d’essieux est un dispositif technique servant à détecter la présence d’une circulation sur une section, par comptage des essieux qui franchissent les détecteurs encadrant cette section.\nUn point de détection est installé à chaque extrémité de la section, et chaque fois qu’un essieu passe sur ce point au début de la section, un compteur s’incrémente. Quand le train passe sur le point de détection en fin de la section, le compteur décrémente. Si le nombre final est zéro, la section est présumée libre pour un deuxième train et le signal d’entrée du canton présentera l’indication « voie libre ».\n","categories":"","description":"Block Automatique","excerpt":"Block Automatique","ref":"/osrd-website/fr/developers/railway_wiki/signalling/spacing/automatic_block_systems/","tags":"","title":"BA"},{"body":"Le signal d’entrée du canton présente une indication liée à l’état d’occupation du ou des cantons suivants, selon les règles suivantes :\nindication d’arrêt lorsque le canton est occupé par au moins une portion du train annonce lorsque le canton suivant est occupé voie libre par défaut (sauf signaux Nf) La longueur maximale d’un canton est en principe de 2800 m. Elle est généralement de 1500 m sur les lignes parcourues à la vitesse maximale de 160 km/h.\nAvantages du BAL Le BAL offre un niveau élevé de sécurité et permet un débit important.\nLimites L’installation du BAL est très coûteuse, et son fonctionnement nécessite une garantie de contact électrique entre la roue et le rail.\nImplémentation Simuler correctement le système BAL nécessite de respecter les critères suivants :\nlorsque la tête du train pénètre dans un canton, le signal d’entrée de celui-ci passe en indication d’arrêt lorsque la queue du train libère un canton, son signal d’entrée passe en annonce lorsque la queue du train libère un canton, le signal d’entrée du canton précédent passe en voie libre les signaux présentent une voie libre par défaut, sauf les signaux Nf qui sont par défaut en indication d’arrêt ","categories":"","description":"Block Automatique Lumineux","excerpt":"Block Automatique Lumineux","ref":"/osrd-website/fr/developers/railway_wiki/signalling/spacing/automatic_block_systems/bal/","tags":"","title":"BAL"},{"body":"Le signal d’entrée du canton est un signal qui présente une indication liée à l’état d’occupation du canton suivant (indication d’arrêt ou de voie libre). Sur certaines lignes l’occupation du canton n’est pas obtenue par le circuit de voie mais par un système de comptage d’essieux entrants et sortants.\nLes cantons sont beaucoup plus longs que le BAL (jusqu’à 15 km et plus) et par conséquent le débit est moins important.\nAvantages du BAPR Le BAPR offre un bon niveau de sécurité et il est moins coûteux que le BAL.\nLimites Ce type de block n’est adapté qu’aux lignes conventionnelles à trafic moyen compte tenu de l’espacement imposé entre 2 trains successifs.\n","categories":"","description":"Block Automatique à Permitivité Restreinte","excerpt":"Block Automatique à Permitivité Restreinte","ref":"/osrd-website/fr/developers/railway_wiki/signalling/spacing/automatic_block_systems/bapr/","tags":"","title":"BAPR"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/news/news/contests/","tags":"","title":"Concours/Prix"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/news/news/contests/","tags":"","title":"Concours/Prix"},{"body":"Here you will find all the necessary documentation to understand the OSRD tool. The user guide should be available before September, and the tutorials before December.\n \n","categories":"","description":"","excerpt":"Here you will find all the necessary documentation to understand the …","ref":"/osrd-website/en/users/docs/","tags":"","title":"Documentation"},{"body":"Vous trouverez ici toute la documentation nécessaire pour comprendre l’outil OSRD. Le guide utilisateur devrait être disponible avant septembre, et les tutoriels avant décembre.\n \n","categories":"","description":"","excerpt":"Vous trouverez ici toute la documentation nécessaire pour comprendre …","ref":"/osrd-website/fr/users/docs/","tags":"","title":"Documentation"},{"body":"Introduction L’ERTMS, pour European Rail Traffic Management System, est un système qui vise à harmoniser la signalisation ferroviaire en Europe.\nIl est composé de trois sous-systèmes :\nun système de signalisation : l’ETCS un système de communication : GSM-R / GPRS / FRMCS un système de gestion du traffic : l’ETML ","categories":"","description":"European Rail Traffic Management System","excerpt":"European Rail Traffic Management System","ref":"/osrd-website/fr/developers/railway_wiki/signalling/spacing/ertms/","tags":"","title":"ERTMS"},{"body":"","categories":"","description":"The European Train Control System, part of ERTMS","excerpt":"The European Train Control System, part of ERTMS","ref":"/osrd-website/en/developers/railway_wiki/signalling/spacing/ertms/","tags":"","title":"ETCS (ERTMS)"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/news/news/offers/","tags":"","title":"Offres de stages"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/news/news/offers/","tags":"","title":"Offres de stages"},{"body":" Partenariats Fondation OpenRail Nous supporter Ensemble, avec des acteurs essentiels du secteur, nous avons créé une fondation open source dédiée au ferroviaire. OSRD sera le premier projet hébergé par la fondation OpenRail. L'initiative de la Fondation OpenRail vise à créer un espace d'innovation ouvert, autonome et collaboratif. Sa mission est de promouvoir le développement de projets de logiciels libres dans le secteur ferroviaire, comme cela existe déjà dans de nombreux autres secteurs industriels comme les télécommunications, l'automobile, l'énergie, ... Résolvons les problèmes ensemble !\nNous supporter ","categories":"","description":"","excerpt":" Partenariats Fondation OpenRail Nous supporter Ensemble, avec des …","ref":"/osrd-website/fr/partnership/","tags":"","title":"Partenariats"},{"body":" Partnerships OpenRail foundation Support us Together with key rail actors, we have created an open source foundation for railways. OSRD will be the first project hosted by the OpenRail Foundation. The OpenRail Foundation initiative aims to create an open, autonomous and collaborative innovation space. Its mission is to promote the development of open source software projects in the railway sector, as it already exists in numerous other industrial sectors like telecommunication, automotive, energy, … Let's solve problems together !\nSupport us ","categories":"","description":"","excerpt":" Partnerships OpenRail foundation Support us Together with key rail …","ref":"/osrd-website/en/partnership/","tags":"","title":"Partnerships"},{"body":"The OSRD Program consists of several projects that are managed and delivered as a single package.\nThe program’s teams are organized according to the SAFe Framework1 (framework for organizing agility at scale). The organization of the program is therefore based on a Program Increment (PI), an iteration composed of 4 sprints of two weeks, followed by a consolidation and planning sprint for the next PI. The SAFe organization involves:\nteams working in a synchronized and interdependent way a sustained rhythm of deliveries a number of roles and ceremonies a feedback and validation process The steering committees, which guarantee the smooth running of the program, make it possible to\ndefine the project and product roadmaps gather needs define priorities adapt the work methodology issue validation reports based on the test reports submitted at the end of each Program Increment In accordance with the SAFe Framework, priority is given to the most valuable deliveries\nAs the Program is still in a growth phase, the implementation of this organization is necessarily gradual, to reach its target by the end of 2022. ↩︎\n","categories":"","description":"","excerpt":"The OSRD Program consists of several projects that are managed and …","ref":"/osrd-website/en/who-we-are/program/","tags":"","title":"Program"},{"body":"Le Programme OSRD se compose de plusieurs projets qui sont managés et délivrés comme un unique ensemble.\nLes équipes du programme sont organisées selon le Framework SAFe1 (cadre d’organisation d’agilité à l’échelle). L’organisation du programme s’appuie donc sur un Program Increment (PI), itération composée de 4 sprints de deux semaines, suivis d’un sprint de consolidation et de planification du PI suivant. L’organisation SAFe implique :\ndes équipes travaillant de façon synchronisée et en interdépendance un rythme soutenu de livraisons la tenue d’un certain nombre de rôles et cérémonies un processus de feed-back et de validation Les instances de pilotage, garantes du bon fonctionnement du Programme, permettent de :\ndéfinir les roadmaps projet et produit recueillir les besoins définir les priorités adapter la méthodologie de travail délivrer les PV de validation à partir des rapports de tests transmis, à l’issue de chaque Program Increment Conformément au Framework SAFe, priorité est donnée aux livraisons présentant le plus de valeur\nLe Programme étant encore en phase de croissance, la mise en place de cette organisation se fait nécessairement de façon progressive, pour atteindre son schéma cible à la fin de l’année 2022. ↩︎\n","categories":"","description":"","excerpt":"Le Programme OSRD se compose de plusieurs projets qui sont managés et …","ref":"/osrd-website/fr/who-we-are/program/","tags":"","title":"Programme"},{"body":"The process of planning the circulation of a train requires 10 years of anticipation and involves the collaboration of different services and actors to transform the mobility needs of customers: The process of planning a train requires 10 years of anticipation and involves the collaboration of different departments and actors to transform the mobility needs of customers: organizing authorities (OA) and railway companies (RC) into annual service (AS).\nThe OSRD project aims to meet the needs of simulations that cover the entire process, from the design of the transportation plan to its operation.\nOur mission is to provide a simulation tool that can be used in all stages of the design phase (timetable planning and operational studies), on a national geographic scale (including the whole French network) and with a variable detail size. Moreover, in the operational phase, the OSRD project proposes a service to draw last minute paths (time-slot during which the infrastructure is allocated to the circulation of a specific train) in the theoretical or real residual capacity of the railway network, once the other circulations have already been planned.\nOSRD project Different OSRD products Our ambitions for 2022 ","categories":"","description":"","excerpt":"The process of planning the circulation of a train requires 10 years …","ref":"/osrd-website/en/who-we-are/project/","tags":"","title":"Project/solutions"},{"body":"Le processus de planification de la circulation d’un train demande 10 ans d’anticipation et implique la collaboration de différents services et acteurs pour transformer les besoins de mobilité des clients : autorités organisatrices (AO) et entreprises ferroviaires (EF) en service annuel (SA).\nLe projet OSRD à l’ambition de répondre aux besoins de simulation qui couvrent la totalité du processus, de la conception du plan de transport jusqu’à sa mise en exploitation.\nNotre mission est de fournir un outil de simulation qui peut être utilisé dans toutes les étapes de la phase de conception (planification des horaires et études d’exploitation), sur une échelle géographique nationale (comprenant le réseau français) et avec une granulométrie variable des détails. De plus, dans la phase opérationnelle, le projet OSRD propose un service pour tracer des sillons de dernières minutes (tranche d’espace-temps durant laquelle l’infrastructure est affectée à la circulation d’un train spécifique) dans la capacité résiduelle théorique ou réelle du réseau ferroviaire, une fois les autres circulations ont été déjà planifiées.\nLe projet OSRD Les différents produits OSRD Nos ambitions pour 2022 ","categories":"","description":"","excerpt":"Le processus de planification de la circulation d’un train demande 10 …","ref":"/osrd-website/fr/who-we-are/project/","tags":"","title":"Projet/solutions"},{"body":"Comment nous apréhendons la qualité chez DGEX Solutions\n:warning: En construction\nQualité intégrée Chez OSRD la qualité logicielle fait partie de notre ADN. En complément des pratiques courantes que nous mettons en œuvre pour assurer la qualité du code de nos solutions open source, nous avons la possibilité de nous appuyer sur une vision structurée de pratiques proposée par la méthodologie SAFe et appelée “qualité intégrée”.\nCes pratiques de “qualité intégrée” garantissent que chaque élément de la solution, à chaque incrément, répond aux normes de qualité appropriées, que nous nous fixons tout au long du développement.\nCe document regroupe l’ensemble de nos pratiques mises en œuvre, regroupées dans 5 domaines techniques orientés Entreprise qui visent la mise en place :\nd’un flux de travail d’une architecture et un design de qualité de la qualité de code de la qualité Système de la qualité de Versionnement Nous proposons ici de vous exposer l’état de l’art de notre qualité intégrée à travers le prisme de ces 5 domaines, sur le projet osrd.\nLes projets Nos projets sont hébergés sur Github et le projet principal d’appelle s’appelle osrd. Nous nous appuierons sur ce dernier pour apporter des détails dans ce document.\nLes pratiques Le flow Les équipes agiles fonctionnent souvent de façon itérative afin de développer et publier rapidement des fonctionnalités de grande qualité et c’est notre cas chez OSRD puisque nous sommes certifiés SAFe.\nNous portons une attention particulière sur :\nla pratique des tests la pipeline de Continuous Delivery approche Test-First Nous accordons une importance primordiale à la pratique du test, dans tous les domaines possibles.\nNous sommes actuellement en train de travailler sur la définition de notre pyramide des tests. Plus précisément, nous amorçons la réflexion sur les tests de bout en bout.\nNous détaillerons plus en détail cette section dès que possible.\nLa pipeline de Déploiement Continue Nous avons conscience que l’automatisation de la pipeline de Déploiement Continue est un levier pour accélérer les développements et leur qualité associée en évitant les régressions.\nNotre pipeline est aujourd’hui en place sous Gitlab et permet l’automatisation des déploiements au sein de DGEXSolutions. Son accès reste cependant privé à ce jour.\nArchitecture et qualité de conception Support des besoins business futurs Le projet OSRD est composé d’une\nConception Nous essayons de suivre les principes de design orientés objets basés sur le mnémonique SOLID qui vise à produire des architectures logicielles plus compréhensibles, flexibles et maintenables :\nResponsabilité unique principe Ouvert/fermé Substitution de Liskov Ségrégation des interfaces Inversion des dépendances Architecturer et concevoir pour faciliter les tests :warning: En construction\nQualité du code La qualité de code influence la rapidité ainsi que la facilité à laquelle de nouvelles fonctionnalités peuvent être développées.\nChez DGEX Solutions, nous avons adopté une partie des pratiques issues de l’extrême programming.\nTests unitaires Chaque portion du code est testée unitairement selon le composant et son language utilisé.\nNous .\nAujourd’hui, nous disposons de 2 catégories de tests :\nles tests unitaires les tests d’intégration Travail en binôme Nous pratiquons le travail en binôme de façon assez libre. Cette pratique possède les avantages suivants :\nreview et commentaires du code en temps réel crée et maintient la qualité augmente et élargit les compétences de toute l’équipe Propriété collective et normes de codage Les objectifs sous jacents sont les suivants :\nChaque contributeur doit pouvoir ajouter une fonctionnalité, corriger un bug, améliorer la conception ou refactorer le code. Chacun doit pouvoir comprendre et maintenir la qualité de chacun des composants Pour atteindre ces objectifs, nous faisons en sorte que l’ensemble des équipes ait les moyens de s’approprier le code et d’y contribuer facilement.\nCela passe par une constante remise en question de l’accès aux informations pour :\ncomprendre le projet comprendre le métier contribuer au code participer à la conception Qualité du système Alors que la qualité de la conception et du code garantissent que les artefacts du système peuvent être facilement compris et modifiés, la qualité du système confirme que le système fonctionne comme prévu et que tout le monde est aligné sur les modifications à apporter.\nS’aligner pour accélérer Nos pratiques Agiles et notamment nos pratiques SAFe créent un alignement entre les différentes équipes sur les objectifs à atteindre au niveau système. Cela crée de la cohésion et permet d’optimiser le flux de développement du système dans sa globalité.\nAu niveau de l’équipe, il est également possible de s’aligner en utilisant le Behavior-Driven Development. Il s’agit d’une pratique collaborative où le Product Owner et les membres de l’équipe s’accordent sur le comportement précis d’une histoire ou d’une fonctionnalité. L’application de BDD aide les développeurs à créer le bon comportement dès la première fois et réduit les reprises et les erreurs. Aujourd’hui, nous ne pratiquons pas de BDD.\nIntegration continue Notre système d’intégration continue fonctionne sous Github via l’utilisation d’actions.\nLes tests unitaires Chaque composant du monorepo possède sa propre action Github permettant de :\nlancer les tests unitaires lancer une analyse de couverture du code via Codecov lancer un contrôle sur le respect de règles de codifications via Checkstyle Voici la liste de chaque composant :\napi core chartos editoast front Les tests d’intégration Nous appliquons des tests d’intégration à chacun de nos systèmes.\n:warning: En construction\nQualité du versionnement Gestion des versions Vous pouvez trouver plus de détails sur cette page.\nVersionnement à la demande Le versionnement à la demande est le processus qui déploie de nouvelles fonctionnalités en production et les publie immédiatement ou progressivement en fonction de la demande des clients.\nAujourd’hui, en raison de contrainte d’accès à des données privées, la partie Déploiement Continue est gérée dans un repository privé à part.\nOSRD est déployé de façon continue, pour chaque commit réalisé sur la branche dev.\nAucun mécanisme de versionnement n’est aujourd’hui utilisé sur Github.\nDefinition of Done La Definition of Done (DoD) est une liste claire et concise d’exigences à respecter pour qu’une fonctionnalité développée par l’équipe puisse être qualifiée de “faite”.\nLà où nos critères d’acceptance s’appliquent de façon unique à toutes nos fonctionnalités, la Definition of Done est une liste unique pour chaque story.\nNous utilisons des templates Github afin de garantir que chaque ticket est correctement structuré autour de la DoD et des critères d’acceptance :\nfeature enabler story user story## Qualité intégrée ","categories":"","description":"Gestion de la qualité","excerpt":"Gestion de la qualité","ref":"/osrd-website/fr/developers/internals/quality/","tags":"","title":"Qualité"},{"body":"Le programme OSRD est composé d’un ensemble de projets, chacun concourant au développement d’une ou plusieurs solutions.\nLes différents projets du programme se complémentent les uns les autres pour aider le programme à réaliser son ambition : Développer la nouvelle génération d’outils de conception et de simulation ferroviaire.\nVous êtes au bon endroit si vous voulez en savoir plus sur la façon dont nous sommes organisés : Programme, ainsi que sur les solutions que nous développons : Projet/solutions.\nOSRD Design your jouney\n","categories":"","description":"","excerpt":"Le programme OSRD est composé d’un ensemble de projets, chacun …","ref":"/osrd-website/fr/who-we-are/","tags":"","title":"Qui sommes-nous ?"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/search/","tags":"","title":"Search Results"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/en/tags/","tags":"","title":"Tags"},{"body":"","categories":"","description":"","excerpt":"","ref":"/osrd-website/fr/tags/","tags":"","title":"Tags"},{"body":"Documentation Javadoc du projet Core dans OSRD\n","categories":"","description":"Documentation Javadoc du projet Core dans OSRD","excerpt":"Documentation Javadoc du projet Core dans OSRD","ref":"/osrd-website/fr/developers/internals/documentation/","tags":"","title":"Technical documentation"},{"body":" Users La nouvelle génération d'outils de simulation et de conception ferroviaire. Forum/Chat Auxiliary software Documentation Auxiliary software ","categories":"","description":"","excerpt":" Users La nouvelle génération d'outils de simulation et de conception …","ref":"/osrd-website/en/users/","tags":"","title":"Users"},{"body":" Utilisateurs La nouvelle génération d'outils de simulation et de conception ferroviaire. Forum/Chat Logiciels auxiliaires Documentation Logiciels auxiliaires ","categories":"","description":"","excerpt":" Utilisateurs La nouvelle génération d'outils de simulation et de …","ref":"/osrd-website/fr/users/","tags":"","title":"Utilisateurs"},{"body":"The OSRD program is composed of a set of projects, each contributing to the development of one or more solutions.\nThe different projects of the program complement each other to help the program achieve its ambition: To develop the next generation of railway design and simulation tools.\nYou are at the right place if you want to know more about how we are organized: Program, as well as about the solutions we develop: Project/solutions.\nOSRD Design your jouney\n","categories":"","description":"","excerpt":"The OSRD program is composed of a set of projects, each contributing …","ref":"/osrd-website/en/who-we-are/","tags":"","title":"Who we are?"}]